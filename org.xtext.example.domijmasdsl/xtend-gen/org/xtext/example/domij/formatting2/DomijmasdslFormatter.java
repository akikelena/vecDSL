/**
 * generated by Xtext 2.27.0
 */
package org.xtext.example.domij.formatting2;

import com.google.inject.Inject;
import java.util.Arrays;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.formatting2.AbstractFormatter2;
import org.eclipse.xtext.formatting2.IFormattableDocument;
import org.eclipse.xtext.resource.XtextResource;
import org.eclipse.xtext.xbase.lib.Extension;
import org.xtext.example.domij.services.DomijmasdslGrammarAccess;
import vecdslMM.Concept;
import vecdslMM.Create;
import vecdslMM.Method;
import vecdslMM.Script;

@SuppressWarnings("all")
public class DomijmasdslFormatter extends AbstractFormatter2 {
  @Inject
  @Extension
  private DomijmasdslGrammarAccess _domijmasdslGrammarAccess;

  protected void _format(final Script script, @Extension final IFormattableDocument document) {
    EList<Method> _methods = script.getMethods();
    for (final Method method : _methods) {
      document.<Method>format(method);
    }
  }

  protected void _format(final Create _create, @Extension final IFormattableDocument document) {
    document.<Concept>format(_create.getDdlConcept());
  }

  public void format(final Object _create, final IFormattableDocument document) {
    if (_create instanceof XtextResource) {
      _format((XtextResource)_create, document);
      return;
    } else if (_create instanceof Create) {
      _format((Create)_create, document);
      return;
    } else if (_create instanceof Script) {
      _format((Script)_create, document);
      return;
    } else if (_create instanceof EObject) {
      _format((EObject)_create, document);
      return;
    } else if (_create == null) {
      _format((Void)null, document);
      return;
    } else if (_create != null) {
      _format(_create, document);
      return;
    } else {
      throw new IllegalArgumentException("Unhandled parameter types: " +
        Arrays.<Object>asList(_create, document).toString());
    }
  }
}
