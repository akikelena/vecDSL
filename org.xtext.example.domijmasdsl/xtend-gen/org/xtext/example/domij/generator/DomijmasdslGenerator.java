/**
 * generated by Xtext 2.27.0
 */
package org.xtext.example.domij.generator;

import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.xtext.generator.AbstractGenerator;
import org.eclipse.xtext.generator.IFileSystemAccess2;
import org.eclipse.xtext.generator.IGeneratorContext;
import vecdslMM.Script;

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
@SuppressWarnings("all")
public class DomijmasdslGenerator extends AbstractGenerator {
  @Override
  public void doGenerate(final Resource resource, final IFileSystemAccess2 fsa, final IGeneratorContext context) {
    EList<EObject> _contents = resource.getContents();
    for (final EObject eObject : _contents) {
      if ((eObject instanceof Script)) {
        final Script script = ((Script) eObject);
        final String vendorName = script.getVendor().toString();
        if (vendorName != null) {
          switch (vendorName) {
            case "PINECONE":
              break;
            case "MILVUS":
              final MilvusGenerator milvusGenerator = new MilvusGenerator();
              milvusGenerator.generate(script, fsa);
              break;
            case "CHROMA":
              break;
            case "WEAVIATE":
              break;
            case "QDRANT":
              break;
            default:
              throw new IllegalArgumentException(("Unsupported vendor: " + vendorName));
          }
        } else {
          throw new IllegalArgumentException(("Unsupported vendor: " + vendorName));
        }
      }
    }
  }
}
