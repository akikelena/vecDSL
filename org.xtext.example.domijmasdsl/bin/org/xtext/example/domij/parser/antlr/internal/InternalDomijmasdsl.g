/*
 * generated by Xtext 2.27.0
 */
grammar InternalDomijmasdsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.domij.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.domij.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.domij.services.DomijmasdslGrammarAccess;

}

@parser::members {

 	private DomijmasdslGrammarAccess grammarAccess;

    public InternalDomijmasdslParser(TokenStream input, DomijmasdslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Script";
   	}

   	@Override
   	protected DomijmasdslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleScript
entryRuleScript returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getScriptRule()); }
	iv_ruleScript=ruleScript
	{ $current=$iv_ruleScript.current; }
	EOF;

// Rule Script
ruleScript returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='SCRIPT'
		{
			newLeafNode(otherlv_0, grammarAccess.getScriptAccess().getSCRIPTKeyword_0());
		}
		otherlv_1='FOR'
		{
			newLeafNode(otherlv_1, grammarAccess.getScriptAccess().getFORKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getScriptAccess().getVendorEVendorNameEnumRuleCall_2_0());
				}
				lv_vendor_2_0=ruleEVendorName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getScriptRule());
					}
					set(
						$current,
						"vendor",
						lv_vendor_2_0,
						"org.xtext.example.domij.Domijmasdsl.EVendorName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3='WITH'
			{
				newLeafNode(otherlv_3, grammarAccess.getScriptAccess().getWITHKeyword_3_0());
			}
			otherlv_4='METHODS'
			{
				newLeafNode(otherlv_4, grammarAccess.getScriptAccess().getMETHODSKeyword_3_1());
			}
			otherlv_5='['
			{
				newLeafNode(otherlv_5, grammarAccess.getScriptAccess().getLeftSquareBracketKeyword_3_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getScriptAccess().getMethodsMethodParserRuleCall_3_3_0());
					}
					lv_methods_6_0=ruleMethod
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getScriptRule());
						}
						add(
							$current,
							"methods",
							lv_methods_6_0,
							"org.xtext.example.domij.Domijmasdsl.Method");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getScriptAccess().getMethodsMethodParserRuleCall_3_4_0());
					}
					lv_methods_7_0=ruleMethod
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getScriptRule());
						}
						add(
							$current,
							"methods",
							lv_methods_7_0,
							"org.xtext.example.domij.Domijmasdsl.Method");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_8=']'
			{
				newLeafNode(otherlv_8, grammarAccess.getScriptAccess().getRightSquareBracketKeyword_3_5());
			}
		)?
	)
;

// Entry rule entryRuleMethod
entryRuleMethod returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMethodRule()); }
	iv_ruleMethod=ruleMethod
	{ $current=$iv_ruleMethod.current; }
	EOF;

// Rule Method
ruleMethod returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getMethodAccess().getCreateParserRuleCall_0());
		}
		this_Create_0=ruleCreate
		{
			$current = $this_Create_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getMethodAccess().getAlterParserRuleCall_1());
		}
		this_Alter_1=ruleAlter
		{
			$current = $this_Alter_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getMethodAccess().getDropParserRuleCall_2());
		}
		this_Drop_2=ruleDrop
		{
			$current = $this_Drop_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getMethodAccess().getInsertParserRuleCall_3());
		}
		this_Insert_3=ruleInsert
		{
			$current = $this_Insert_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getMethodAccess().getUpdateParserRuleCall_4());
		}
		this_Update_4=ruleUpdate
		{
			$current = $this_Update_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getMethodAccess().getDeleteParserRuleCall_5());
		}
		this_Delete_5=ruleDelete
		{
			$current = $this_Delete_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getMethodAccess().getVectorSearchParserRuleCall_6());
		}
		this_VectorSearch_6=ruleVectorSearch
		{
			$current = $this_VectorSearch_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getMethodAccess().getNonVectorSearchParserRuleCall_7());
		}
		this_NonVectorSearch_7=ruleNonVectorSearch
		{
			$current = $this_NonVectorSearch_7.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleConcept
entryRuleConcept returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConceptRule()); }
	iv_ruleConcept=ruleConcept
	{ $current=$iv_ruleConcept.current; }
	EOF;

// Rule Concept
ruleConcept returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getConceptAccess().getVectorDatabaseParserRuleCall_0());
		}
		this_VectorDatabase_0=ruleVectorDatabase
		{
			$current = $this_VectorDatabase_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getConceptAccess().getClusterParserRuleCall_1());
		}
		this_Cluster_1=ruleCluster
		{
			$current = $this_Cluster_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getConceptAccess().getVectorCollectionParserRuleCall_2());
		}
		this_VectorCollection_2=ruleVectorCollection
		{
			$current = $this_VectorCollection_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getConceptAccess().getPartitionParserRuleCall_3());
		}
		this_Partition_3=rulePartition
		{
			$current = $this_Partition_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getConceptAccess().getEmbeddingModelParserRuleCall_4());
		}
		this_EmbeddingModel_4=ruleEmbeddingModel
		{
			$current = $this_EmbeddingModel_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getConceptAccess().getFieldLimitParserRuleCall_5());
		}
		this_FieldLimit_5=ruleFieldLimit
		{
			$current = $this_FieldLimit_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getConceptAccess().getCollectionLimitParserRuleCall_6());
		}
		this_CollectionLimit_6=ruleCollectionLimit
		{
			$current = $this_CollectionLimit_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getConceptAccess().getClusterLimitParserRuleCall_7());
		}
		this_ClusterLimit_7=ruleClusterLimit
		{
			$current = $this_ClusterLimit_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getConceptAccess().getIndexLimitParserRuleCall_8());
		}
		this_IndexLimit_8=ruleIndexLimit
		{
			$current = $this_IndexLimit_8.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getConceptAccess().getVectorIndexParserRuleCall_9());
		}
		this_VectorIndex_9=ruleVectorIndex
		{
			$current = $this_VectorIndex_9.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getConceptAccess().getNonVectorIndexParserRuleCall_10());
		}
		this_NonVectorIndex_10=ruleNonVectorIndex
		{
			$current = $this_NonVectorIndex_10.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getConceptAccess().getNonVectorFieldParserRuleCall_11());
		}
		this_NonVectorField_11=ruleNonVectorField
		{
			$current = $this_NonVectorField_11.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getConceptAccess().getVectorFieldParserRuleCall_12());
		}
		this_VectorField_12=ruleVectorField
		{
			$current = $this_VectorField_12.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleCreate
entryRuleCreate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCreateRule()); }
	iv_ruleCreate=ruleCreate
	{ $current=$iv_ruleCreate.current; }
	EOF;

// Rule Create
ruleCreate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getCreateAccess().getCreateAction_0(),
					$current);
			}
		)
		otherlv_1='CREATE'
		{
			newLeafNode(otherlv_1, grammarAccess.getCreateAccess().getCREATEKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCreateAccess().getDdlConceptConceptParserRuleCall_2_0());
				}
				lv_ddlConcept_2_0=ruleConcept
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCreateRule());
					}
					set(
						$current,
						"ddlConcept",
						lv_ddlConcept_2_0,
						"org.xtext.example.domij.Domijmasdsl.Concept");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3='['
			{
				newLeafNode(otherlv_3, grammarAccess.getCreateAccess().getLeftSquareBracketKeyword_3_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCreateRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getCreateAccess().getDdlNodeDdlMethodCrossReference_3_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCreateRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getCreateAccess().getDdlNodeDdlMethodCrossReference_3_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_6=']'
			{
				newLeafNode(otherlv_6, grammarAccess.getCreateAccess().getRightSquareBracketKeyword_3_3());
			}
		)?
	)
;

// Entry rule entryRuleAlter
entryRuleAlter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAlterRule()); }
	iv_ruleAlter=ruleAlter
	{ $current=$iv_ruleAlter.current; }
	EOF;

// Rule Alter
ruleAlter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getAlterAccess().getAlterAction_0(),
					$current);
			}
		)
		otherlv_1='ALTER'
		{
			newLeafNode(otherlv_1, grammarAccess.getAlterAccess().getALTERKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAlterAccess().getDdlConceptConceptParserRuleCall_2_0());
				}
				lv_ddlConcept_2_0=ruleConcept
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAlterRule());
					}
					set(
						$current,
						"ddlConcept",
						lv_ddlConcept_2_0,
						"org.xtext.example.domij.Domijmasdsl.Concept");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3='['
			{
				newLeafNode(otherlv_3, grammarAccess.getAlterAccess().getLeftSquareBracketKeyword_3_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAlterRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getAlterAccess().getDdlNodeDdlMethodCrossReference_3_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAlterRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getAlterAccess().getDdlNodeDdlMethodCrossReference_3_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_6=']'
			{
				newLeafNode(otherlv_6, grammarAccess.getAlterAccess().getRightSquareBracketKeyword_3_3());
			}
		)?
		otherlv_7='WHEN'
		{
			newLeafNode(otherlv_7, grammarAccess.getAlterAccess().getWHENKeyword_4());
		}
		otherlv_8='['
		{
			newLeafNode(otherlv_8, grammarAccess.getAlterAccess().getLeftSquareBracketKeyword_5());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAlterRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getAlterAccess().getAlterCondFilterCrossReference_6_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_10=','
			{
				newLeafNode(otherlv_10, grammarAccess.getAlterAccess().getCommaKeyword_7_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAlterRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getAlterAccess().getAlterCondFilterCrossReference_7_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_12=']'
		{
			newLeafNode(otherlv_12, grammarAccess.getAlterAccess().getRightSquareBracketKeyword_8());
		}
		otherlv_13=';'
		{
			newLeafNode(otherlv_13, grammarAccess.getAlterAccess().getSemicolonKeyword_9());
		}
	)
;

// Entry rule entryRuleDrop
entryRuleDrop returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDropRule()); }
	iv_ruleDrop=ruleDrop
	{ $current=$iv_ruleDrop.current; }
	EOF;

// Rule Drop
ruleDrop returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDropAccess().getDropAction_0(),
					$current);
			}
		)
		otherlv_1='DROP'
		{
			newLeafNode(otherlv_1, grammarAccess.getDropAccess().getDROPKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDropAccess().getDdlConceptConceptParserRuleCall_2_0());
				}
				lv_ddlConcept_2_0=ruleConcept
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDropRule());
					}
					set(
						$current,
						"ddlConcept",
						lv_ddlConcept_2_0,
						"org.xtext.example.domij.Domijmasdsl.Concept");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=';'
			{
				newLeafNode(otherlv_3, grammarAccess.getDropAccess().getSemicolonKeyword_3());
			}
		)?
		(
			otherlv_4='['
			{
				newLeafNode(otherlv_4, grammarAccess.getDropAccess().getLeftSquareBracketKeyword_4_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDropRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getDropAccess().getDdlNodeDdlMethodCrossReference_4_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDropRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getDropAccess().getDdlNodeDdlMethodCrossReference_4_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_7=']'
			{
				newLeafNode(otherlv_7, grammarAccess.getDropAccess().getRightSquareBracketKeyword_4_3());
			}
		)?
		(
			otherlv_8='WHEN'
			{
				newLeafNode(otherlv_8, grammarAccess.getDropAccess().getWHENKeyword_5());
			}
		)?
		(
			otherlv_9='['
			{
				newLeafNode(otherlv_9, grammarAccess.getDropAccess().getLeftSquareBracketKeyword_6_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDropRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getDropAccess().getDropCondFilterCrossReference_6_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_11=','
				{
					newLeafNode(otherlv_11, grammarAccess.getDropAccess().getCommaKeyword_6_2_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getDropRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getDropAccess().getDropCondFilterCrossReference_6_2_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_13=']'
			{
				newLeafNode(otherlv_13, grammarAccess.getDropAccess().getRightSquareBracketKeyword_6_3());
			}
		)?
		otherlv_14=';'
		{
			newLeafNode(otherlv_14, grammarAccess.getDropAccess().getSemicolonKeyword_7());
		}
	)
;

// Entry rule entryRuleInsert
entryRuleInsert returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInsertRule()); }
	iv_ruleInsert=ruleInsert
	{ $current=$iv_ruleInsert.current; }
	EOF;

// Rule Insert
ruleInsert returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='INSERT'
		{
			newLeafNode(otherlv_0, grammarAccess.getInsertAccess().getINSERTKeyword_0());
		}
		otherlv_1='INTO'
		{
			newLeafNode(otherlv_1, grammarAccess.getInsertAccess().getINTOKeyword_1());
		}
		otherlv_2='COLLECTION'
		{
			newLeafNode(otherlv_2, grammarAccess.getInsertAccess().getCOLLECTIONKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInsertAccess().getDmlCollectionVectorCollectionParserRuleCall_3_0());
				}
				lv_dmlCollection_3_0=ruleVectorCollection
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInsertRule());
					}
					set(
						$current,
						"dmlCollection",
						lv_dmlCollection_3_0,
						"org.xtext.example.domij.Domijmasdsl.VectorCollection");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='FROM'
		{
			newLeafNode(otherlv_4, grammarAccess.getInsertAccess().getFROMKeyword_4());
		}
		otherlv_5='path'
		{
			newLeafNode(otherlv_5, grammarAccess.getInsertAccess().getPathKeyword_5());
		}
		otherlv_6='='
		{
			newLeafNode(otherlv_6, grammarAccess.getInsertAccess().getEqualsSignKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInsertAccess().getPathEStringParserRuleCall_7_0());
				}
				lv_path_7_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInsertRule());
					}
					set(
						$current,
						"path",
						lv_path_7_0,
						"org.xtext.example.domij.Domijmasdsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_8='number'
			{
				newLeafNode(otherlv_8, grammarAccess.getInsertAccess().getNumberKeyword_8_0());
			}
			otherlv_9='of'
			{
				newLeafNode(otherlv_9, grammarAccess.getInsertAccess().getOfKeyword_8_1());
			}
			otherlv_10='records'
			{
				newLeafNode(otherlv_10, grammarAccess.getInsertAccess().getRecordsKeyword_8_2());
			}
			otherlv_11='='
			{
				newLeafNode(otherlv_11, grammarAccess.getInsertAccess().getEqualsSignKeyword_8_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInsertAccess().getNofRecordsEIntParserRuleCall_8_4_0());
					}
					lv_nofRecords_12_0=ruleEInt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInsertRule());
						}
						set(
							$current,
							"nofRecords",
							lv_nofRecords_12_0,
							"org.xtext.example.domij.Domijmasdsl.EInt");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_13=';'
		{
			newLeafNode(otherlv_13, grammarAccess.getInsertAccess().getSemicolonKeyword_9());
		}
	)
;

// Entry rule entryRuleUpdate
entryRuleUpdate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUpdateRule()); }
	iv_ruleUpdate=ruleUpdate
	{ $current=$iv_ruleUpdate.current; }
	EOF;

// Rule Update
ruleUpdate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='UPDATE'
		{
			newLeafNode(otherlv_0, grammarAccess.getUpdateAccess().getUPDATEKeyword_0());
		}
		otherlv_1='COLLECTION'
		{
			newLeafNode(otherlv_1, grammarAccess.getUpdateAccess().getCOLLECTIONKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUpdateAccess().getDmlCollectionVectorCollectionParserRuleCall_2_0());
				}
				lv_dmlCollection_2_0=ruleVectorCollection
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUpdateRule());
					}
					set(
						$current,
						"dmlCollection",
						lv_dmlCollection_2_0,
						"org.xtext.example.domij.Domijmasdsl.VectorCollection");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='FROM'
		{
			newLeafNode(otherlv_3, grammarAccess.getUpdateAccess().getFROMKeyword_3());
		}
		otherlv_4='path'
		{
			newLeafNode(otherlv_4, grammarAccess.getUpdateAccess().getPathKeyword_4());
		}
		otherlv_5='='
		{
			newLeafNode(otherlv_5, grammarAccess.getUpdateAccess().getEqualsSignKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUpdateAccess().getPathEStringParserRuleCall_6_0());
				}
				lv_path_6_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUpdateRule());
					}
					set(
						$current,
						"path",
						lv_path_6_0,
						"org.xtext.example.domij.Domijmasdsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_7='number'
			{
				newLeafNode(otherlv_7, grammarAccess.getUpdateAccess().getNumberKeyword_7_0());
			}
			otherlv_8='of'
			{
				newLeafNode(otherlv_8, grammarAccess.getUpdateAccess().getOfKeyword_7_1());
			}
			otherlv_9='records'
			{
				newLeafNode(otherlv_9, grammarAccess.getUpdateAccess().getRecordsKeyword_7_2());
			}
			otherlv_10='='
			{
				newLeafNode(otherlv_10, grammarAccess.getUpdateAccess().getEqualsSignKeyword_7_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getUpdateAccess().getNofRecordsEIntParserRuleCall_7_4_0());
					}
					lv_nofRecords_11_0=ruleEInt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUpdateRule());
						}
						set(
							$current,
							"nofRecords",
							lv_nofRecords_11_0,
							"org.xtext.example.domij.Domijmasdsl.EInt");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_12='WHEN'
		{
			newLeafNode(otherlv_12, grammarAccess.getUpdateAccess().getWHENKeyword_8());
		}
		otherlv_13='['
		{
			newLeafNode(otherlv_13, grammarAccess.getUpdateAccess().getLeftSquareBracketKeyword_9());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUpdateRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getUpdateAccess().getUpdateCondFilterCrossReference_10_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_15=','
			{
				newLeafNode(otherlv_15, grammarAccess.getUpdateAccess().getCommaKeyword_11_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUpdateRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getUpdateAccess().getUpdateCondFilterCrossReference_11_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_17=']'
		{
			newLeafNode(otherlv_17, grammarAccess.getUpdateAccess().getRightSquareBracketKeyword_12());
		}
		otherlv_18=';'
		{
			newLeafNode(otherlv_18, grammarAccess.getUpdateAccess().getSemicolonKeyword_13());
		}
	)
;

// Entry rule entryRuleDelete
entryRuleDelete returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeleteRule()); }
	iv_ruleDelete=ruleDelete
	{ $current=$iv_ruleDelete.current; }
	EOF;

// Rule Delete
ruleDelete returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='DELETE'
		{
			newLeafNode(otherlv_0, grammarAccess.getDeleteAccess().getDELETEKeyword_0());
		}
		otherlv_1='IN'
		{
			newLeafNode(otherlv_1, grammarAccess.getDeleteAccess().getINKeyword_1());
		}
		otherlv_2='COLLECTION'
		{
			newLeafNode(otherlv_2, grammarAccess.getDeleteAccess().getCOLLECTIONKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDeleteAccess().getDmlCollectionVectorCollectionParserRuleCall_3_0());
				}
				lv_dmlCollection_3_0=ruleVectorCollection
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeleteRule());
					}
					set(
						$current,
						"dmlCollection",
						lv_dmlCollection_3_0,
						"org.xtext.example.domij.Domijmasdsl.VectorCollection");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4='WHEN'
			{
				newLeafNode(otherlv_4, grammarAccess.getDeleteAccess().getWHENKeyword_4_0());
			}
			otherlv_5='['
			{
				newLeafNode(otherlv_5, grammarAccess.getDeleteAccess().getLeftSquareBracketKeyword_4_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDeleteRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getDeleteAccess().getDeleteCondFilterCrossReference_4_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_7=','
				{
					newLeafNode(otherlv_7, grammarAccess.getDeleteAccess().getCommaKeyword_4_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getDeleteRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getDeleteAccess().getDeleteCondFilterCrossReference_4_3_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_9=']'
			{
				newLeafNode(otherlv_9, grammarAccess.getDeleteAccess().getRightSquareBracketKeyword_4_4());
			}
		)?
		otherlv_10=';'
		{
			newLeafNode(otherlv_10, grammarAccess.getDeleteAccess().getSemicolonKeyword_5());
		}
	)
;

// Entry rule entryRuleVectorSearch
entryRuleVectorSearch returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVectorSearchRule()); }
	iv_ruleVectorSearch=ruleVectorSearch
	{ $current=$iv_ruleVectorSearch.current; }
	EOF;

// Rule VectorSearch
ruleVectorSearch returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='VECTOR'
		{
			newLeafNode(otherlv_0, grammarAccess.getVectorSearchAccess().getVECTORKeyword_0());
		}
		otherlv_1='SEARCH'
		{
			newLeafNode(otherlv_1, grammarAccess.getVectorSearchAccess().getSEARCHKeyword_1());
		}
		otherlv_2='IN'
		{
			newLeafNode(otherlv_2, grammarAccess.getVectorSearchAccess().getINKeyword_2());
		}
		otherlv_3='COLLECTION'
		{
			newLeafNode(otherlv_3, grammarAccess.getVectorSearchAccess().getCOLLECTIONKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVectorSearchAccess().getQueryCollectionVectorCollectionParserRuleCall_4_0());
				}
				lv_queryCollection_4_0=ruleVectorCollection
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVectorSearchRule());
					}
					set(
						$current,
						"queryCollection",
						lv_queryCollection_4_0,
						"org.xtext.example.domij.Domijmasdsl.VectorCollection");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='top'
		{
			newLeafNode(otherlv_5, grammarAccess.getVectorSearchAccess().getTopKeyword_5());
		}
		otherlv_6='K'
		{
			newLeafNode(otherlv_6, grammarAccess.getVectorSearchAccess().getKKeyword_6());
		}
		otherlv_7='='
		{
			newLeafNode(otherlv_7, grammarAccess.getVectorSearchAccess().getEqualsSignKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVectorSearchAccess().getTopKEIntParserRuleCall_8_0());
				}
				lv_topK_8_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVectorSearchRule());
					}
					set(
						$current,
						"topK",
						lv_topK_8_0,
						"org.xtext.example.domij.Domijmasdsl.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_9='metric'
		{
			newLeafNode(otherlv_9, grammarAccess.getVectorSearchAccess().getMetricKeyword_9());
		}
		otherlv_10='='
		{
			newLeafNode(otherlv_10, grammarAccess.getVectorSearchAccess().getEqualsSignKeyword_10());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVectorSearchAccess().getMetricEMetricTypeEnumRuleCall_11_0());
				}
				lv_metric_11_0=ruleEMetricType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVectorSearchRule());
					}
					set(
						$current,
						"metric",
						lv_metric_11_0,
						"org.xtext.example.domij.Domijmasdsl.EMetricType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_12='numUnitsProbe'
			{
				newLeafNode(otherlv_12, grammarAccess.getVectorSearchAccess().getNumUnitsProbeKeyword_12_0());
			}
			otherlv_13='='
			{
				newLeafNode(otherlv_13, grammarAccess.getVectorSearchAccess().getEqualsSignKeyword_12_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVectorSearchAccess().getNumUnitsProbeEIntParserRuleCall_12_2_0());
					}
					lv_numUnitsProbe_14_0=ruleEInt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVectorSearchRule());
						}
						set(
							$current,
							"numUnitsProbe",
							lv_numUnitsProbe_14_0,
							"org.xtext.example.domij.Domijmasdsl.EInt");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_15=';'
		{
			newLeafNode(otherlv_15, grammarAccess.getVectorSearchAccess().getSemicolonKeyword_13());
		}
		otherlv_16='OUT'
		{
			newLeafNode(otherlv_16, grammarAccess.getVectorSearchAccess().getOUTKeyword_14());
		}
		otherlv_17='FIELDS'
		{
			newLeafNode(otherlv_17, grammarAccess.getVectorSearchAccess().getFIELDSKeyword_15());
		}
		otherlv_18='('
		{
			newLeafNode(otherlv_18, grammarAccess.getVectorSearchAccess().getLeftParenthesisKeyword_16());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVectorSearchRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getVectorSearchAccess().getOutputFieldsFieldCrossReference_17_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_20=','
			{
				newLeafNode(otherlv_20, grammarAccess.getVectorSearchAccess().getCommaKeyword_18_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getVectorSearchRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getVectorSearchAccess().getOutputFieldsFieldCrossReference_18_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_22=')'
		{
			newLeafNode(otherlv_22, grammarAccess.getVectorSearchAccess().getRightParenthesisKeyword_19());
		}
		(
			otherlv_23='WITH'
			{
				newLeafNode(otherlv_23, grammarAccess.getVectorSearchAccess().getWITHKeyword_20_0());
			}
			otherlv_24='FILTERS'
			{
				newLeafNode(otherlv_24, grammarAccess.getVectorSearchAccess().getFILTERSKeyword_20_1());
			}
			otherlv_25='('
			{
				newLeafNode(otherlv_25, grammarAccess.getVectorSearchAccess().getLeftParenthesisKeyword_20_2());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getVectorSearchRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getVectorSearchAccess().getVecSearchFiltersFilterCrossReference_20_3_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_27=','
				{
					newLeafNode(otherlv_27, grammarAccess.getVectorSearchAccess().getCommaKeyword_20_4_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getVectorSearchRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getVectorSearchAccess().getVecSearchFiltersFilterCrossReference_20_4_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_29=')'
			{
				newLeafNode(otherlv_29, grammarAccess.getVectorSearchAccess().getRightParenthesisKeyword_20_5());
			}
		)?
		otherlv_30=';'
		{
			newLeafNode(otherlv_30, grammarAccess.getVectorSearchAccess().getSemicolonKeyword_21());
		}
	)
;

// Entry rule entryRuleNonVectorSearch
entryRuleNonVectorSearch returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNonVectorSearchRule()); }
	iv_ruleNonVectorSearch=ruleNonVectorSearch
	{ $current=$iv_ruleNonVectorSearch.current; }
	EOF;

// Rule NonVectorSearch
ruleNonVectorSearch returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='QUERY'
		{
			newLeafNode(otherlv_0, grammarAccess.getNonVectorSearchAccess().getQUERYKeyword_0());
		}
		otherlv_1='ON'
		{
			newLeafNode(otherlv_1, grammarAccess.getNonVectorSearchAccess().getONKeyword_1());
		}
		otherlv_2='COLLECTION'
		{
			newLeafNode(otherlv_2, grammarAccess.getNonVectorSearchAccess().getCOLLECTIONKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNonVectorSearchAccess().getQueryCollectionVectorCollectionParserRuleCall_3_0());
				}
				lv_queryCollection_3_0=ruleVectorCollection
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNonVectorSearchRule());
					}
					set(
						$current,
						"queryCollection",
						lv_queryCollection_3_0,
						"org.xtext.example.domij.Domijmasdsl.VectorCollection");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='top'
		{
			newLeafNode(otherlv_4, grammarAccess.getNonVectorSearchAccess().getTopKeyword_4());
		}
		otherlv_5='K'
		{
			newLeafNode(otherlv_5, grammarAccess.getNonVectorSearchAccess().getKKeyword_5());
		}
		otherlv_6='='
		{
			newLeafNode(otherlv_6, grammarAccess.getNonVectorSearchAccess().getEqualsSignKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNonVectorSearchAccess().getTopKEIntParserRuleCall_7_0());
				}
				lv_topK_7_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNonVectorSearchRule());
					}
					set(
						$current,
						"topK",
						lv_topK_7_0,
						"org.xtext.example.domij.Domijmasdsl.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_8='OUT'
		{
			newLeafNode(otherlv_8, grammarAccess.getNonVectorSearchAccess().getOUTKeyword_8());
		}
		otherlv_9='FIELDS'
		{
			newLeafNode(otherlv_9, grammarAccess.getNonVectorSearchAccess().getFIELDSKeyword_9());
		}
		otherlv_10='('
		{
			newLeafNode(otherlv_10, grammarAccess.getNonVectorSearchAccess().getLeftParenthesisKeyword_10());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNonVectorSearchRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getNonVectorSearchAccess().getOutputFieldsFieldCrossReference_11_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_12=','
			{
				newLeafNode(otherlv_12, grammarAccess.getNonVectorSearchAccess().getCommaKeyword_12_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNonVectorSearchRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getNonVectorSearchAccess().getOutputFieldsFieldCrossReference_12_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_14=')'
		{
			newLeafNode(otherlv_14, grammarAccess.getNonVectorSearchAccess().getRightParenthesisKeyword_13());
		}
		(
			otherlv_15='WITH'
			{
				newLeafNode(otherlv_15, grammarAccess.getNonVectorSearchAccess().getWITHKeyword_14_0());
			}
			otherlv_16='FILTERS'
			{
				newLeafNode(otherlv_16, grammarAccess.getNonVectorSearchAccess().getFILTERSKeyword_14_1());
			}
			otherlv_17='['
			{
				newLeafNode(otherlv_17, grammarAccess.getNonVectorSearchAccess().getLeftSquareBracketKeyword_14_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNonVectorSearchAccess().getNonVecFiltersFilterParserRuleCall_14_3_0());
					}
					lv_nonVecFilters_18_0=ruleFilter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNonVectorSearchRule());
						}
						add(
							$current,
							"nonVecFilters",
							lv_nonVecFilters_18_0,
							"org.xtext.example.domij.Domijmasdsl.Filter");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_19=','
				{
					newLeafNode(otherlv_19, grammarAccess.getNonVectorSearchAccess().getCommaKeyword_14_4_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getNonVectorSearchAccess().getNonVecFiltersFilterParserRuleCall_14_4_1_0());
						}
						lv_nonVecFilters_20_0=ruleFilter
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getNonVectorSearchRule());
							}
							add(
								$current,
								"nonVecFilters",
								lv_nonVecFilters_20_0,
								"org.xtext.example.domij.Domijmasdsl.Filter");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_21=']'
			{
				newLeafNode(otherlv_21, grammarAccess.getNonVectorSearchAccess().getRightSquareBracketKeyword_14_5());
			}
		)?
		otherlv_22=';'
		{
			newLeafNode(otherlv_22, grammarAccess.getNonVectorSearchAccess().getSemicolonKeyword_15());
		}
	)
;

// Entry rule entryRuleVectorDatabase
entryRuleVectorDatabase returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVectorDatabaseRule()); }
	iv_ruleVectorDatabase=ruleVectorDatabase
	{ $current=$iv_ruleVectorDatabase.current; }
	EOF;

// Rule VectorDatabase
ruleVectorDatabase returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='VECTOR'
		{
			newLeafNode(otherlv_0, grammarAccess.getVectorDatabaseAccess().getVECTORKeyword_0());
		}
		otherlv_1='DATABASE'
		{
			newLeafNode(otherlv_1, grammarAccess.getVectorDatabaseAccess().getDATABASEKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVectorDatabaseAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVectorDatabaseRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.xtext.example.domij.Domijmasdsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='WITH'
		{
			newLeafNode(otherlv_3, grammarAccess.getVectorDatabaseAccess().getWITHKeyword_3());
		}
		otherlv_4='CONNECTION'
		{
			newLeafNode(otherlv_4, grammarAccess.getVectorDatabaseAccess().getCONNECTIONKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVectorDatabaseAccess().getConnectionConnectionParserRuleCall_5_0());
				}
				lv_connection_5_0=ruleConnection
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVectorDatabaseRule());
					}
					set(
						$current,
						"connection",
						lv_connection_5_0,
						"org.xtext.example.domij.Domijmasdsl.Connection");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_6='description'
			{
				newLeafNode(otherlv_6, grammarAccess.getVectorDatabaseAccess().getDescriptionKeyword_6_0());
			}
			otherlv_7='='
			{
				newLeafNode(otherlv_7, grammarAccess.getVectorDatabaseAccess().getEqualsSignKeyword_6_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVectorDatabaseAccess().getDescriptionEStringParserRuleCall_6_2_0());
					}
					lv_description_8_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVectorDatabaseRule());
						}
						set(
							$current,
							"description",
							lv_description_8_0,
							"org.xtext.example.domij.Domijmasdsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_9='WITH'
			{
				newLeafNode(otherlv_9, grammarAccess.getVectorDatabaseAccess().getWITHKeyword_7_0());
			}
			otherlv_10='CLUSTERS'
			{
				newLeafNode(otherlv_10, grammarAccess.getVectorDatabaseAccess().getCLUSTERSKeyword_7_1());
			}
			otherlv_11='['
			{
				newLeafNode(otherlv_11, grammarAccess.getVectorDatabaseAccess().getLeftSquareBracketKeyword_7_2());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getVectorDatabaseRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getVectorDatabaseAccess().getClustersClusterCrossReference_7_3_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getVectorDatabaseRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getVectorDatabaseAccess().getClustersClusterCrossReference_7_4_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_14=']'
			{
				newLeafNode(otherlv_14, grammarAccess.getVectorDatabaseAccess().getRightSquareBracketKeyword_7_5());
			}
		)?
	)
;

// Entry rule entryRuleCluster
entryRuleCluster returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClusterRule()); }
	iv_ruleCluster=ruleCluster
	{ $current=$iv_ruleCluster.current; }
	EOF;

// Rule Cluster
ruleCluster returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='CLUSTER'
		{
			newLeafNode(otherlv_0, grammarAccess.getClusterAccess().getCLUSTERKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getClusterAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClusterRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.example.domij.Domijmasdsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='IN'
		{
			newLeafNode(otherlv_2, grammarAccess.getClusterAccess().getINKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getClusterRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getClusterAccess().getVectordbVectorDatabaseCrossReference_3_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4='description'
			{
				newLeafNode(otherlv_4, grammarAccess.getClusterAccess().getDescriptionKeyword_4_0());
			}
			otherlv_5='='
			{
				newLeafNode(otherlv_5, grammarAccess.getClusterAccess().getEqualsSignKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getClusterAccess().getDescriptionEStringParserRuleCall_4_2_0());
					}
					lv_description_6_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getClusterRule());
						}
						set(
							$current,
							"description",
							lv_description_6_0,
							"org.xtext.example.domij.Domijmasdsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_7='number'
			{
				newLeafNode(otherlv_7, grammarAccess.getClusterAccess().getNumberKeyword_5_0());
			}
			otherlv_8='of'
			{
				newLeafNode(otherlv_8, grammarAccess.getClusterAccess().getOfKeyword_5_1());
			}
			otherlv_9='collections'
			{
				newLeafNode(otherlv_9, grammarAccess.getClusterAccess().getCollectionsKeyword_5_2());
			}
			otherlv_10='='
			{
				newLeafNode(otherlv_10, grammarAccess.getClusterAccess().getEqualsSignKeyword_5_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getClusterAccess().getNofCollectionsEIntParserRuleCall_5_4_0());
					}
					lv_nofCollections_11_0=ruleEInt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getClusterRule());
						}
						set(
							$current,
							"nofCollections",
							lv_nofCollections_11_0,
							"org.xtext.example.domij.Domijmasdsl.EInt");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_12='WITH'
			{
				newLeafNode(otherlv_12, grammarAccess.getClusterAccess().getWITHKeyword_6_0());
			}
			otherlv_13='COLLECTIONS'
			{
				newLeafNode(otherlv_13, grammarAccess.getClusterAccess().getCOLLECTIONSKeyword_6_1());
			}
			otherlv_14='['
			{
				newLeafNode(otherlv_14, grammarAccess.getClusterAccess().getLeftSquareBracketKeyword_6_2());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getClusterRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getClusterAccess().getCollectionsVectorCollectionCrossReference_6_3_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getClusterRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getClusterAccess().getCollectionsVectorCollectionCrossReference_6_4_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_17=']'
			{
				newLeafNode(otherlv_17, grammarAccess.getClusterAccess().getRightSquareBracketKeyword_6_5());
			}
		)?
		(
			otherlv_18='WITH'
			{
				newLeafNode(otherlv_18, grammarAccess.getClusterAccess().getWITHKeyword_7_0());
			}
			otherlv_19='CLUSTER'
			{
				newLeafNode(otherlv_19, grammarAccess.getClusterAccess().getCLUSTERKeyword_7_1());
			}
			otherlv_20='LIMITS'
			{
				newLeafNode(otherlv_20, grammarAccess.getClusterAccess().getLIMITSKeyword_7_2());
			}
			otherlv_21='['
			{
				newLeafNode(otherlv_21, grammarAccess.getClusterAccess().getLeftSquareBracketKeyword_7_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getClusterAccess().getClusterLimitsClusterLimitParserRuleCall_7_4_0());
					}
					lv_clusterLimits_22_0=ruleClusterLimit
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getClusterRule());
						}
						add(
							$current,
							"clusterLimits",
							lv_clusterLimits_22_0,
							"org.xtext.example.domij.Domijmasdsl.ClusterLimit");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getClusterAccess().getClusterLimitsClusterLimitParserRuleCall_7_5_0());
					}
					lv_clusterLimits_23_0=ruleClusterLimit
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getClusterRule());
						}
						add(
							$current,
							"clusterLimits",
							lv_clusterLimits_23_0,
							"org.xtext.example.domij.Domijmasdsl.ClusterLimit");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_24=']'
			{
				newLeafNode(otherlv_24, grammarAccess.getClusterAccess().getRightSquareBracketKeyword_7_6());
			}
		)?
	)
;

// Entry rule entryRuleVectorCollection
entryRuleVectorCollection returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVectorCollectionRule()); }
	iv_ruleVectorCollection=ruleVectorCollection
	{ $current=$iv_ruleVectorCollection.current; }
	EOF;

// Rule VectorCollection
ruleVectorCollection returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='VECTOR'
		{
			newLeafNode(otherlv_0, grammarAccess.getVectorCollectionAccess().getVECTORKeyword_0());
		}
		otherlv_1='COLLECTION'
		{
			newLeafNode(otherlv_1, grammarAccess.getVectorCollectionAccess().getCOLLECTIONKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVectorCollectionAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVectorCollectionRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.xtext.example.domij.Domijmasdsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='IN'
		{
			newLeafNode(otherlv_3, grammarAccess.getVectorCollectionAccess().getINKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVectorCollectionRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getVectorCollectionAccess().getClusterClusterCrossReference_4_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_dynamic_5_0='dynamic'
				{
					newLeafNode(lv_dynamic_5_0, grammarAccess.getVectorCollectionAccess().getDynamicDynamicKeyword_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVectorCollectionRule());
					}
					setWithLastConsumed($current, "dynamic", lv_dynamic_5_0 != null, "dynamic");
				}
			)
		)?
		(
			otherlv_6='description'
			{
				newLeafNode(otherlv_6, grammarAccess.getVectorCollectionAccess().getDescriptionKeyword_6_0());
			}
			otherlv_7='='
			{
				newLeafNode(otherlv_7, grammarAccess.getVectorCollectionAccess().getEqualsSignKeyword_6_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVectorCollectionAccess().getDescriptionEStringParserRuleCall_6_2_0());
					}
					lv_description_8_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVectorCollectionRule());
						}
						set(
							$current,
							"description",
							lv_description_8_0,
							"org.xtext.example.domij.Domijmasdsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_9='WITH'
			{
				newLeafNode(otherlv_9, grammarAccess.getVectorCollectionAccess().getWITHKeyword_7_0());
			}
			otherlv_10='LIMITS'
			{
				newLeafNode(otherlv_10, grammarAccess.getVectorCollectionAccess().getLIMITSKeyword_7_1());
			}
			otherlv_11='['
			{
				newLeafNode(otherlv_11, grammarAccess.getVectorCollectionAccess().getLeftSquareBracketKeyword_7_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVectorCollectionAccess().getCollectionLimitsCollectionLimitParserRuleCall_7_3_0());
					}
					lv_collectionLimits_12_0=ruleCollectionLimit
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVectorCollectionRule());
						}
						add(
							$current,
							"collectionLimits",
							lv_collectionLimits_12_0,
							"org.xtext.example.domij.Domijmasdsl.CollectionLimit");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getVectorCollectionAccess().getCollectionLimitsCollectionLimitParserRuleCall_7_4_0());
					}
					lv_collectionLimits_13_0=ruleCollectionLimit
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVectorCollectionRule());
						}
						add(
							$current,
							"collectionLimits",
							lv_collectionLimits_13_0,
							"org.xtext.example.domij.Domijmasdsl.CollectionLimit");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_14=']'
			{
				newLeafNode(otherlv_14, grammarAccess.getVectorCollectionAccess().getRightSquareBracketKeyword_7_5());
			}
		)?
		(
			otherlv_15='WITH'
			{
				newLeafNode(otherlv_15, grammarAccess.getVectorCollectionAccess().getWITHKeyword_8_0());
			}
			otherlv_16='FIELDS'
			{
				newLeafNode(otherlv_16, grammarAccess.getVectorCollectionAccess().getFIELDSKeyword_8_1());
			}
			otherlv_17='['
			{
				newLeafNode(otherlv_17, grammarAccess.getVectorCollectionAccess().getLeftSquareBracketKeyword_8_2());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getVectorCollectionRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getVectorCollectionAccess().getFieldsFieldCrossReference_8_3_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getVectorCollectionRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getVectorCollectionAccess().getFieldsFieldCrossReference_8_4_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_20=']'
			{
				newLeafNode(otherlv_20, grammarAccess.getVectorCollectionAccess().getRightSquareBracketKeyword_8_5());
			}
		)
		(
			otherlv_21='WITH'
			{
				newLeafNode(otherlv_21, grammarAccess.getVectorCollectionAccess().getWITHKeyword_9_0());
			}
			otherlv_22='PARTITIONS'
			{
				newLeafNode(otherlv_22, grammarAccess.getVectorCollectionAccess().getPARTITIONSKeyword_9_1());
			}
			otherlv_23='['
			{
				newLeafNode(otherlv_23, grammarAccess.getVectorCollectionAccess().getLeftSquareBracketKeyword_9_2());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getVectorCollectionRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getVectorCollectionAccess().getPartitionsPartitionCrossReference_9_3_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getVectorCollectionRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getVectorCollectionAccess().getPartitionsPartitionCrossReference_9_4_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_26=']'
			{
				newLeafNode(otherlv_26, grammarAccess.getVectorCollectionAccess().getRightSquareBracketKeyword_9_5());
			}
		)?
		(
			otherlv_27='podType'
			{
				newLeafNode(otherlv_27, grammarAccess.getVectorCollectionAccess().getPodTypeKeyword_10_0());
			}
			otherlv_28='='
			{
				newLeafNode(otherlv_28, grammarAccess.getVectorCollectionAccess().getEqualsSignKeyword_10_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVectorCollectionAccess().getPodtypeEPodTypesEnumRuleCall_10_2_0());
					}
					lv_podtype_29_0=ruleEPodTypes
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVectorCollectionRule());
						}
						set(
							$current,
							"podtype",
							lv_podtype_29_0,
							"org.xtext.example.domij.Domijmasdsl.EPodTypes");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_30='podSize'
			{
				newLeafNode(otherlv_30, grammarAccess.getVectorCollectionAccess().getPodSizeKeyword_11_0());
			}
			otherlv_31='='
			{
				newLeafNode(otherlv_31, grammarAccess.getVectorCollectionAccess().getEqualsSignKeyword_11_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVectorCollectionAccess().getPodSizeEPodSizeEnumRuleCall_11_2_0());
					}
					lv_podSize_32_0=ruleEPodSize
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVectorCollectionRule());
						}
						set(
							$current,
							"podSize",
							lv_podSize_32_0,
							"org.xtext.example.domij.Domijmasdsl.EPodSize");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_33='podEnv'
			{
				newLeafNode(otherlv_33, grammarAccess.getVectorCollectionAccess().getPodEnvKeyword_12_0());
			}
			otherlv_34='='
			{
				newLeafNode(otherlv_34, grammarAccess.getVectorCollectionAccess().getEqualsSignKeyword_12_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVectorCollectionAccess().getPodEnvEPodEnvEnumRuleCall_12_2_0());
					}
					lv_podEnv_35_0=ruleEPodEnv
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVectorCollectionRule());
						}
						set(
							$current,
							"podEnv",
							lv_podEnv_35_0,
							"org.xtext.example.domij.Domijmasdsl.EPodEnv");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRulePartition
entryRulePartition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPartitionRule()); }
	iv_rulePartition=rulePartition
	{ $current=$iv_rulePartition.current; }
	EOF;

// Rule Partition
rulePartition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='PARTITION'
		{
			newLeafNode(otherlv_0, grammarAccess.getPartitionAccess().getPARTITIONKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPartitionAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPartitionRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.example.domij.Domijmasdsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='FOR'
		{
			newLeafNode(otherlv_2, grammarAccess.getPartitionAccess().getFORKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPartitionRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getPartitionAccess().getColPartOwnerVectorCollectionCrossReference_3_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4='description'
			{
				newLeafNode(otherlv_4, grammarAccess.getPartitionAccess().getDescriptionKeyword_4_0());
			}
			otherlv_5='='
			{
				newLeafNode(otherlv_5, grammarAccess.getPartitionAccess().getEqualsSignKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPartitionAccess().getDescriptionEStringParserRuleCall_4_2_0());
					}
					lv_description_6_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPartitionRule());
						}
						set(
							$current,
							"description",
							lv_description_6_0,
							"org.xtext.example.domij.Domijmasdsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_7='partition'
		{
			newLeafNode(otherlv_7, grammarAccess.getPartitionAccess().getPartitionKeyword_5());
		}
		otherlv_8='key'
		{
			newLeafNode(otherlv_8, grammarAccess.getPartitionAccess().getKeyKeyword_6());
		}
		otherlv_9='='
		{
			newLeafNode(otherlv_9, grammarAccess.getPartitionAccess().getEqualsSignKeyword_7());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPartitionRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getPartitionAccess().getPartitionKeyFieldCrossReference_8_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleEmbeddingModel
entryRuleEmbeddingModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEmbeddingModelRule()); }
	iv_ruleEmbeddingModel=ruleEmbeddingModel
	{ $current=$iv_ruleEmbeddingModel.current; }
	EOF;

// Rule EmbeddingModel
ruleEmbeddingModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getEmbeddingModelAccess().getEmbeddingModelAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getEmbeddingModelAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEmbeddingModelRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.example.domij.Domijmasdsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2='description'
			{
				newLeafNode(otherlv_2, grammarAccess.getEmbeddingModelAccess().getDescriptionKeyword_2_0());
			}
			otherlv_3='='
			{
				newLeafNode(otherlv_3, grammarAccess.getEmbeddingModelAccess().getEqualsSignKeyword_2_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEmbeddingModelAccess().getDescriptionEStringParserRuleCall_2_2_0());
					}
					lv_description_4_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEmbeddingModelRule());
						}
						set(
							$current,
							"description",
							lv_description_4_0,
							"org.xtext.example.domij.Domijmasdsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleFieldLimit
entryRuleFieldLimit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFieldLimitRule()); }
	iv_ruleFieldLimit=ruleFieldLimit
	{ $current=$iv_ruleFieldLimit.current; }
	EOF;

// Rule FieldLimit
ruleFieldLimit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='FIELD'
		{
			newLeafNode(otherlv_0, grammarAccess.getFieldLimitAccess().getFIELDKeyword_0());
		}
		otherlv_1='LIMIT'
		{
			newLeafNode(otherlv_1, grammarAccess.getFieldLimitAccess().getLIMITKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFieldLimitAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFieldLimitRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.xtext.example.domij.Domijmasdsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_3='type'
		{
			newLeafNode(otherlv_3, grammarAccess.getFieldLimitAccess().getTypeKeyword_3());
		}
		otherlv_4='='
		{
			newLeafNode(otherlv_4, grammarAccess.getFieldLimitAccess().getEqualsSignKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFieldLimitAccess().getTypeEFieldLimitEnumRuleCall_5_0());
				}
				lv_type_5_0=ruleEFieldLimit
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFieldLimitRule());
					}
					set(
						$current,
						"type",
						lv_type_5_0,
						"org.xtext.example.domij.Domijmasdsl.EFieldLimit");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='value'
		{
			newLeafNode(otherlv_6, grammarAccess.getFieldLimitAccess().getValueKeyword_6());
		}
		otherlv_7='='
		{
			newLeafNode(otherlv_7, grammarAccess.getFieldLimitAccess().getEqualsSignKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFieldLimitAccess().getValueEStringParserRuleCall_8_0());
				}
				lv_value_8_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFieldLimitRule());
					}
					set(
						$current,
						"value",
						lv_value_8_0,
						"org.xtext.example.domij.Domijmasdsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_9='description'
			{
				newLeafNode(otherlv_9, grammarAccess.getFieldLimitAccess().getDescriptionKeyword_9_0());
			}
			otherlv_10='='
			{
				newLeafNode(otherlv_10, grammarAccess.getFieldLimitAccess().getEqualsSignKeyword_9_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFieldLimitAccess().getDescriptionEStringParserRuleCall_9_2_0());
					}
					lv_description_11_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFieldLimitRule());
						}
						set(
							$current,
							"description",
							lv_description_11_0,
							"org.xtext.example.domij.Domijmasdsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleCollectionLimit
entryRuleCollectionLimit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCollectionLimitRule()); }
	iv_ruleCollectionLimit=ruleCollectionLimit
	{ $current=$iv_ruleCollectionLimit.current; }
	EOF;

// Rule CollectionLimit
ruleCollectionLimit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='COLLECTION'
		{
			newLeafNode(otherlv_0, grammarAccess.getCollectionLimitAccess().getCOLLECTIONKeyword_0());
		}
		otherlv_1='LIMIT'
		{
			newLeafNode(otherlv_1, grammarAccess.getCollectionLimitAccess().getLIMITKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCollectionLimitAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCollectionLimitRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.xtext.example.domij.Domijmasdsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_3='type'
		{
			newLeafNode(otherlv_3, grammarAccess.getCollectionLimitAccess().getTypeKeyword_3());
		}
		otherlv_4='='
		{
			newLeafNode(otherlv_4, grammarAccess.getCollectionLimitAccess().getEqualsSignKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCollectionLimitAccess().getTypeEColectionLimitEnumRuleCall_5_0());
				}
				lv_type_5_0=ruleEColectionLimit
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCollectionLimitRule());
					}
					set(
						$current,
						"type",
						lv_type_5_0,
						"org.xtext.example.domij.Domijmasdsl.EColectionLimit");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='value'
		{
			newLeafNode(otherlv_6, grammarAccess.getCollectionLimitAccess().getValueKeyword_6());
		}
		otherlv_7='='
		{
			newLeafNode(otherlv_7, grammarAccess.getCollectionLimitAccess().getEqualsSignKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCollectionLimitAccess().getValueEStringParserRuleCall_8_0());
				}
				lv_value_8_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCollectionLimitRule());
					}
					set(
						$current,
						"value",
						lv_value_8_0,
						"org.xtext.example.domij.Domijmasdsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_9='description'
			{
				newLeafNode(otherlv_9, grammarAccess.getCollectionLimitAccess().getDescriptionKeyword_9_0());
			}
			otherlv_10='='
			{
				newLeafNode(otherlv_10, grammarAccess.getCollectionLimitAccess().getEqualsSignKeyword_9_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCollectionLimitAccess().getDescriptionEStringParserRuleCall_9_2_0());
					}
					lv_description_11_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCollectionLimitRule());
						}
						set(
							$current,
							"description",
							lv_description_11_0,
							"org.xtext.example.domij.Domijmasdsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleClusterLimit
entryRuleClusterLimit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClusterLimitRule()); }
	iv_ruleClusterLimit=ruleClusterLimit
	{ $current=$iv_ruleClusterLimit.current; }
	EOF;

// Rule ClusterLimit
ruleClusterLimit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='CLUSTER'
		{
			newLeafNode(otherlv_0, grammarAccess.getClusterLimitAccess().getCLUSTERKeyword_0());
		}
		otherlv_1='LIMIT'
		{
			newLeafNode(otherlv_1, grammarAccess.getClusterLimitAccess().getLIMITKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getClusterLimitAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClusterLimitRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.xtext.example.domij.Domijmasdsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_3='type'
		{
			newLeafNode(otherlv_3, grammarAccess.getClusterLimitAccess().getTypeKeyword_3());
		}
		otherlv_4='='
		{
			newLeafNode(otherlv_4, grammarAccess.getClusterLimitAccess().getEqualsSignKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getClusterLimitAccess().getTypeEClusterLimitEnumRuleCall_5_0());
				}
				lv_type_5_0=ruleEClusterLimit
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClusterLimitRule());
					}
					set(
						$current,
						"type",
						lv_type_5_0,
						"org.xtext.example.domij.Domijmasdsl.EClusterLimit");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='value'
		{
			newLeafNode(otherlv_6, grammarAccess.getClusterLimitAccess().getValueKeyword_6());
		}
		otherlv_7='='
		{
			newLeafNode(otherlv_7, grammarAccess.getClusterLimitAccess().getEqualsSignKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getClusterLimitAccess().getValueEStringParserRuleCall_8_0());
				}
				lv_value_8_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClusterLimitRule());
					}
					set(
						$current,
						"value",
						lv_value_8_0,
						"org.xtext.example.domij.Domijmasdsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_9='description'
			{
				newLeafNode(otherlv_9, grammarAccess.getClusterLimitAccess().getDescriptionKeyword_9_0());
			}
			otherlv_10='='
			{
				newLeafNode(otherlv_10, grammarAccess.getClusterLimitAccess().getEqualsSignKeyword_9_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getClusterLimitAccess().getDescriptionEStringParserRuleCall_9_2_0());
					}
					lv_description_11_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getClusterLimitRule());
						}
						set(
							$current,
							"description",
							lv_description_11_0,
							"org.xtext.example.domij.Domijmasdsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleIndexLimit
entryRuleIndexLimit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIndexLimitRule()); }
	iv_ruleIndexLimit=ruleIndexLimit
	{ $current=$iv_ruleIndexLimit.current; }
	EOF;

// Rule IndexLimit
ruleIndexLimit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='INDEX'
		{
			newLeafNode(otherlv_0, grammarAccess.getIndexLimitAccess().getINDEXKeyword_0());
		}
		otherlv_1='LIMIT'
		{
			newLeafNode(otherlv_1, grammarAccess.getIndexLimitAccess().getLIMITKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIndexLimitAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIndexLimitRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.xtext.example.domij.Domijmasdsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='type'
		{
			newLeafNode(otherlv_3, grammarAccess.getIndexLimitAccess().getTypeKeyword_3());
		}
		otherlv_4='='
		{
			newLeafNode(otherlv_4, grammarAccess.getIndexLimitAccess().getEqualsSignKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIndexLimitAccess().getTypeEIndexLimitEnumRuleCall_5_0());
				}
				lv_type_5_0=ruleEIndexLimit
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIndexLimitRule());
					}
					set(
						$current,
						"type",
						lv_type_5_0,
						"org.xtext.example.domij.Domijmasdsl.EIndexLimit");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='value'
		{
			newLeafNode(otherlv_6, grammarAccess.getIndexLimitAccess().getValueKeyword_6());
		}
		otherlv_7='='
		{
			newLeafNode(otherlv_7, grammarAccess.getIndexLimitAccess().getEqualsSignKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIndexLimitAccess().getValueEStringParserRuleCall_8_0());
				}
				lv_value_8_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIndexLimitRule());
					}
					set(
						$current,
						"value",
						lv_value_8_0,
						"org.xtext.example.domij.Domijmasdsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_9='description'
			{
				newLeafNode(otherlv_9, grammarAccess.getIndexLimitAccess().getDescriptionKeyword_9_0());
			}
			otherlv_10='='
			{
				newLeafNode(otherlv_10, grammarAccess.getIndexLimitAccess().getEqualsSignKeyword_9_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getIndexLimitAccess().getDescriptionEStringParserRuleCall_9_2_0());
					}
					lv_description_11_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIndexLimitRule());
						}
						set(
							$current,
							"description",
							lv_description_11_0,
							"org.xtext.example.domij.Domijmasdsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleVectorIndex
entryRuleVectorIndex returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVectorIndexRule()); }
	iv_ruleVectorIndex=ruleVectorIndex
	{ $current=$iv_ruleVectorIndex.current; }
	EOF;

// Rule VectorIndex
ruleVectorIndex returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='VECTOR'
		{
			newLeafNode(otherlv_0, grammarAccess.getVectorIndexAccess().getVECTORKeyword_0());
		}
		otherlv_1='INDEX'
		{
			newLeafNode(otherlv_1, grammarAccess.getVectorIndexAccess().getINDEXKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVectorIndexAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVectorIndexRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.xtext.example.domij.Domijmasdsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			otherlv_3='description'
			{
				newLeafNode(otherlv_3, grammarAccess.getVectorIndexAccess().getDescriptionKeyword_3_0());
			}
			otherlv_4='='
			{
				newLeafNode(otherlv_4, grammarAccess.getVectorIndexAccess().getEqualsSignKeyword_3_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVectorIndexAccess().getDescriptionEStringParserRuleCall_3_2_0());
					}
					lv_description_5_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVectorIndexRule());
						}
						set(
							$current,
							"description",
							lv_description_5_0,
							"org.xtext.example.domij.Domijmasdsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_6='metric'
		{
			newLeafNode(otherlv_6, grammarAccess.getVectorIndexAccess().getMetricKeyword_4());
		}
		otherlv_7='='
		{
			newLeafNode(otherlv_7, grammarAccess.getVectorIndexAccess().getEqualsSignKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVectorIndexAccess().getMetricEMetricTypeEnumRuleCall_6_0());
				}
				lv_metric_8_0=ruleEMetricType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVectorIndexRule());
					}
					set(
						$current,
						"metric",
						lv_metric_8_0,
						"org.xtext.example.domij.Domijmasdsl.EMetricType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_9='type'
		{
			newLeafNode(otherlv_9, grammarAccess.getVectorIndexAccess().getTypeKeyword_7());
		}
		otherlv_10='='
		{
			newLeafNode(otherlv_10, grammarAccess.getVectorIndexAccess().getEqualsSignKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVectorIndexAccess().getTypeEVIdxTypeEnumRuleCall_9_0());
				}
				lv_type_11_0=ruleEVIdxType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVectorIndexRule());
					}
					set(
						$current,
						"type",
						lv_type_11_0,
						"org.xtext.example.domij.Domijmasdsl.EVIdxType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_12='WITH'
			{
				newLeafNode(otherlv_12, grammarAccess.getVectorIndexAccess().getWITHKeyword_10_0());
			}
			otherlv_13='LIMITS'
			{
				newLeafNode(otherlv_13, grammarAccess.getVectorIndexAccess().getLIMITSKeyword_10_1());
			}
			otherlv_14='['
			{
				newLeafNode(otherlv_14, grammarAccess.getVectorIndexAccess().getLeftSquareBracketKeyword_10_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVectorIndexAccess().getVIndexLimitsIndexLimitParserRuleCall_10_3_0());
					}
					lv_vIndexLimits_15_0=ruleIndexLimit
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVectorIndexRule());
						}
						add(
							$current,
							"vIndexLimits",
							lv_vIndexLimits_15_0,
							"org.xtext.example.domij.Domijmasdsl.IndexLimit");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getVectorIndexAccess().getVIndexLimitsIndexLimitParserRuleCall_10_4_0());
					}
					lv_vIndexLimits_16_0=ruleIndexLimit
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVectorIndexRule());
						}
						add(
							$current,
							"vIndexLimits",
							lv_vIndexLimits_16_0,
							"org.xtext.example.domij.Domijmasdsl.IndexLimit");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_17=']'
			{
				newLeafNode(otherlv_17, grammarAccess.getVectorIndexAccess().getRightSquareBracketKeyword_10_5());
			}
		)?
	)
;

// Entry rule entryRuleNonVectorIndex
entryRuleNonVectorIndex returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNonVectorIndexRule()); }
	iv_ruleNonVectorIndex=ruleNonVectorIndex
	{ $current=$iv_ruleNonVectorIndex.current; }
	EOF;

// Rule NonVectorIndex
ruleNonVectorIndex returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='NONVECTOR'
		{
			newLeafNode(otherlv_0, grammarAccess.getNonVectorIndexAccess().getNONVECTORKeyword_0());
		}
		otherlv_1='INDEX'
		{
			newLeafNode(otherlv_1, grammarAccess.getNonVectorIndexAccess().getINDEXKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNonVectorIndexAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNonVectorIndexRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.xtext.example.domij.Domijmasdsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_3='type'
		{
			newLeafNode(otherlv_3, grammarAccess.getNonVectorIndexAccess().getTypeKeyword_3());
		}
		otherlv_4='='
		{
			newLeafNode(otherlv_4, grammarAccess.getNonVectorIndexAccess().getEqualsSignKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNonVectorIndexAccess().getTypeENVIdxTypeEnumRuleCall_5_0());
				}
				lv_type_5_0=ruleENVIdxType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNonVectorIndexRule());
					}
					set(
						$current,
						"type",
						lv_type_5_0,
						"org.xtext.example.domij.Domijmasdsl.ENVIdxType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_6='description'
			{
				newLeafNode(otherlv_6, grammarAccess.getNonVectorIndexAccess().getDescriptionKeyword_6_0());
			}
			otherlv_7='='
			{
				newLeafNode(otherlv_7, grammarAccess.getNonVectorIndexAccess().getEqualsSignKeyword_6_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNonVectorIndexAccess().getDescriptionEStringParserRuleCall_6_2_0());
					}
					lv_description_8_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNonVectorIndexRule());
						}
						set(
							$current,
							"description",
							lv_description_8_0,
							"org.xtext.example.domij.Domijmasdsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleConnection
entryRuleConnection returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConnectionRule()); }
	iv_ruleConnection=ruleConnection
	{ $current=$iv_ruleConnection.current; }
	EOF;

// Rule Connection
ruleConnection returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='CONNECTION'
		{
			newLeafNode(otherlv_0, grammarAccess.getConnectionAccess().getCONNECTIONKeyword_0());
		}
		otherlv_1='host'
		{
			newLeafNode(otherlv_1, grammarAccess.getConnectionAccess().getHostKeyword_1());
		}
		otherlv_2='='
		{
			newLeafNode(otherlv_2, grammarAccess.getConnectionAccess().getEqualsSignKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConnectionAccess().getHostEStringParserRuleCall_3_0());
				}
				lv_host_3_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConnectionRule());
					}
					set(
						$current,
						"host",
						lv_host_3_0,
						"org.xtext.example.domij.Domijmasdsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='port'
		{
			newLeafNode(otherlv_4, grammarAccess.getConnectionAccess().getPortKeyword_4());
		}
		otherlv_5='='
		{
			newLeafNode(otherlv_5, grammarAccess.getConnectionAccess().getEqualsSignKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConnectionAccess().getPortEIntParserRuleCall_6_0());
				}
				lv_port_6_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConnectionRule());
					}
					set(
						$current,
						"port",
						lv_port_6_0,
						"org.xtext.example.domij.Domijmasdsl.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_7='apiKey'
			{
				newLeafNode(otherlv_7, grammarAccess.getConnectionAccess().getApiKeyKeyword_7_0());
			}
			otherlv_8='='
			{
				newLeafNode(otherlv_8, grammarAccess.getConnectionAccess().getEqualsSignKeyword_7_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConnectionAccess().getApiKeyEStringParserRuleCall_7_2_0());
					}
					lv_apiKey_9_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConnectionRule());
						}
						set(
							$current,
							"apiKey",
							lv_apiKey_9_0,
							"org.xtext.example.domij.Domijmasdsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_10='username'
			{
				newLeafNode(otherlv_10, grammarAccess.getConnectionAccess().getUsernameKeyword_8_0());
			}
			otherlv_11='='
			{
				newLeafNode(otherlv_11, grammarAccess.getConnectionAccess().getEqualsSignKeyword_8_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConnectionAccess().getUsernameEStringParserRuleCall_8_2_0());
					}
					lv_username_12_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConnectionRule());
						}
						set(
							$current,
							"username",
							lv_username_12_0,
							"org.xtext.example.domij.Domijmasdsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_13='password'
			{
				newLeafNode(otherlv_13, grammarAccess.getConnectionAccess().getPasswordKeyword_9_0());
			}
			otherlv_14='='
			{
				newLeafNode(otherlv_14, grammarAccess.getConnectionAccess().getEqualsSignKeyword_9_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConnectionAccess().getPasswordEStringParserRuleCall_9_2_0());
					}
					lv_password_15_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConnectionRule());
						}
						set(
							$current,
							"password",
							lv_password_15_0,
							"org.xtext.example.domij.Domijmasdsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_16='region'
			{
				newLeafNode(otherlv_16, grammarAccess.getConnectionAccess().getRegionKeyword_10_0());
			}
			otherlv_17='='
			{
				newLeafNode(otherlv_17, grammarAccess.getConnectionAccess().getEqualsSignKeyword_10_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConnectionAccess().getRegionEStringParserRuleCall_10_2_0());
					}
					lv_region_18_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConnectionRule());
						}
						set(
							$current,
							"region",
							lv_region_18_0,
							"org.xtext.example.domij.Domijmasdsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_19='userRole'
			{
				newLeafNode(otherlv_19, grammarAccess.getConnectionAccess().getUserRoleKeyword_11_0());
			}
			otherlv_20='='
			{
				newLeafNode(otherlv_20, grammarAccess.getConnectionAccess().getEqualsSignKeyword_11_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConnectionAccess().getUserRoleEStringParserRuleCall_11_2_0());
					}
					lv_userRole_21_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConnectionRule());
						}
						set(
							$current,
							"userRole",
							lv_userRole_21_0,
							"org.xtext.example.domij.Domijmasdsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_22='userPrivillege'
			{
				newLeafNode(otherlv_22, grammarAccess.getConnectionAccess().getUserPrivillegeKeyword_12_0());
			}
			otherlv_23='='
			{
				newLeafNode(otherlv_23, grammarAccess.getConnectionAccess().getEqualsSignKeyword_12_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConnectionAccess().getUserPrivillegeEStringParserRuleCall_12_2_0());
					}
					lv_userPrivillege_24_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConnectionRule());
						}
						set(
							$current,
							"userPrivillege",
							lv_userPrivillege_24_0,
							"org.xtext.example.domij.Domijmasdsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_25='cloud'
			{
				newLeafNode(otherlv_25, grammarAccess.getConnectionAccess().getCloudKeyword_13_0());
			}
			otherlv_26='='
			{
				newLeafNode(otherlv_26, grammarAccess.getConnectionAccess().getEqualsSignKeyword_13_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConnectionAccess().getCloudEStringParserRuleCall_13_2_0());
					}
					lv_cloud_27_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConnectionRule());
						}
						set(
							$current,
							"cloud",
							lv_cloud_27_0,
							"org.xtext.example.domij.Domijmasdsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_28='environment'
			{
				newLeafNode(otherlv_28, grammarAccess.getConnectionAccess().getEnvironmentKeyword_14_0());
			}
			otherlv_29='='
			{
				newLeafNode(otherlv_29, grammarAccess.getConnectionAccess().getEqualsSignKeyword_14_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConnectionAccess().getEnvironmentEStringParserRuleCall_14_2_0());
					}
					lv_environment_30_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConnectionRule());
						}
						set(
							$current,
							"environment",
							lv_environment_30_0,
							"org.xtext.example.domij.Domijmasdsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleEInt
entryRuleEInt returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEIntRule()); }
	iv_ruleEInt=ruleEInt
	{ $current=$iv_ruleEInt.current.getText(); }
	EOF;

// Rule EInt
ruleEInt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEIntAccess().getHyphenMinusKeyword_0());
			}
		)?
		this_INT_1=RULE_INT
		{
			$current.merge(this_INT_1);
		}
		{
			newLeafNode(this_INT_1, grammarAccess.getEIntAccess().getINTTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleNonVectorField
entryRuleNonVectorField returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNonVectorFieldRule()); }
	iv_ruleNonVectorField=ruleNonVectorField
	{ $current=$iv_ruleNonVectorField.current; }
	EOF;

// Rule NonVectorField
ruleNonVectorField returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='NONVECTOR'
		{
			newLeafNode(otherlv_0, grammarAccess.getNonVectorFieldAccess().getNONVECTORKeyword_0());
		}
		otherlv_1='FIELD'
		{
			newLeafNode(otherlv_1, grammarAccess.getNonVectorFieldAccess().getFIELDKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNonVectorFieldAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNonVectorFieldRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.xtext.example.domij.Domijmasdsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_3='IN'
		{
			newLeafNode(otherlv_3, grammarAccess.getNonVectorFieldAccess().getINKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNonVectorFieldRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getNonVectorFieldAccess().getColFieldOwnerVectorCollectionCrossReference_4_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_isPrimary_5_0='primary'
				{
					newLeafNode(lv_isPrimary_5_0, grammarAccess.getNonVectorFieldAccess().getIsPrimaryPrimaryKeyword_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNonVectorFieldRule());
					}
					setWithLastConsumed($current, "isPrimary", lv_isPrimary_5_0 != null, "primary");
				}
			)
		)?
		otherlv_6='type'
		{
			newLeafNode(otherlv_6, grammarAccess.getNonVectorFieldAccess().getTypeKeyword_6());
		}
		otherlv_7='='
		{
			newLeafNode(otherlv_7, grammarAccess.getNonVectorFieldAccess().getEqualsSignKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNonVectorFieldAccess().getTypeEScalarDTypeEnumRuleCall_8_0());
				}
				lv_type_8_0=ruleEScalarDType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNonVectorFieldRule());
					}
					set(
						$current,
						"type",
						lv_type_8_0,
						"org.xtext.example.domij.Domijmasdsl.EScalarDType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_9='WITH'
			{
				newLeafNode(otherlv_9, grammarAccess.getNonVectorFieldAccess().getWITHKeyword_9_0());
			}
			otherlv_10='LIMITS'
			{
				newLeafNode(otherlv_10, grammarAccess.getNonVectorFieldAccess().getLIMITSKeyword_9_1());
			}
			otherlv_11='['
			{
				newLeafNode(otherlv_11, grammarAccess.getNonVectorFieldAccess().getLeftSquareBracketKeyword_9_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNonVectorFieldAccess().getFieldLimitsFieldLimitParserRuleCall_9_3_0());
					}
					lv_fieldLimits_12_0=ruleFieldLimit
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNonVectorFieldRule());
						}
						add(
							$current,
							"fieldLimits",
							lv_fieldLimits_12_0,
							"org.xtext.example.domij.Domijmasdsl.FieldLimit");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getNonVectorFieldAccess().getFieldLimitsFieldLimitParserRuleCall_9_4_0());
					}
					lv_fieldLimits_13_0=ruleFieldLimit
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNonVectorFieldRule());
						}
						add(
							$current,
							"fieldLimits",
							lv_fieldLimits_13_0,
							"org.xtext.example.domij.Domijmasdsl.FieldLimit");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_14=']'
			{
				newLeafNode(otherlv_14, grammarAccess.getNonVectorFieldAccess().getRightSquareBracketKeyword_9_5());
			}
		)?
		(
			otherlv_15='WITH'
			{
				newLeafNode(otherlv_15, grammarAccess.getNonVectorFieldAccess().getWITHKeyword_10_0());
			}
			otherlv_16='NONVECTOR'
			{
				newLeafNode(otherlv_16, grammarAccess.getNonVectorFieldAccess().getNONVECTORKeyword_10_1());
			}
			otherlv_17='INDEXES'
			{
				newLeafNode(otherlv_17, grammarAccess.getNonVectorFieldAccess().getINDEXESKeyword_10_2());
			}
			otherlv_18='['
			{
				newLeafNode(otherlv_18, grammarAccess.getNonVectorFieldAccess().getLeftSquareBracketKeyword_10_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNonVectorFieldAccess().getNonVectorIndexesNonVectorIndexParserRuleCall_10_4_0());
					}
					lv_nonVectorIndexes_19_0=ruleNonVectorIndex
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNonVectorFieldRule());
						}
						add(
							$current,
							"nonVectorIndexes",
							lv_nonVectorIndexes_19_0,
							"org.xtext.example.domij.Domijmasdsl.NonVectorIndex");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getNonVectorFieldAccess().getNonVectorIndexesNonVectorIndexParserRuleCall_10_5_0());
					}
					lv_nonVectorIndexes_20_0=ruleNonVectorIndex
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNonVectorFieldRule());
						}
						add(
							$current,
							"nonVectorIndexes",
							lv_nonVectorIndexes_20_0,
							"org.xtext.example.domij.Domijmasdsl.NonVectorIndex");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_21=']'
			{
				newLeafNode(otherlv_21, grammarAccess.getNonVectorFieldAccess().getRightSquareBracketKeyword_10_6());
			}
		)?
	)
;

// Entry rule entryRuleVectorField
entryRuleVectorField returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVectorFieldRule()); }
	iv_ruleVectorField=ruleVectorField
	{ $current=$iv_ruleVectorField.current; }
	EOF;

// Rule VectorField
ruleVectorField returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='VECTOR'
		{
			newLeafNode(otherlv_0, grammarAccess.getVectorFieldAccess().getVECTORKeyword_0());
		}
		otherlv_1='FIELD'
		{
			newLeafNode(otherlv_1, grammarAccess.getVectorFieldAccess().getFIELDKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVectorFieldAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVectorFieldRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.xtext.example.domij.Domijmasdsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_3='IN'
		{
			newLeafNode(otherlv_3, grammarAccess.getVectorFieldAccess().getINKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVectorFieldRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getVectorFieldAccess().getColFieldOwnerVectorCollectionCrossReference_4_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_isPrimary_5_0='primary'
				{
					newLeafNode(lv_isPrimary_5_0, grammarAccess.getVectorFieldAccess().getIsPrimaryPrimaryKeyword_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVectorFieldRule());
					}
					setWithLastConsumed($current, "isPrimary", lv_isPrimary_5_0 != null, "primary");
				}
			)
		)?
		otherlv_6='type'
		{
			newLeafNode(otherlv_6, grammarAccess.getVectorFieldAccess().getTypeKeyword_6());
		}
		otherlv_7='='
		{
			newLeafNode(otherlv_7, grammarAccess.getVectorFieldAccess().getEqualsSignKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVectorFieldAccess().getTypeEVectorDTypeEnumRuleCall_8_0());
				}
				lv_type_8_0=ruleEVectorDType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVectorFieldRule());
					}
					set(
						$current,
						"type",
						lv_type_8_0,
						"org.xtext.example.domij.Domijmasdsl.EVectorDType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_9='WITH'
			{
				newLeafNode(otherlv_9, grammarAccess.getVectorFieldAccess().getWITHKeyword_9_0());
			}
			otherlv_10='EMBEDDING'
			{
				newLeafNode(otherlv_10, grammarAccess.getVectorFieldAccess().getEMBEDDINGKeyword_9_1());
			}
			otherlv_11='MODEL'
			{
				newLeafNode(otherlv_11, grammarAccess.getVectorFieldAccess().getMODELKeyword_9_2());
			}
			otherlv_12='='
			{
				newLeafNode(otherlv_12, grammarAccess.getVectorFieldAccess().getEqualsSignKeyword_9_3());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getVectorFieldRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getVectorFieldAccess().getEmbModelEmbeddingModelCrossReference_9_4_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_14='WITH'
			{
				newLeafNode(otherlv_14, grammarAccess.getVectorFieldAccess().getWITHKeyword_10_0());
			}
			otherlv_15='LIMITS'
			{
				newLeafNode(otherlv_15, grammarAccess.getVectorFieldAccess().getLIMITSKeyword_10_1());
			}
			otherlv_16='['
			{
				newLeafNode(otherlv_16, grammarAccess.getVectorFieldAccess().getLeftSquareBracketKeyword_10_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVectorFieldAccess().getFieldLimitsFieldLimitParserRuleCall_10_3_0());
					}
					lv_fieldLimits_17_0=ruleFieldLimit
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVectorFieldRule());
						}
						add(
							$current,
							"fieldLimits",
							lv_fieldLimits_17_0,
							"org.xtext.example.domij.Domijmasdsl.FieldLimit");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getVectorFieldAccess().getFieldLimitsFieldLimitParserRuleCall_10_4_0());
					}
					lv_fieldLimits_18_0=ruleFieldLimit
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVectorFieldRule());
						}
						add(
							$current,
							"fieldLimits",
							lv_fieldLimits_18_0,
							"org.xtext.example.domij.Domijmasdsl.FieldLimit");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_19=']'
			{
				newLeafNode(otherlv_19, grammarAccess.getVectorFieldAccess().getRightSquareBracketKeyword_10_5());
			}
		)?
		(
			otherlv_20='WITH'
			{
				newLeafNode(otherlv_20, grammarAccess.getVectorFieldAccess().getWITHKeyword_11_0());
			}
			otherlv_21='VECTOR'
			{
				newLeafNode(otherlv_21, grammarAccess.getVectorFieldAccess().getVECTORKeyword_11_1());
			}
			otherlv_22='INDEXES'
			{
				newLeafNode(otherlv_22, grammarAccess.getVectorFieldAccess().getINDEXESKeyword_11_2());
			}
			otherlv_23='['
			{
				newLeafNode(otherlv_23, grammarAccess.getVectorFieldAccess().getLeftSquareBracketKeyword_11_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVectorFieldAccess().getVectorIndexesVectorIndexParserRuleCall_11_4_0());
					}
					lv_vectorIndexes_24_0=ruleVectorIndex
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVectorFieldRule());
						}
						add(
							$current,
							"vectorIndexes",
							lv_vectorIndexes_24_0,
							"org.xtext.example.domij.Domijmasdsl.VectorIndex");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getVectorFieldAccess().getVectorIndexesVectorIndexParserRuleCall_11_5_0());
					}
					lv_vectorIndexes_25_0=ruleVectorIndex
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVectorFieldRule());
						}
						add(
							$current,
							"vectorIndexes",
							lv_vectorIndexes_25_0,
							"org.xtext.example.domij.Domijmasdsl.VectorIndex");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_26=']'
			{
				newLeafNode(otherlv_26, grammarAccess.getVectorFieldAccess().getRightSquareBracketKeyword_11_6());
			}
		)?
	)
;

// Entry rule entryRuleFilter
entryRuleFilter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFilterRule()); }
	iv_ruleFilter=ruleFilter
	{ $current=$iv_ruleFilter.current; }
	EOF;

// Rule Filter
ruleFilter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFilterRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getFilterAccess().getFilterFieldConceptCrossReference_0_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFilterAccess().getOperatorEOperatorEnumRuleCall_1_0());
				}
				lv_operator_1_0=ruleEOperator
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFilterRule());
					}
					set(
						$current,
						"operator",
						lv_operator_1_0,
						"org.xtext.example.domij.Domijmasdsl.EOperator");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFilterAccess().getValueEStringParserRuleCall_2_0());
				}
				lv_value_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFilterRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"org.xtext.example.domij.Domijmasdsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Rule EVendorName
ruleEVendorName returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='PINECONE'
			{
				$current = grammarAccess.getEVendorNameAccess().getPINECONEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getEVendorNameAccess().getPINECONEEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='MILVUS'
			{
				$current = grammarAccess.getEVendorNameAccess().getMILVUSEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getEVendorNameAccess().getMILVUSEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='CHROMA'
			{
				$current = grammarAccess.getEVendorNameAccess().getCHROMAEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getEVendorNameAccess().getCHROMAEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='WEAVIATE'
			{
				$current = grammarAccess.getEVendorNameAccess().getWEAVIATEEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getEVendorNameAccess().getWEAVIATEEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='QDRANT'
			{
				$current = grammarAccess.getEVendorNameAccess().getQDRANTEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getEVendorNameAccess().getQDRANTEnumLiteralDeclaration_4());
			}
		)
	)
;

// Rule EPodTypes
ruleEPodTypes returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='S1'
			{
				$current = grammarAccess.getEPodTypesAccess().getS1EnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getEPodTypesAccess().getS1EnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='P1'
			{
				$current = grammarAccess.getEPodTypesAccess().getP1EnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getEPodTypesAccess().getP1EnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='P2'
			{
				$current = grammarAccess.getEPodTypesAccess().getP2EnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getEPodTypesAccess().getP2EnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule EPodSize
ruleEPodSize returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='X1'
			{
				$current = grammarAccess.getEPodSizeAccess().getX1EnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getEPodSizeAccess().getX1EnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='X2'
			{
				$current = grammarAccess.getEPodSizeAccess().getX2EnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getEPodSizeAccess().getX2EnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='X4'
			{
				$current = grammarAccess.getEPodSizeAccess().getX4EnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getEPodSizeAccess().getX4EnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='X8'
			{
				$current = grammarAccess.getEPodSizeAccess().getX8EnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getEPodSizeAccess().getX8EnumLiteralDeclaration_3());
			}
		)
	)
;

// Rule EPodEnv
ruleEPodEnv returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='US_W1_GCP'
			{
				$current = grammarAccess.getEPodEnvAccess().getUS_W1_GCPEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getEPodEnvAccess().getUS_W1_GCPEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='US_C1_GCP'
			{
				$current = grammarAccess.getEPodEnvAccess().getUS_C1_GCPEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getEPodEnvAccess().getUS_C1_GCPEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='US_W4_GCP'
			{
				$current = grammarAccess.getEPodEnvAccess().getUS_W4_GCPEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getEPodEnvAccess().getUS_W4_GCPEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='US_E4_GCP'
			{
				$current = grammarAccess.getEPodEnvAccess().getUS_E4_GCPEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getEPodEnvAccess().getUS_E4_GCPEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='NA_NE1_GCP'
			{
				$current = grammarAccess.getEPodEnvAccess().getNA_NE1_GCPEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getEPodEnvAccess().getNA_NE1_GCPEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='A_NE1_GCP'
			{
				$current = grammarAccess.getEPodEnvAccess().getA_NE1_GCPEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getEPodEnvAccess().getA_NE1_GCPEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='A_SE1_GCP'
			{
				$current = grammarAccess.getEPodEnvAccess().getA_SE1_GCPEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getEPodEnvAccess().getA_SE1_GCPEnumLiteralDeclaration_6());
			}
		)
		    |
		(
			enumLiteral_7='US_E1_GCP'
			{
				$current = grammarAccess.getEPodEnvAccess().getUS_E1_GCPEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_7, grammarAccess.getEPodEnvAccess().getUS_E1_GCPEnumLiteralDeclaration_7());
			}
		)
		    |
		(
			enumLiteral_8='EU_W1_GCP'
			{
				$current = grammarAccess.getEPodEnvAccess().getEU_W1_GCPEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_8, grammarAccess.getEPodEnvAccess().getEU_W1_GCPEnumLiteralDeclaration_8());
			}
		)
		    |
		(
			enumLiteral_9='EU_W4_GCP'
			{
				$current = grammarAccess.getEPodEnvAccess().getEU_W4_GCPEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_9, grammarAccess.getEPodEnvAccess().getEU_W4_GCPEnumLiteralDeclaration_9());
			}
		)
		    |
		(
			enumLiteral_10='US_E1_AWS'
			{
				$current = grammarAccess.getEPodEnvAccess().getUS_E1_AWSEnumLiteralDeclaration_10().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_10, grammarAccess.getEPodEnvAccess().getUS_E1_AWSEnumLiteralDeclaration_10());
			}
		)
		    |
		(
			enumLiteral_11='AZURE'
			{
				$current = grammarAccess.getEPodEnvAccess().getAZUREEnumLiteralDeclaration_11().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_11, grammarAccess.getEPodEnvAccess().getAZUREEnumLiteralDeclaration_11());
			}
		)
	)
;

// Rule EScalarDType
ruleEScalarDType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='INT'
			{
				$current = grammarAccess.getEScalarDTypeAccess().getINTEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getEScalarDTypeAccess().getINTEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='VARCHAR'
			{
				$current = grammarAccess.getEScalarDTypeAccess().getVARCHAREnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getEScalarDTypeAccess().getVARCHAREnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='DOUBLE'
			{
				$current = grammarAccess.getEScalarDTypeAccess().getDOUBLEEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getEScalarDTypeAccess().getDOUBLEEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='FLOAT'
			{
				$current = grammarAccess.getEScalarDTypeAccess().getFLOATEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getEScalarDTypeAccess().getFLOATEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='DATE'
			{
				$current = grammarAccess.getEScalarDTypeAccess().getDATEEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getEScalarDTypeAccess().getDATEEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='DATETIME'
			{
				$current = grammarAccess.getEScalarDTypeAccess().getDATETIMEEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getEScalarDTypeAccess().getDATETIMEEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='JSON'
			{
				$current = grammarAccess.getEScalarDTypeAccess().getJSONEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getEScalarDTypeAccess().getJSONEnumLiteralDeclaration_6());
			}
		)
	)
;

// Rule EVectorDType
ruleEVectorDType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='BINARY_VECTOR'
			{
				$current = grammarAccess.getEVectorDTypeAccess().getBINARY_VECTOREnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getEVectorDTypeAccess().getBINARY_VECTOREnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='FLOAT_VECTOR'
			{
				$current = grammarAccess.getEVectorDTypeAccess().getFLOAT_VECTOREnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getEVectorDTypeAccess().getFLOAT_VECTOREnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule EFieldLimit
ruleEFieldLimit returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='VECTORDIM'
			{
				$current = grammarAccess.getEFieldLimitAccess().getVECTORDIMEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getEFieldLimitAccess().getVECTORDIMEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='ARRAYLEN'
			{
				$current = grammarAccess.getEFieldLimitAccess().getARRAYLENEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getEFieldLimitAccess().getARRAYLENEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='MAXSIZE'
			{
				$current = grammarAccess.getEFieldLimitAccess().getMAXSIZEEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getEFieldLimitAccess().getMAXSIZEEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule EColectionLimit
ruleEColectionLimit returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='NOFPARTITIONS'
			{
				$current = grammarAccess.getEColectionLimitAccess().getNOFPARTITIONSEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getEColectionLimitAccess().getNOFPARTITIONSEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='NOFFIELDS'
			{
				$current = grammarAccess.getEColectionLimitAccess().getNOFFIELDSEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getEColectionLimitAccess().getNOFFIELDSEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='NOFSHARDS'
			{
				$current = grammarAccess.getEColectionLimitAccess().getNOFSHARDSEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getEColectionLimitAccess().getNOFSHARDSEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='VECTORDIM'
			{
				$current = grammarAccess.getEColectionLimitAccess().getVECTORDIMEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getEColectionLimitAccess().getVECTORDIMEnumLiteralDeclaration_3());
			}
		)
	)
;

// Rule EClusterLimit
ruleEClusterLimit returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		enumLiteral_0='NOFCOLLECTIONS'
		{
			$current = grammarAccess.getEClusterLimitAccess().getNOFCOLLECTIONSEnumLiteralDeclaration().getEnumLiteral().getInstance();
			newLeafNode(enumLiteral_0, grammarAccess.getEClusterLimitAccess().getNOFCOLLECTIONSEnumLiteralDeclaration());
		}
	)
;

// Rule EIndexLimit
ruleEIndexLimit returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='NOFCLUSTERUNIT'
			{
				$current = grammarAccess.getEIndexLimitAccess().getNOFCLUSTERUNITEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getEIndexLimitAccess().getNOFCLUSTERUNITEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='NOFFACTORSPQ'
			{
				$current = grammarAccess.getEIndexLimitAccess().getNOFFACTORSPQEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getEIndexLimitAccess().getNOFFACTORSPQEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='MAXNODEDGRE'
			{
				$current = grammarAccess.getEIndexLimitAccess().getMAXNODEDGREEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getEIndexLimitAccess().getMAXNODEDGREEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule EMetricType
ruleEMetricType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='EUCLIDEAN'
			{
				$current = grammarAccess.getEMetricTypeAccess().getEUCLIDEANEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getEMetricTypeAccess().getEUCLIDEANEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='MANHATTAN'
			{
				$current = grammarAccess.getEMetricTypeAccess().getMANHATTANEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getEMetricTypeAccess().getMANHATTANEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='DOT'
			{
				$current = grammarAccess.getEMetricTypeAccess().getDOTEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getEMetricTypeAccess().getDOTEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='COSINE'
			{
				$current = grammarAccess.getEMetricTypeAccess().getCOSINEEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getEMetricTypeAccess().getCOSINEEnumLiteralDeclaration_3());
			}
		)
	)
;

// Rule EVIdxType
ruleEVIdxType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='FLAT'
			{
				$current = grammarAccess.getEVIdxTypeAccess().getFLATEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getEVIdxTypeAccess().getFLATEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='IVF_FLAT'
			{
				$current = grammarAccess.getEVIdxTypeAccess().getIVF_FLATEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getEVIdxTypeAccess().getIVF_FLATEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='IVF_SQ8'
			{
				$current = grammarAccess.getEVIdxTypeAccess().getIVF_SQ8EnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getEVIdxTypeAccess().getIVF_SQ8EnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='IVF_PQ'
			{
				$current = grammarAccess.getEVIdxTypeAccess().getIVF_PQEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getEVIdxTypeAccess().getIVF_PQEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='HNSW'
			{
				$current = grammarAccess.getEVIdxTypeAccess().getHNSWEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getEVIdxTypeAccess().getHNSWEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='SCANN'
			{
				$current = grammarAccess.getEVIdxTypeAccess().getSCANNEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getEVIdxTypeAccess().getSCANNEnumLiteralDeclaration_5());
			}
		)
	)
;

// Rule ENVIdxType
ruleENVIdxType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='STANDARD'
			{
				$current = grammarAccess.getENVIdxTypeAccess().getSTANDARDEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getENVIdxTypeAccess().getSTANDARDEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='FULL_TEXT'
			{
				$current = grammarAccess.getENVIdxTypeAccess().getFULL_TEXTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getENVIdxTypeAccess().getFULL_TEXTEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='INTEGER'
			{
				$current = grammarAccess.getENVIdxTypeAccess().getINTEGEREnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getENVIdxTypeAccess().getINTEGEREnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='PARAM_INT'
			{
				$current = grammarAccess.getENVIdxTypeAccess().getPARAM_INTEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getENVIdxTypeAccess().getPARAM_INTEnumLiteralDeclaration_3());
			}
		)
	)
;

// Rule EOperator
ruleEOperator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='AND'
			{
				$current = grammarAccess.getEOperatorAccess().getANDEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getEOperatorAccess().getANDEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='OR'
			{
				$current = grammarAccess.getEOperatorAccess().getOREnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getEOperatorAccess().getOREnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='NOT'
			{
				$current = grammarAccess.getEOperatorAccess().getNOTEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getEOperatorAccess().getNOTEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='LIKE'
			{
				$current = grammarAccess.getEOperatorAccess().getLIKEEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getEOperatorAccess().getLIKEEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='='
			{
				$current = grammarAccess.getEOperatorAccess().getEQEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getEOperatorAccess().getEQEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='!='
			{
				$current = grammarAccess.getEOperatorAccess().getNEQEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getEOperatorAccess().getNEQEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='>'
			{
				$current = grammarAccess.getEOperatorAccess().getGTEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getEOperatorAccess().getGTEnumLiteralDeclaration_6());
			}
		)
		    |
		(
			enumLiteral_7='>='
			{
				$current = grammarAccess.getEOperatorAccess().getGTEEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_7, grammarAccess.getEOperatorAccess().getGTEEnumLiteralDeclaration_7());
			}
		)
		    |
		(
			enumLiteral_8='<'
			{
				$current = grammarAccess.getEOperatorAccess().getLTEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_8, grammarAccess.getEOperatorAccess().getLTEnumLiteralDeclaration_8());
			}
		)
		    |
		(
			enumLiteral_9='<='
			{
				$current = grammarAccess.getEOperatorAccess().getLTEEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_9, grammarAccess.getEOperatorAccess().getLTEEnumLiteralDeclaration_9());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
