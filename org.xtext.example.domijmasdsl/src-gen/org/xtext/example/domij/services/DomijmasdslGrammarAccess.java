/*
 * generated by Xtext 2.27.0
 */
package org.xtext.example.domij.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class DomijmasdslGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class ScriptElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.domij.Domijmasdsl.Script");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSCRIPTKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cFORKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cVendorAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cVendorEVendorNameEnumRuleCall_2_0 = (RuleCall)cVendorAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cWITHKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cMETHODSKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		private final Assignment cMethodsAssignment_3_3 = (Assignment)cGroup_3.eContents().get(3);
		private final RuleCall cMethodsMethodParserRuleCall_3_3_0 = (RuleCall)cMethodsAssignment_3_3.eContents().get(0);
		private final Assignment cMethodsAssignment_3_4 = (Assignment)cGroup_3.eContents().get(4);
		private final RuleCall cMethodsMethodParserRuleCall_3_4_0 = (RuleCall)cMethodsAssignment_3_4.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3_5 = (Keyword)cGroup_3.eContents().get(5);
		
		//Script returns Script:
		//    'SCRIPT' 'FOR' vendor=EVendorName
		//    ('WITH' 'METHODS' '[' methods+=Method (methods+=Method)* ']' )?;
		@Override public ParserRule getRule() { return rule; }
		
		//'SCRIPT' 'FOR' vendor=EVendorName
		//('WITH' 'METHODS' '[' methods+=Method (methods+=Method)* ']' )?
		public Group getGroup() { return cGroup; }
		
		//'SCRIPT'
		public Keyword getSCRIPTKeyword_0() { return cSCRIPTKeyword_0; }
		
		//'FOR'
		public Keyword getFORKeyword_1() { return cFORKeyword_1; }
		
		//vendor=EVendorName
		public Assignment getVendorAssignment_2() { return cVendorAssignment_2; }
		
		//EVendorName
		public RuleCall getVendorEVendorNameEnumRuleCall_2_0() { return cVendorEVendorNameEnumRuleCall_2_0; }
		
		//('WITH' 'METHODS' '[' methods+=Method (methods+=Method)* ']' )?
		public Group getGroup_3() { return cGroup_3; }
		
		//'WITH'
		public Keyword getWITHKeyword_3_0() { return cWITHKeyword_3_0; }
		
		//'METHODS'
		public Keyword getMETHODSKeyword_3_1() { return cMETHODSKeyword_3_1; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_3_2() { return cLeftSquareBracketKeyword_3_2; }
		
		//methods+=Method
		public Assignment getMethodsAssignment_3_3() { return cMethodsAssignment_3_3; }
		
		//Method
		public RuleCall getMethodsMethodParserRuleCall_3_3_0() { return cMethodsMethodParserRuleCall_3_3_0; }
		
		//(methods+=Method)*
		public Assignment getMethodsAssignment_3_4() { return cMethodsAssignment_3_4; }
		
		//Method
		public RuleCall getMethodsMethodParserRuleCall_3_4_0() { return cMethodsMethodParserRuleCall_3_4_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_3_5() { return cRightSquareBracketKeyword_3_5; }
	}
	public class MethodElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.domij.Domijmasdsl.Method");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cCreateParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cAlterParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cDropParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cInsertParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cUpdateParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cDeleteParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cVectorSearchParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cNonVectorSearchParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		
		//Method returns Method:
		//    Create | Alter | Drop | Insert | Update | Delete | VectorSearch | NonVectorSearch;
		@Override public ParserRule getRule() { return rule; }
		
		//Create | Alter | Drop | Insert | Update | Delete | VectorSearch | NonVectorSearch
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Create
		public RuleCall getCreateParserRuleCall_0() { return cCreateParserRuleCall_0; }
		
		//Alter
		public RuleCall getAlterParserRuleCall_1() { return cAlterParserRuleCall_1; }
		
		//Drop
		public RuleCall getDropParserRuleCall_2() { return cDropParserRuleCall_2; }
		
		//Insert
		public RuleCall getInsertParserRuleCall_3() { return cInsertParserRuleCall_3; }
		
		//Update
		public RuleCall getUpdateParserRuleCall_4() { return cUpdateParserRuleCall_4; }
		
		//Delete
		public RuleCall getDeleteParserRuleCall_5() { return cDeleteParserRuleCall_5; }
		
		//VectorSearch
		public RuleCall getVectorSearchParserRuleCall_6() { return cVectorSearchParserRuleCall_6; }
		
		//NonVectorSearch
		public RuleCall getNonVectorSearchParserRuleCall_7() { return cNonVectorSearchParserRuleCall_7; }
	}
	public class ConceptElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.domij.Domijmasdsl.Concept");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cVectorDatabaseParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cClusterParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cVectorCollectionParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cPartitionParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cEmbeddingModelParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cFieldLimitParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cCollectionLimitParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cClusterLimitParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cIndexLimitParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cVectorIndexParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		private final RuleCall cNonVectorIndexParserRuleCall_10 = (RuleCall)cAlternatives.eContents().get(10);
		private final RuleCall cNonVectorFieldParserRuleCall_11 = (RuleCall)cAlternatives.eContents().get(11);
		private final RuleCall cVectorFieldParserRuleCall_12 = (RuleCall)cAlternatives.eContents().get(12);
		
		//Concept returns Concept:
		//    VectorDatabase | Cluster | VectorCollection | Partition | EmbeddingModel | FieldLimit | CollectionLimit | ClusterLimit | IndexLimit | VectorIndex | NonVectorIndex | NonVectorField | VectorField ;
		@Override public ParserRule getRule() { return rule; }
		
		//VectorDatabase | Cluster | VectorCollection | Partition | EmbeddingModel | FieldLimit | CollectionLimit | ClusterLimit | IndexLimit | VectorIndex | NonVectorIndex | NonVectorField | VectorField
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//VectorDatabase
		public RuleCall getVectorDatabaseParserRuleCall_0() { return cVectorDatabaseParserRuleCall_0; }
		
		//Cluster
		public RuleCall getClusterParserRuleCall_1() { return cClusterParserRuleCall_1; }
		
		//VectorCollection
		public RuleCall getVectorCollectionParserRuleCall_2() { return cVectorCollectionParserRuleCall_2; }
		
		//Partition
		public RuleCall getPartitionParserRuleCall_3() { return cPartitionParserRuleCall_3; }
		
		//EmbeddingModel
		public RuleCall getEmbeddingModelParserRuleCall_4() { return cEmbeddingModelParserRuleCall_4; }
		
		//FieldLimit
		public RuleCall getFieldLimitParserRuleCall_5() { return cFieldLimitParserRuleCall_5; }
		
		//CollectionLimit
		public RuleCall getCollectionLimitParserRuleCall_6() { return cCollectionLimitParserRuleCall_6; }
		
		//ClusterLimit
		public RuleCall getClusterLimitParserRuleCall_7() { return cClusterLimitParserRuleCall_7; }
		
		//IndexLimit
		public RuleCall getIndexLimitParserRuleCall_8() { return cIndexLimitParserRuleCall_8; }
		
		//VectorIndex
		public RuleCall getVectorIndexParserRuleCall_9() { return cVectorIndexParserRuleCall_9; }
		
		//NonVectorIndex
		public RuleCall getNonVectorIndexParserRuleCall_10() { return cNonVectorIndexParserRuleCall_10; }
		
		//NonVectorField
		public RuleCall getNonVectorFieldParserRuleCall_11() { return cNonVectorFieldParserRuleCall_11; }
		
		//VectorField
		public RuleCall getVectorFieldParserRuleCall_12() { return cVectorFieldParserRuleCall_12; }
	}
	public class FieldElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.domij.Domijmasdsl.Field");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cNonVectorFieldParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cVectorFieldParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Field returns Field:
		//    NonVectorField | VectorField;
		@Override public ParserRule getRule() { return rule; }
		
		//NonVectorField | VectorField
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//NonVectorField
		public RuleCall getNonVectorFieldParserRuleCall_0() { return cNonVectorFieldParserRuleCall_0; }
		
		//VectorField
		public RuleCall getVectorFieldParserRuleCall_1() { return cVectorFieldParserRuleCall_1; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.domij.Domijmasdsl.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString returns ecore::EString:
		//    STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class CreateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.domij.Domijmasdsl.Create");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCreateAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cCREATEKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cDdlConceptAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDdlConceptConceptParserRuleCall_2_0 = (RuleCall)cDdlConceptAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLeftSquareBracketKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cDdlNodeAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cDdlNodeDdlMethodCrossReference_3_1_0 = (CrossReference)cDdlNodeAssignment_3_1.eContents().get(0);
		private final RuleCall cDdlNodeDdlMethodEStringParserRuleCall_3_1_0_1 = (RuleCall)cDdlNodeDdlMethodCrossReference_3_1_0.eContents().get(1);
		private final Assignment cDdlNodeAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final CrossReference cDdlNodeDdlMethodCrossReference_3_2_0 = (CrossReference)cDdlNodeAssignment_3_2.eContents().get(0);
		private final RuleCall cDdlNodeDdlMethodEStringParserRuleCall_3_2_0_1 = (RuleCall)cDdlNodeDdlMethodCrossReference_3_2_0.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_3_3 = (Keyword)cGroup_3.eContents().get(3);
		
		//Create returns Create:
		//    {Create}
		//    'CREATE' ddlConcept=Concept
		//    //(ddlNode+=[DdlMethod|EString] ( "," ddlNode+=[DdlMethod|EString])*)?
		//    ('[' ddlNode+=[DdlMethod|EString] (ddlNode+=[DdlMethod|EString])* ']' )?;
		@Override public ParserRule getRule() { return rule; }
		
		//{Create}
		//'CREATE' ddlConcept=Concept
		////(ddlNode+=[DdlMethod|EString] ( "," ddlNode+=[DdlMethod|EString])*)?
		//('[' ddlNode+=[DdlMethod|EString] (ddlNode+=[DdlMethod|EString])* ']' )?
		public Group getGroup() { return cGroup; }
		
		//{Create}
		public Action getCreateAction_0() { return cCreateAction_0; }
		
		//'CREATE'
		public Keyword getCREATEKeyword_1() { return cCREATEKeyword_1; }
		
		//ddlConcept=Concept
		public Assignment getDdlConceptAssignment_2() { return cDdlConceptAssignment_2; }
		
		//Concept
		public RuleCall getDdlConceptConceptParserRuleCall_2_0() { return cDdlConceptConceptParserRuleCall_2_0; }
		
		////(ddlNode+=[DdlMethod|EString] ( "," ddlNode+=[DdlMethod|EString])*)?
		//('[' ddlNode+=[DdlMethod|EString] (ddlNode+=[DdlMethod|EString])* ']' )?
		public Group getGroup_3() { return cGroup_3; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_3_0() { return cLeftSquareBracketKeyword_3_0; }
		
		//ddlNode+=[DdlMethod|EString]
		public Assignment getDdlNodeAssignment_3_1() { return cDdlNodeAssignment_3_1; }
		
		//[DdlMethod|EString]
		public CrossReference getDdlNodeDdlMethodCrossReference_3_1_0() { return cDdlNodeDdlMethodCrossReference_3_1_0; }
		
		//EString
		public RuleCall getDdlNodeDdlMethodEStringParserRuleCall_3_1_0_1() { return cDdlNodeDdlMethodEStringParserRuleCall_3_1_0_1; }
		
		//(ddlNode+=[DdlMethod|EString])*
		public Assignment getDdlNodeAssignment_3_2() { return cDdlNodeAssignment_3_2; }
		
		//[DdlMethod|EString]
		public CrossReference getDdlNodeDdlMethodCrossReference_3_2_0() { return cDdlNodeDdlMethodCrossReference_3_2_0; }
		
		//EString
		public RuleCall getDdlNodeDdlMethodEStringParserRuleCall_3_2_0_1() { return cDdlNodeDdlMethodEStringParserRuleCall_3_2_0_1; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_3_3() { return cRightSquareBracketKeyword_3_3; }
	}
	public class AlterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.domij.Domijmasdsl.Alter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAlterAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cALTERKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cDdlConceptAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDdlConceptConceptParserRuleCall_2_0 = (RuleCall)cDdlConceptAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLeftSquareBracketKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cDdlNodeAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cDdlNodeDdlMethodCrossReference_3_1_0 = (CrossReference)cDdlNodeAssignment_3_1.eContents().get(0);
		private final RuleCall cDdlNodeDdlMethodEStringParserRuleCall_3_1_0_1 = (RuleCall)cDdlNodeDdlMethodCrossReference_3_1_0.eContents().get(1);
		private final Assignment cDdlNodeAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final CrossReference cDdlNodeDdlMethodCrossReference_3_2_0 = (CrossReference)cDdlNodeAssignment_3_2.eContents().get(0);
		private final RuleCall cDdlNodeDdlMethodEStringParserRuleCall_3_2_0_1 = (RuleCall)cDdlNodeDdlMethodCrossReference_3_2_0.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_3_3 = (Keyword)cGroup_3.eContents().get(3);
		private final Keyword cWHENKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cLeftSquareBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cAlterCondAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final CrossReference cAlterCondFilterCrossReference_6_0 = (CrossReference)cAlterCondAssignment_6.eContents().get(0);
		private final RuleCall cAlterCondFilterEStringParserRuleCall_6_0_1 = (RuleCall)cAlterCondFilterCrossReference_6_0.eContents().get(1);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cCommaKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cAlterCondAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final CrossReference cAlterCondFilterCrossReference_7_1_0 = (CrossReference)cAlterCondAssignment_7_1.eContents().get(0);
		private final RuleCall cAlterCondFilterEStringParserRuleCall_7_1_0_1 = (RuleCall)cAlterCondFilterCrossReference_7_1_0.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cSemicolonKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//Alter returns Alter:
		//    {Alter}
		//    'ALTER' ddlConcept=Concept
		//    ('[' ddlNode+=[DdlMethod|EString] (ddlNode+=[DdlMethod|EString])* ']' )?
		//    'WHEN' '[' alterCond+=[Filter|EString] ( "," alterCond+=[Filter|EString])* ']' ';';
		@Override public ParserRule getRule() { return rule; }
		
		//{Alter}
		//'ALTER' ddlConcept=Concept
		//('[' ddlNode+=[DdlMethod|EString] (ddlNode+=[DdlMethod|EString])* ']' )?
		//'WHEN' '[' alterCond+=[Filter|EString] ( "," alterCond+=[Filter|EString])* ']' ';'
		public Group getGroup() { return cGroup; }
		
		//{Alter}
		public Action getAlterAction_0() { return cAlterAction_0; }
		
		//'ALTER'
		public Keyword getALTERKeyword_1() { return cALTERKeyword_1; }
		
		//ddlConcept=Concept
		public Assignment getDdlConceptAssignment_2() { return cDdlConceptAssignment_2; }
		
		//Concept
		public RuleCall getDdlConceptConceptParserRuleCall_2_0() { return cDdlConceptConceptParserRuleCall_2_0; }
		
		//('[' ddlNode+=[DdlMethod|EString] (ddlNode+=[DdlMethod|EString])* ']' )?
		public Group getGroup_3() { return cGroup_3; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_3_0() { return cLeftSquareBracketKeyword_3_0; }
		
		//ddlNode+=[DdlMethod|EString]
		public Assignment getDdlNodeAssignment_3_1() { return cDdlNodeAssignment_3_1; }
		
		//[DdlMethod|EString]
		public CrossReference getDdlNodeDdlMethodCrossReference_3_1_0() { return cDdlNodeDdlMethodCrossReference_3_1_0; }
		
		//EString
		public RuleCall getDdlNodeDdlMethodEStringParserRuleCall_3_1_0_1() { return cDdlNodeDdlMethodEStringParserRuleCall_3_1_0_1; }
		
		//(ddlNode+=[DdlMethod|EString])*
		public Assignment getDdlNodeAssignment_3_2() { return cDdlNodeAssignment_3_2; }
		
		//[DdlMethod|EString]
		public CrossReference getDdlNodeDdlMethodCrossReference_3_2_0() { return cDdlNodeDdlMethodCrossReference_3_2_0; }
		
		//EString
		public RuleCall getDdlNodeDdlMethodEStringParserRuleCall_3_2_0_1() { return cDdlNodeDdlMethodEStringParserRuleCall_3_2_0_1; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_3_3() { return cRightSquareBracketKeyword_3_3; }
		
		//'WHEN'
		public Keyword getWHENKeyword_4() { return cWHENKeyword_4; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_5() { return cLeftSquareBracketKeyword_5; }
		
		//alterCond+=[Filter|EString]
		public Assignment getAlterCondAssignment_6() { return cAlterCondAssignment_6; }
		
		//[Filter|EString]
		public CrossReference getAlterCondFilterCrossReference_6_0() { return cAlterCondFilterCrossReference_6_0; }
		
		//EString
		public RuleCall getAlterCondFilterEStringParserRuleCall_6_0_1() { return cAlterCondFilterEStringParserRuleCall_6_0_1; }
		
		//( "," alterCond+=[Filter|EString])*
		public Group getGroup_7() { return cGroup_7; }
		
		//","
		public Keyword getCommaKeyword_7_0() { return cCommaKeyword_7_0; }
		
		//alterCond+=[Filter|EString]
		public Assignment getAlterCondAssignment_7_1() { return cAlterCondAssignment_7_1; }
		
		//[Filter|EString]
		public CrossReference getAlterCondFilterCrossReference_7_1_0() { return cAlterCondFilterCrossReference_7_1_0; }
		
		//EString
		public RuleCall getAlterCondFilterEStringParserRuleCall_7_1_0_1() { return cAlterCondFilterEStringParserRuleCall_7_1_0_1; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_8() { return cRightSquareBracketKeyword_8; }
		
		//';'
		public Keyword getSemicolonKeyword_9() { return cSemicolonKeyword_9; }
	}
	public class DropElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.domij.Domijmasdsl.Drop");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDropAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cDROPKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cDdlConceptAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDdlConceptConceptParserRuleCall_2_0 = (RuleCall)cDdlConceptAssignment_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cLeftSquareBracketKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cDdlNodeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cDdlNodeDdlMethodCrossReference_4_1_0 = (CrossReference)cDdlNodeAssignment_4_1.eContents().get(0);
		private final RuleCall cDdlNodeDdlMethodEStringParserRuleCall_4_1_0_1 = (RuleCall)cDdlNodeDdlMethodCrossReference_4_1_0.eContents().get(1);
		private final Assignment cDdlNodeAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final CrossReference cDdlNodeDdlMethodCrossReference_4_2_0 = (CrossReference)cDdlNodeAssignment_4_2.eContents().get(0);
		private final RuleCall cDdlNodeDdlMethodEStringParserRuleCall_4_2_0_1 = (RuleCall)cDdlNodeDdlMethodCrossReference_4_2_0.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_4_3 = (Keyword)cGroup_4.eContents().get(3);
		private final Keyword cWHENKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cLeftSquareBracketKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cDropCondAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final CrossReference cDropCondFilterCrossReference_6_1_0 = (CrossReference)cDropCondAssignment_6_1.eContents().get(0);
		private final RuleCall cDropCondFilterEStringParserRuleCall_6_1_0_1 = (RuleCall)cDropCondFilterCrossReference_6_1_0.eContents().get(1);
		private final Group cGroup_6_2 = (Group)cGroup_6.eContents().get(2);
		private final Keyword cCommaKeyword_6_2_0 = (Keyword)cGroup_6_2.eContents().get(0);
		private final Assignment cDropCondAssignment_6_2_1 = (Assignment)cGroup_6_2.eContents().get(1);
		private final CrossReference cDropCondFilterCrossReference_6_2_1_0 = (CrossReference)cDropCondAssignment_6_2_1.eContents().get(0);
		private final RuleCall cDropCondFilterEStringParserRuleCall_6_2_1_0_1 = (RuleCall)cDropCondFilterCrossReference_6_2_1_0.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_6_3 = (Keyword)cGroup_6.eContents().get(3);
		private final Keyword cSemicolonKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Drop returns Drop:
		//    {Drop}
		//    'DROP' ddlConcept=Concept (';')?
		//    ('[' ddlNode+=[DdlMethod|EString] (ddlNode+=[DdlMethod|EString])* ']' )?
		//    ('WHEN')? ('[' dropCond+=[Filter|EString] ( "," dropCond+=[Filter|EString])* ']' )? ';';
		@Override public ParserRule getRule() { return rule; }
		
		//{Drop}
		//'DROP' ddlConcept=Concept (';')?
		//('[' ddlNode+=[DdlMethod|EString] (ddlNode+=[DdlMethod|EString])* ']' )?
		//('WHEN')? ('[' dropCond+=[Filter|EString] ( "," dropCond+=[Filter|EString])* ']' )? ';'
		public Group getGroup() { return cGroup; }
		
		//{Drop}
		public Action getDropAction_0() { return cDropAction_0; }
		
		//'DROP'
		public Keyword getDROPKeyword_1() { return cDROPKeyword_1; }
		
		//ddlConcept=Concept
		public Assignment getDdlConceptAssignment_2() { return cDdlConceptAssignment_2; }
		
		//Concept
		public RuleCall getDdlConceptConceptParserRuleCall_2_0() { return cDdlConceptConceptParserRuleCall_2_0; }
		
		//(';')?
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
		
		//('[' ddlNode+=[DdlMethod|EString] (ddlNode+=[DdlMethod|EString])* ']' )?
		public Group getGroup_4() { return cGroup_4; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_4_0() { return cLeftSquareBracketKeyword_4_0; }
		
		//ddlNode+=[DdlMethod|EString]
		public Assignment getDdlNodeAssignment_4_1() { return cDdlNodeAssignment_4_1; }
		
		//[DdlMethod|EString]
		public CrossReference getDdlNodeDdlMethodCrossReference_4_1_0() { return cDdlNodeDdlMethodCrossReference_4_1_0; }
		
		//EString
		public RuleCall getDdlNodeDdlMethodEStringParserRuleCall_4_1_0_1() { return cDdlNodeDdlMethodEStringParserRuleCall_4_1_0_1; }
		
		//(ddlNode+=[DdlMethod|EString])*
		public Assignment getDdlNodeAssignment_4_2() { return cDdlNodeAssignment_4_2; }
		
		//[DdlMethod|EString]
		public CrossReference getDdlNodeDdlMethodCrossReference_4_2_0() { return cDdlNodeDdlMethodCrossReference_4_2_0; }
		
		//EString
		public RuleCall getDdlNodeDdlMethodEStringParserRuleCall_4_2_0_1() { return cDdlNodeDdlMethodEStringParserRuleCall_4_2_0_1; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_4_3() { return cRightSquareBracketKeyword_4_3; }
		
		//('WHEN')?
		public Keyword getWHENKeyword_5() { return cWHENKeyword_5; }
		
		//('[' dropCond+=[Filter|EString] ( "," dropCond+=[Filter|EString])* ']' )?
		public Group getGroup_6() { return cGroup_6; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_6_0() { return cLeftSquareBracketKeyword_6_0; }
		
		//dropCond+=[Filter|EString]
		public Assignment getDropCondAssignment_6_1() { return cDropCondAssignment_6_1; }
		
		//[Filter|EString]
		public CrossReference getDropCondFilterCrossReference_6_1_0() { return cDropCondFilterCrossReference_6_1_0; }
		
		//EString
		public RuleCall getDropCondFilterEStringParserRuleCall_6_1_0_1() { return cDropCondFilterEStringParserRuleCall_6_1_0_1; }
		
		//( "," dropCond+=[Filter|EString])*
		public Group getGroup_6_2() { return cGroup_6_2; }
		
		//","
		public Keyword getCommaKeyword_6_2_0() { return cCommaKeyword_6_2_0; }
		
		//dropCond+=[Filter|EString]
		public Assignment getDropCondAssignment_6_2_1() { return cDropCondAssignment_6_2_1; }
		
		//[Filter|EString]
		public CrossReference getDropCondFilterCrossReference_6_2_1_0() { return cDropCondFilterCrossReference_6_2_1_0; }
		
		//EString
		public RuleCall getDropCondFilterEStringParserRuleCall_6_2_1_0_1() { return cDropCondFilterEStringParserRuleCall_6_2_1_0_1; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_6_3() { return cRightSquareBracketKeyword_6_3; }
		
		//';'
		public Keyword getSemicolonKeyword_7() { return cSemicolonKeyword_7; }
	}
	public class InsertElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.domij.Domijmasdsl.Insert");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cINSERTKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cINTOKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cCOLLECTIONKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cDmlCollectionAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cDmlCollectionVectorCollectionParserRuleCall_3_0 = (RuleCall)cDmlCollectionAssignment_3.eContents().get(0);
		private final Keyword cFROMKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cPathKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cEqualsSignKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cPathAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cPathEStringParserRuleCall_7_0 = (RuleCall)cPathAssignment_7.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cNumberKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Keyword cOfKeyword_8_1 = (Keyword)cGroup_8.eContents().get(1);
		private final Keyword cRecordsKeyword_8_2 = (Keyword)cGroup_8.eContents().get(2);
		private final Keyword cEqualsSignKeyword_8_3 = (Keyword)cGroup_8.eContents().get(3);
		private final Assignment cNofRecordsAssignment_8_4 = (Assignment)cGroup_8.eContents().get(4);
		private final RuleCall cNofRecordsEIntParserRuleCall_8_4_0 = (RuleCall)cNofRecordsAssignment_8_4.eContents().get(0);
		private final Keyword cSemicolonKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//Insert returns Insert:
		//    'INSERT' 'INTO' 'COLLECTION' dmlCollection=VectorCollection
		//    'FROM' 'path' '=' path=EString
		//    ('number' 'of' 'records' '=' nofRecords=EInt)? ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'INSERT' 'INTO' 'COLLECTION' dmlCollection=VectorCollection
		//'FROM' 'path' '=' path=EString
		//('number' 'of' 'records' '=' nofRecords=EInt)? ';'
		public Group getGroup() { return cGroup; }
		
		//'INSERT'
		public Keyword getINSERTKeyword_0() { return cINSERTKeyword_0; }
		
		//'INTO'
		public Keyword getINTOKeyword_1() { return cINTOKeyword_1; }
		
		//'COLLECTION'
		public Keyword getCOLLECTIONKeyword_2() { return cCOLLECTIONKeyword_2; }
		
		//dmlCollection=VectorCollection
		public Assignment getDmlCollectionAssignment_3() { return cDmlCollectionAssignment_3; }
		
		//VectorCollection
		public RuleCall getDmlCollectionVectorCollectionParserRuleCall_3_0() { return cDmlCollectionVectorCollectionParserRuleCall_3_0; }
		
		//'FROM'
		public Keyword getFROMKeyword_4() { return cFROMKeyword_4; }
		
		//'path'
		public Keyword getPathKeyword_5() { return cPathKeyword_5; }
		
		//'='
		public Keyword getEqualsSignKeyword_6() { return cEqualsSignKeyword_6; }
		
		//path=EString
		public Assignment getPathAssignment_7() { return cPathAssignment_7; }
		
		//EString
		public RuleCall getPathEStringParserRuleCall_7_0() { return cPathEStringParserRuleCall_7_0; }
		
		//('number' 'of' 'records' '=' nofRecords=EInt)?
		public Group getGroup_8() { return cGroup_8; }
		
		//'number'
		public Keyword getNumberKeyword_8_0() { return cNumberKeyword_8_0; }
		
		//'of'
		public Keyword getOfKeyword_8_1() { return cOfKeyword_8_1; }
		
		//'records'
		public Keyword getRecordsKeyword_8_2() { return cRecordsKeyword_8_2; }
		
		//'='
		public Keyword getEqualsSignKeyword_8_3() { return cEqualsSignKeyword_8_3; }
		
		//nofRecords=EInt
		public Assignment getNofRecordsAssignment_8_4() { return cNofRecordsAssignment_8_4; }
		
		//EInt
		public RuleCall getNofRecordsEIntParserRuleCall_8_4_0() { return cNofRecordsEIntParserRuleCall_8_4_0; }
		
		//';'
		public Keyword getSemicolonKeyword_9() { return cSemicolonKeyword_9; }
	}
	public class UpdateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.domij.Domijmasdsl.Update");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cUPDATEKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cCOLLECTIONKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cDmlCollectionAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDmlCollectionVectorCollectionParserRuleCall_2_0 = (RuleCall)cDmlCollectionAssignment_2.eContents().get(0);
		private final Keyword cFROMKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cPathKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cEqualsSignKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cPathAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cPathEStringParserRuleCall_6_0 = (RuleCall)cPathAssignment_6.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cNumberKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cOfKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Keyword cRecordsKeyword_7_2 = (Keyword)cGroup_7.eContents().get(2);
		private final Keyword cEqualsSignKeyword_7_3 = (Keyword)cGroup_7.eContents().get(3);
		private final Assignment cNofRecordsAssignment_7_4 = (Assignment)cGroup_7.eContents().get(4);
		private final RuleCall cNofRecordsEIntParserRuleCall_7_4_0 = (RuleCall)cNofRecordsAssignment_7_4.eContents().get(0);
		private final Keyword cWHENKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cLeftSquareBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cUpdateCondAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final CrossReference cUpdateCondFilterCrossReference_10_0 = (CrossReference)cUpdateCondAssignment_10.eContents().get(0);
		private final RuleCall cUpdateCondFilterEStringParserRuleCall_10_0_1 = (RuleCall)cUpdateCondFilterCrossReference_10_0.eContents().get(1);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Keyword cCommaKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Assignment cUpdateCondAssignment_11_1 = (Assignment)cGroup_11.eContents().get(1);
		private final CrossReference cUpdateCondFilterCrossReference_11_1_0 = (CrossReference)cUpdateCondAssignment_11_1.eContents().get(0);
		private final RuleCall cUpdateCondFilterEStringParserRuleCall_11_1_0_1 = (RuleCall)cUpdateCondFilterCrossReference_11_1_0.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Keyword cSemicolonKeyword_13 = (Keyword)cGroup.eContents().get(13);
		
		//Update returns Update:
		//    'UPDATE' 'COLLECTION' dmlCollection=VectorCollection
		//    'FROM' 'path' '=' path=EString
		//    ('number' 'of' 'records' '=' nofRecords=EInt)?
		//    'WHEN' '[' updateCond+=[Filter|EString] ( "," updateCond+=[Filter|EString])* ']' ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'UPDATE' 'COLLECTION' dmlCollection=VectorCollection
		//'FROM' 'path' '=' path=EString
		//('number' 'of' 'records' '=' nofRecords=EInt)?
		//'WHEN' '[' updateCond+=[Filter|EString] ( "," updateCond+=[Filter|EString])* ']' ';'
		public Group getGroup() { return cGroup; }
		
		//'UPDATE'
		public Keyword getUPDATEKeyword_0() { return cUPDATEKeyword_0; }
		
		//'COLLECTION'
		public Keyword getCOLLECTIONKeyword_1() { return cCOLLECTIONKeyword_1; }
		
		//dmlCollection=VectorCollection
		public Assignment getDmlCollectionAssignment_2() { return cDmlCollectionAssignment_2; }
		
		//VectorCollection
		public RuleCall getDmlCollectionVectorCollectionParserRuleCall_2_0() { return cDmlCollectionVectorCollectionParserRuleCall_2_0; }
		
		//'FROM'
		public Keyword getFROMKeyword_3() { return cFROMKeyword_3; }
		
		//'path'
		public Keyword getPathKeyword_4() { return cPathKeyword_4; }
		
		//'='
		public Keyword getEqualsSignKeyword_5() { return cEqualsSignKeyword_5; }
		
		//path=EString
		public Assignment getPathAssignment_6() { return cPathAssignment_6; }
		
		//EString
		public RuleCall getPathEStringParserRuleCall_6_0() { return cPathEStringParserRuleCall_6_0; }
		
		//('number' 'of' 'records' '=' nofRecords=EInt)?
		public Group getGroup_7() { return cGroup_7; }
		
		//'number'
		public Keyword getNumberKeyword_7_0() { return cNumberKeyword_7_0; }
		
		//'of'
		public Keyword getOfKeyword_7_1() { return cOfKeyword_7_1; }
		
		//'records'
		public Keyword getRecordsKeyword_7_2() { return cRecordsKeyword_7_2; }
		
		//'='
		public Keyword getEqualsSignKeyword_7_3() { return cEqualsSignKeyword_7_3; }
		
		//nofRecords=EInt
		public Assignment getNofRecordsAssignment_7_4() { return cNofRecordsAssignment_7_4; }
		
		//EInt
		public RuleCall getNofRecordsEIntParserRuleCall_7_4_0() { return cNofRecordsEIntParserRuleCall_7_4_0; }
		
		//'WHEN'
		public Keyword getWHENKeyword_8() { return cWHENKeyword_8; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_9() { return cLeftSquareBracketKeyword_9; }
		
		//updateCond+=[Filter|EString]
		public Assignment getUpdateCondAssignment_10() { return cUpdateCondAssignment_10; }
		
		//[Filter|EString]
		public CrossReference getUpdateCondFilterCrossReference_10_0() { return cUpdateCondFilterCrossReference_10_0; }
		
		//EString
		public RuleCall getUpdateCondFilterEStringParserRuleCall_10_0_1() { return cUpdateCondFilterEStringParserRuleCall_10_0_1; }
		
		//( "," updateCond+=[Filter|EString])*
		public Group getGroup_11() { return cGroup_11; }
		
		//","
		public Keyword getCommaKeyword_11_0() { return cCommaKeyword_11_0; }
		
		//updateCond+=[Filter|EString]
		public Assignment getUpdateCondAssignment_11_1() { return cUpdateCondAssignment_11_1; }
		
		//[Filter|EString]
		public CrossReference getUpdateCondFilterCrossReference_11_1_0() { return cUpdateCondFilterCrossReference_11_1_0; }
		
		//EString
		public RuleCall getUpdateCondFilterEStringParserRuleCall_11_1_0_1() { return cUpdateCondFilterEStringParserRuleCall_11_1_0_1; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_12() { return cRightSquareBracketKeyword_12; }
		
		//';'
		public Keyword getSemicolonKeyword_13() { return cSemicolonKeyword_13; }
	}
	public class DeleteElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.domij.Domijmasdsl.Delete");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDELETEKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cINKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cCOLLECTIONKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cDmlCollectionAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cDmlCollectionVectorCollectionParserRuleCall_3_0 = (RuleCall)cDmlCollectionAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cWHENKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cDeleteCondAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final CrossReference cDeleteCondFilterCrossReference_4_2_0 = (CrossReference)cDeleteCondAssignment_4_2.eContents().get(0);
		private final RuleCall cDeleteCondFilterEStringParserRuleCall_4_2_0_1 = (RuleCall)cDeleteCondFilterCrossReference_4_2_0.eContents().get(1);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cDeleteCondAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final CrossReference cDeleteCondFilterCrossReference_4_3_1_0 = (CrossReference)cDeleteCondAssignment_4_3_1.eContents().get(0);
		private final RuleCall cDeleteCondFilterEStringParserRuleCall_4_3_1_0_1 = (RuleCall)cDeleteCondFilterCrossReference_4_3_1_0.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Delete returns Delete:
		//    'DELETE' 'IN' 'COLLECTION' dmlCollection=VectorCollection
		//    ('WHEN' '[' deleteCond+=[Filter|EString] ( "," deleteCond+=[Filter|EString])* ']' )? ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'DELETE' 'IN' 'COLLECTION' dmlCollection=VectorCollection
		//('WHEN' '[' deleteCond+=[Filter|EString] ( "," deleteCond+=[Filter|EString])* ']' )? ';'
		public Group getGroup() { return cGroup; }
		
		//'DELETE'
		public Keyword getDELETEKeyword_0() { return cDELETEKeyword_0; }
		
		//'IN'
		public Keyword getINKeyword_1() { return cINKeyword_1; }
		
		//'COLLECTION'
		public Keyword getCOLLECTIONKeyword_2() { return cCOLLECTIONKeyword_2; }
		
		//dmlCollection=VectorCollection
		public Assignment getDmlCollectionAssignment_3() { return cDmlCollectionAssignment_3; }
		
		//VectorCollection
		public RuleCall getDmlCollectionVectorCollectionParserRuleCall_3_0() { return cDmlCollectionVectorCollectionParserRuleCall_3_0; }
		
		//('WHEN' '[' deleteCond+=[Filter|EString] ( "," deleteCond+=[Filter|EString])* ']' )?
		public Group getGroup_4() { return cGroup_4; }
		
		//'WHEN'
		public Keyword getWHENKeyword_4_0() { return cWHENKeyword_4_0; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_4_1() { return cLeftSquareBracketKeyword_4_1; }
		
		//deleteCond+=[Filter|EString]
		public Assignment getDeleteCondAssignment_4_2() { return cDeleteCondAssignment_4_2; }
		
		//[Filter|EString]
		public CrossReference getDeleteCondFilterCrossReference_4_2_0() { return cDeleteCondFilterCrossReference_4_2_0; }
		
		//EString
		public RuleCall getDeleteCondFilterEStringParserRuleCall_4_2_0_1() { return cDeleteCondFilterEStringParserRuleCall_4_2_0_1; }
		
		//( "," deleteCond+=[Filter|EString])*
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }
		
		//deleteCond+=[Filter|EString]
		public Assignment getDeleteCondAssignment_4_3_1() { return cDeleteCondAssignment_4_3_1; }
		
		//[Filter|EString]
		public CrossReference getDeleteCondFilterCrossReference_4_3_1_0() { return cDeleteCondFilterCrossReference_4_3_1_0; }
		
		//EString
		public RuleCall getDeleteCondFilterEStringParserRuleCall_4_3_1_0_1() { return cDeleteCondFilterEStringParserRuleCall_4_3_1_0_1; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_4_4() { return cRightSquareBracketKeyword_4_4; }
		
		//';'
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }
	}
	public class VectorSearchElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.domij.Domijmasdsl.VectorSearch");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cVECTORKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cSEARCHKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cINKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cCOLLECTIONKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cQueryCollectionAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cQueryCollectionVectorCollectionParserRuleCall_4_0 = (RuleCall)cQueryCollectionAssignment_4.eContents().get(0);
		private final Keyword cTopKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cKKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cEqualsSignKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cTopKAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cTopKEIntParserRuleCall_8_0 = (RuleCall)cTopKAssignment_8.eContents().get(0);
		private final Keyword cMetricKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cEqualsSignKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cMetricAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cMetricEMetricTypeEnumRuleCall_11_0 = (RuleCall)cMetricAssignment_11.eContents().get(0);
		private final Group cGroup_12 = (Group)cGroup.eContents().get(12);
		private final Keyword cNumUnitsProbeKeyword_12_0 = (Keyword)cGroup_12.eContents().get(0);
		private final Keyword cEqualsSignKeyword_12_1 = (Keyword)cGroup_12.eContents().get(1);
		private final Assignment cNumUnitsProbeAssignment_12_2 = (Assignment)cGroup_12.eContents().get(2);
		private final RuleCall cNumUnitsProbeEIntParserRuleCall_12_2_0 = (RuleCall)cNumUnitsProbeAssignment_12_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Keyword cOUTKeyword_14 = (Keyword)cGroup.eContents().get(14);
		private final Keyword cFIELDSKeyword_15 = (Keyword)cGroup.eContents().get(15);
		private final Keyword cLeftParenthesisKeyword_16 = (Keyword)cGroup.eContents().get(16);
		private final Assignment cOutputFieldsAssignment_17 = (Assignment)cGroup.eContents().get(17);
		private final CrossReference cOutputFieldsFieldCrossReference_17_0 = (CrossReference)cOutputFieldsAssignment_17.eContents().get(0);
		private final RuleCall cOutputFieldsFieldEStringParserRuleCall_17_0_1 = (RuleCall)cOutputFieldsFieldCrossReference_17_0.eContents().get(1);
		private final Group cGroup_18 = (Group)cGroup.eContents().get(18);
		private final Keyword cCommaKeyword_18_0 = (Keyword)cGroup_18.eContents().get(0);
		private final Assignment cOutputFieldsAssignment_18_1 = (Assignment)cGroup_18.eContents().get(1);
		private final CrossReference cOutputFieldsFieldCrossReference_18_1_0 = (CrossReference)cOutputFieldsAssignment_18_1.eContents().get(0);
		private final RuleCall cOutputFieldsFieldEStringParserRuleCall_18_1_0_1 = (RuleCall)cOutputFieldsFieldCrossReference_18_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_19 = (Keyword)cGroup.eContents().get(19);
		private final Group cGroup_20 = (Group)cGroup.eContents().get(20);
		private final Keyword cWITHKeyword_20_0 = (Keyword)cGroup_20.eContents().get(0);
		private final Keyword cFILTERSKeyword_20_1 = (Keyword)cGroup_20.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_20_2 = (Keyword)cGroup_20.eContents().get(2);
		private final Assignment cVecSearchFiltersAssignment_20_3 = (Assignment)cGroup_20.eContents().get(3);
		private final CrossReference cVecSearchFiltersFilterCrossReference_20_3_0 = (CrossReference)cVecSearchFiltersAssignment_20_3.eContents().get(0);
		private final RuleCall cVecSearchFiltersFilterEStringParserRuleCall_20_3_0_1 = (RuleCall)cVecSearchFiltersFilterCrossReference_20_3_0.eContents().get(1);
		private final Group cGroup_20_4 = (Group)cGroup_20.eContents().get(4);
		private final Keyword cCommaKeyword_20_4_0 = (Keyword)cGroup_20_4.eContents().get(0);
		private final Assignment cVecSearchFiltersAssignment_20_4_1 = (Assignment)cGroup_20_4.eContents().get(1);
		private final CrossReference cVecSearchFiltersFilterCrossReference_20_4_1_0 = (CrossReference)cVecSearchFiltersAssignment_20_4_1.eContents().get(0);
		private final RuleCall cVecSearchFiltersFilterEStringParserRuleCall_20_4_1_0_1 = (RuleCall)cVecSearchFiltersFilterCrossReference_20_4_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_20_5 = (Keyword)cGroup_20.eContents().get(5);
		private final Keyword cSemicolonKeyword_21 = (Keyword)cGroup.eContents().get(21);
		
		//VectorSearch returns VectorSearch:
		//    'VECTOR' 'SEARCH' 'IN' 'COLLECTION' queryCollection=VectorCollection
		//    'top' 'K' '=' topK=EInt
		//    'metric' '=' metric=EMetricType
		//    ('numUnitsProbe' '=' numUnitsProbe=EInt)? ';'
		//    'OUT' 'FIELDS' '(' outputFields+=[Field|EString] ( "," outputFields+=[Field|EString])* ')'
		//    ('WITH' 'FILTERS' '(' vecSearchFilters+=[Filter|EString] ( "," vecSearchFilters+=[Filter|EString])* ')' )? ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'VECTOR' 'SEARCH' 'IN' 'COLLECTION' queryCollection=VectorCollection
		//'top' 'K' '=' topK=EInt
		//'metric' '=' metric=EMetricType
		//('numUnitsProbe' '=' numUnitsProbe=EInt)? ';'
		//'OUT' 'FIELDS' '(' outputFields+=[Field|EString] ( "," outputFields+=[Field|EString])* ')'
		//('WITH' 'FILTERS' '(' vecSearchFilters+=[Filter|EString] ( "," vecSearchFilters+=[Filter|EString])* ')' )? ';'
		public Group getGroup() { return cGroup; }
		
		//'VECTOR'
		public Keyword getVECTORKeyword_0() { return cVECTORKeyword_0; }
		
		//'SEARCH'
		public Keyword getSEARCHKeyword_1() { return cSEARCHKeyword_1; }
		
		//'IN'
		public Keyword getINKeyword_2() { return cINKeyword_2; }
		
		//'COLLECTION'
		public Keyword getCOLLECTIONKeyword_3() { return cCOLLECTIONKeyword_3; }
		
		//queryCollection=VectorCollection
		public Assignment getQueryCollectionAssignment_4() { return cQueryCollectionAssignment_4; }
		
		//VectorCollection
		public RuleCall getQueryCollectionVectorCollectionParserRuleCall_4_0() { return cQueryCollectionVectorCollectionParserRuleCall_4_0; }
		
		//'top'
		public Keyword getTopKeyword_5() { return cTopKeyword_5; }
		
		//'K'
		public Keyword getKKeyword_6() { return cKKeyword_6; }
		
		//'='
		public Keyword getEqualsSignKeyword_7() { return cEqualsSignKeyword_7; }
		
		//topK=EInt
		public Assignment getTopKAssignment_8() { return cTopKAssignment_8; }
		
		//EInt
		public RuleCall getTopKEIntParserRuleCall_8_0() { return cTopKEIntParserRuleCall_8_0; }
		
		//'metric'
		public Keyword getMetricKeyword_9() { return cMetricKeyword_9; }
		
		//'='
		public Keyword getEqualsSignKeyword_10() { return cEqualsSignKeyword_10; }
		
		//metric=EMetricType
		public Assignment getMetricAssignment_11() { return cMetricAssignment_11; }
		
		//EMetricType
		public RuleCall getMetricEMetricTypeEnumRuleCall_11_0() { return cMetricEMetricTypeEnumRuleCall_11_0; }
		
		//('numUnitsProbe' '=' numUnitsProbe=EInt)?
		public Group getGroup_12() { return cGroup_12; }
		
		//'numUnitsProbe'
		public Keyword getNumUnitsProbeKeyword_12_0() { return cNumUnitsProbeKeyword_12_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_12_1() { return cEqualsSignKeyword_12_1; }
		
		//numUnitsProbe=EInt
		public Assignment getNumUnitsProbeAssignment_12_2() { return cNumUnitsProbeAssignment_12_2; }
		
		//EInt
		public RuleCall getNumUnitsProbeEIntParserRuleCall_12_2_0() { return cNumUnitsProbeEIntParserRuleCall_12_2_0; }
		
		//';'
		public Keyword getSemicolonKeyword_13() { return cSemicolonKeyword_13; }
		
		//'OUT'
		public Keyword getOUTKeyword_14() { return cOUTKeyword_14; }
		
		//'FIELDS'
		public Keyword getFIELDSKeyword_15() { return cFIELDSKeyword_15; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_16() { return cLeftParenthesisKeyword_16; }
		
		//outputFields+=[Field|EString]
		public Assignment getOutputFieldsAssignment_17() { return cOutputFieldsAssignment_17; }
		
		//[Field|EString]
		public CrossReference getOutputFieldsFieldCrossReference_17_0() { return cOutputFieldsFieldCrossReference_17_0; }
		
		//EString
		public RuleCall getOutputFieldsFieldEStringParserRuleCall_17_0_1() { return cOutputFieldsFieldEStringParserRuleCall_17_0_1; }
		
		//( "," outputFields+=[Field|EString])*
		public Group getGroup_18() { return cGroup_18; }
		
		//","
		public Keyword getCommaKeyword_18_0() { return cCommaKeyword_18_0; }
		
		//outputFields+=[Field|EString]
		public Assignment getOutputFieldsAssignment_18_1() { return cOutputFieldsAssignment_18_1; }
		
		//[Field|EString]
		public CrossReference getOutputFieldsFieldCrossReference_18_1_0() { return cOutputFieldsFieldCrossReference_18_1_0; }
		
		//EString
		public RuleCall getOutputFieldsFieldEStringParserRuleCall_18_1_0_1() { return cOutputFieldsFieldEStringParserRuleCall_18_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_19() { return cRightParenthesisKeyword_19; }
		
		//('WITH' 'FILTERS' '(' vecSearchFilters+=[Filter|EString] ( "," vecSearchFilters+=[Filter|EString])* ')' )?
		public Group getGroup_20() { return cGroup_20; }
		
		//'WITH'
		public Keyword getWITHKeyword_20_0() { return cWITHKeyword_20_0; }
		
		//'FILTERS'
		public Keyword getFILTERSKeyword_20_1() { return cFILTERSKeyword_20_1; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_20_2() { return cLeftParenthesisKeyword_20_2; }
		
		//vecSearchFilters+=[Filter|EString]
		public Assignment getVecSearchFiltersAssignment_20_3() { return cVecSearchFiltersAssignment_20_3; }
		
		//[Filter|EString]
		public CrossReference getVecSearchFiltersFilterCrossReference_20_3_0() { return cVecSearchFiltersFilterCrossReference_20_3_0; }
		
		//EString
		public RuleCall getVecSearchFiltersFilterEStringParserRuleCall_20_3_0_1() { return cVecSearchFiltersFilterEStringParserRuleCall_20_3_0_1; }
		
		//( "," vecSearchFilters+=[Filter|EString])*
		public Group getGroup_20_4() { return cGroup_20_4; }
		
		//","
		public Keyword getCommaKeyword_20_4_0() { return cCommaKeyword_20_4_0; }
		
		//vecSearchFilters+=[Filter|EString]
		public Assignment getVecSearchFiltersAssignment_20_4_1() { return cVecSearchFiltersAssignment_20_4_1; }
		
		//[Filter|EString]
		public CrossReference getVecSearchFiltersFilterCrossReference_20_4_1_0() { return cVecSearchFiltersFilterCrossReference_20_4_1_0; }
		
		//EString
		public RuleCall getVecSearchFiltersFilterEStringParserRuleCall_20_4_1_0_1() { return cVecSearchFiltersFilterEStringParserRuleCall_20_4_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_20_5() { return cRightParenthesisKeyword_20_5; }
		
		//';'
		public Keyword getSemicolonKeyword_21() { return cSemicolonKeyword_21; }
	}
	public class NonVectorSearchElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.domij.Domijmasdsl.NonVectorSearch");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cQUERYKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cONKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cCOLLECTIONKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cQueryCollectionAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cQueryCollectionVectorCollectionParserRuleCall_3_0 = (RuleCall)cQueryCollectionAssignment_3.eContents().get(0);
		private final Keyword cTopKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cKKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cEqualsSignKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cTopKAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cTopKEIntParserRuleCall_7_0 = (RuleCall)cTopKAssignment_7.eContents().get(0);
		private final Keyword cOUTKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cFIELDSKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cLeftParenthesisKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cOutputFieldsAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final CrossReference cOutputFieldsFieldCrossReference_11_0 = (CrossReference)cOutputFieldsAssignment_11.eContents().get(0);
		private final RuleCall cOutputFieldsFieldEStringParserRuleCall_11_0_1 = (RuleCall)cOutputFieldsFieldCrossReference_11_0.eContents().get(1);
		private final Group cGroup_12 = (Group)cGroup.eContents().get(12);
		private final Keyword cCommaKeyword_12_0 = (Keyword)cGroup_12.eContents().get(0);
		private final Assignment cOutputFieldsAssignment_12_1 = (Assignment)cGroup_12.eContents().get(1);
		private final CrossReference cOutputFieldsFieldCrossReference_12_1_0 = (CrossReference)cOutputFieldsAssignment_12_1.eContents().get(0);
		private final RuleCall cOutputFieldsFieldEStringParserRuleCall_12_1_0_1 = (RuleCall)cOutputFieldsFieldCrossReference_12_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Group cGroup_14 = (Group)cGroup.eContents().get(14);
		private final Keyword cWITHKeyword_14_0 = (Keyword)cGroup_14.eContents().get(0);
		private final Keyword cFILTERSKeyword_14_1 = (Keyword)cGroup_14.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_14_2 = (Keyword)cGroup_14.eContents().get(2);
		private final Assignment cNonVecFiltersAssignment_14_3 = (Assignment)cGroup_14.eContents().get(3);
		private final RuleCall cNonVecFiltersFilterParserRuleCall_14_3_0 = (RuleCall)cNonVecFiltersAssignment_14_3.eContents().get(0);
		private final Group cGroup_14_4 = (Group)cGroup_14.eContents().get(4);
		private final Keyword cCommaKeyword_14_4_0 = (Keyword)cGroup_14_4.eContents().get(0);
		private final Assignment cNonVecFiltersAssignment_14_4_1 = (Assignment)cGroup_14_4.eContents().get(1);
		private final RuleCall cNonVecFiltersFilterParserRuleCall_14_4_1_0 = (RuleCall)cNonVecFiltersAssignment_14_4_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_14_5 = (Keyword)cGroup_14.eContents().get(5);
		private final Keyword cSemicolonKeyword_15 = (Keyword)cGroup.eContents().get(15);
		
		//NonVectorSearch returns NonVectorSearch:
		//    'QUERY' 'ON' 'COLLECTION' queryCollection=VectorCollection
		//    'top' 'K' '=' topK=EInt
		//    'OUT' 'FIELDS' '(' outputFields+=[Field|EString] ( "," outputFields+=[Field|EString])* ')'
		//    ('WITH' 'FILTERS' '[' nonVecFilters+=Filter ( "," nonVecFilters+=Filter)* ']' )? ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'QUERY' 'ON' 'COLLECTION' queryCollection=VectorCollection
		//'top' 'K' '=' topK=EInt
		//'OUT' 'FIELDS' '(' outputFields+=[Field|EString] ( "," outputFields+=[Field|EString])* ')'
		//('WITH' 'FILTERS' '[' nonVecFilters+=Filter ( "," nonVecFilters+=Filter)* ']' )? ';'
		public Group getGroup() { return cGroup; }
		
		//'QUERY'
		public Keyword getQUERYKeyword_0() { return cQUERYKeyword_0; }
		
		//'ON'
		public Keyword getONKeyword_1() { return cONKeyword_1; }
		
		//'COLLECTION'
		public Keyword getCOLLECTIONKeyword_2() { return cCOLLECTIONKeyword_2; }
		
		//queryCollection=VectorCollection
		public Assignment getQueryCollectionAssignment_3() { return cQueryCollectionAssignment_3; }
		
		//VectorCollection
		public RuleCall getQueryCollectionVectorCollectionParserRuleCall_3_0() { return cQueryCollectionVectorCollectionParserRuleCall_3_0; }
		
		//'top'
		public Keyword getTopKeyword_4() { return cTopKeyword_4; }
		
		//'K'
		public Keyword getKKeyword_5() { return cKKeyword_5; }
		
		//'='
		public Keyword getEqualsSignKeyword_6() { return cEqualsSignKeyword_6; }
		
		//topK=EInt
		public Assignment getTopKAssignment_7() { return cTopKAssignment_7; }
		
		//EInt
		public RuleCall getTopKEIntParserRuleCall_7_0() { return cTopKEIntParserRuleCall_7_0; }
		
		//'OUT'
		public Keyword getOUTKeyword_8() { return cOUTKeyword_8; }
		
		//'FIELDS'
		public Keyword getFIELDSKeyword_9() { return cFIELDSKeyword_9; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_10() { return cLeftParenthesisKeyword_10; }
		
		//outputFields+=[Field|EString]
		public Assignment getOutputFieldsAssignment_11() { return cOutputFieldsAssignment_11; }
		
		//[Field|EString]
		public CrossReference getOutputFieldsFieldCrossReference_11_0() { return cOutputFieldsFieldCrossReference_11_0; }
		
		//EString
		public RuleCall getOutputFieldsFieldEStringParserRuleCall_11_0_1() { return cOutputFieldsFieldEStringParserRuleCall_11_0_1; }
		
		//( "," outputFields+=[Field|EString])*
		public Group getGroup_12() { return cGroup_12; }
		
		//","
		public Keyword getCommaKeyword_12_0() { return cCommaKeyword_12_0; }
		
		//outputFields+=[Field|EString]
		public Assignment getOutputFieldsAssignment_12_1() { return cOutputFieldsAssignment_12_1; }
		
		//[Field|EString]
		public CrossReference getOutputFieldsFieldCrossReference_12_1_0() { return cOutputFieldsFieldCrossReference_12_1_0; }
		
		//EString
		public RuleCall getOutputFieldsFieldEStringParserRuleCall_12_1_0_1() { return cOutputFieldsFieldEStringParserRuleCall_12_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_13() { return cRightParenthesisKeyword_13; }
		
		//('WITH' 'FILTERS' '[' nonVecFilters+=Filter ( "," nonVecFilters+=Filter)* ']' )?
		public Group getGroup_14() { return cGroup_14; }
		
		//'WITH'
		public Keyword getWITHKeyword_14_0() { return cWITHKeyword_14_0; }
		
		//'FILTERS'
		public Keyword getFILTERSKeyword_14_1() { return cFILTERSKeyword_14_1; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_14_2() { return cLeftSquareBracketKeyword_14_2; }
		
		//nonVecFilters+=Filter
		public Assignment getNonVecFiltersAssignment_14_3() { return cNonVecFiltersAssignment_14_3; }
		
		//Filter
		public RuleCall getNonVecFiltersFilterParserRuleCall_14_3_0() { return cNonVecFiltersFilterParserRuleCall_14_3_0; }
		
		//( "," nonVecFilters+=Filter)*
		public Group getGroup_14_4() { return cGroup_14_4; }
		
		//","
		public Keyword getCommaKeyword_14_4_0() { return cCommaKeyword_14_4_0; }
		
		//nonVecFilters+=Filter
		public Assignment getNonVecFiltersAssignment_14_4_1() { return cNonVecFiltersAssignment_14_4_1; }
		
		//Filter
		public RuleCall getNonVecFiltersFilterParserRuleCall_14_4_1_0() { return cNonVecFiltersFilterParserRuleCall_14_4_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_14_5() { return cRightSquareBracketKeyword_14_5; }
		
		//';'
		public Keyword getSemicolonKeyword_15() { return cSemicolonKeyword_15; }
	}
	public class VectorDatabaseElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.domij.Domijmasdsl.VectorDatabase");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cVECTORKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cDATABASEKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cWITHKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cCONNECTIONKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cConnectionAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cConnectionConnectionParserRuleCall_5_0 = (RuleCall)cConnectionAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cDescriptionKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cEqualsSignKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cDescriptionAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cDescriptionEStringParserRuleCall_6_2_0 = (RuleCall)cDescriptionAssignment_6_2.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cWITHKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cCLUSTERSKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_7_2 = (Keyword)cGroup_7.eContents().get(2);
		private final Assignment cClustersAssignment_7_3 = (Assignment)cGroup_7.eContents().get(3);
		private final CrossReference cClustersClusterCrossReference_7_3_0 = (CrossReference)cClustersAssignment_7_3.eContents().get(0);
		private final RuleCall cClustersClusterEStringParserRuleCall_7_3_0_1 = (RuleCall)cClustersClusterCrossReference_7_3_0.eContents().get(1);
		private final Assignment cClustersAssignment_7_4 = (Assignment)cGroup_7.eContents().get(4);
		private final CrossReference cClustersClusterCrossReference_7_4_0 = (CrossReference)cClustersAssignment_7_4.eContents().get(0);
		private final RuleCall cClustersClusterEStringParserRuleCall_7_4_0_1 = (RuleCall)cClustersClusterCrossReference_7_4_0.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_7_5 = (Keyword)cGroup_7.eContents().get(5);
		
		//VectorDatabase returns VectorDatabase:
		//    'VECTOR' 'DATABASE' name=EString
		//    'WITH' 'CONNECTION' connection=Connection
		//    ('description' '=' description=EString)?
		//    ('WITH' 'CLUSTERS' '[' clusters+=[Cluster|EString] (clusters+=[Cluster|EString])* ']' )?;
		@Override public ParserRule getRule() { return rule; }
		
		//'VECTOR' 'DATABASE' name=EString
		//'WITH' 'CONNECTION' connection=Connection
		//('description' '=' description=EString)?
		//('WITH' 'CLUSTERS' '[' clusters+=[Cluster|EString] (clusters+=[Cluster|EString])* ']' )?
		public Group getGroup() { return cGroup; }
		
		//'VECTOR'
		public Keyword getVECTORKeyword_0() { return cVECTORKeyword_0; }
		
		//'DATABASE'
		public Keyword getDATABASEKeyword_1() { return cDATABASEKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'WITH'
		public Keyword getWITHKeyword_3() { return cWITHKeyword_3; }
		
		//'CONNECTION'
		public Keyword getCONNECTIONKeyword_4() { return cCONNECTIONKeyword_4; }
		
		//connection=Connection
		public Assignment getConnectionAssignment_5() { return cConnectionAssignment_5; }
		
		//Connection
		public RuleCall getConnectionConnectionParserRuleCall_5_0() { return cConnectionConnectionParserRuleCall_5_0; }
		
		//('description' '=' description=EString)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'description'
		public Keyword getDescriptionKeyword_6_0() { return cDescriptionKeyword_6_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_6_1() { return cEqualsSignKeyword_6_1; }
		
		//description=EString
		public Assignment getDescriptionAssignment_6_2() { return cDescriptionAssignment_6_2; }
		
		//EString
		public RuleCall getDescriptionEStringParserRuleCall_6_2_0() { return cDescriptionEStringParserRuleCall_6_2_0; }
		
		//('WITH' 'CLUSTERS' '[' clusters+=[Cluster|EString] (clusters+=[Cluster|EString])* ']' )?
		public Group getGroup_7() { return cGroup_7; }
		
		//'WITH'
		public Keyword getWITHKeyword_7_0() { return cWITHKeyword_7_0; }
		
		//'CLUSTERS'
		public Keyword getCLUSTERSKeyword_7_1() { return cCLUSTERSKeyword_7_1; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_7_2() { return cLeftSquareBracketKeyword_7_2; }
		
		//clusters+=[Cluster|EString]
		public Assignment getClustersAssignment_7_3() { return cClustersAssignment_7_3; }
		
		//[Cluster|EString]
		public CrossReference getClustersClusterCrossReference_7_3_0() { return cClustersClusterCrossReference_7_3_0; }
		
		//EString
		public RuleCall getClustersClusterEStringParserRuleCall_7_3_0_1() { return cClustersClusterEStringParserRuleCall_7_3_0_1; }
		
		//(clusters+=[Cluster|EString])*
		public Assignment getClustersAssignment_7_4() { return cClustersAssignment_7_4; }
		
		//[Cluster|EString]
		public CrossReference getClustersClusterCrossReference_7_4_0() { return cClustersClusterCrossReference_7_4_0; }
		
		//EString
		public RuleCall getClustersClusterEStringParserRuleCall_7_4_0_1() { return cClustersClusterEStringParserRuleCall_7_4_0_1; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_7_5() { return cRightSquareBracketKeyword_7_5; }
	}
	public class ClusterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.domij.Domijmasdsl.Cluster");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCLUSTERKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cINKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cVectordbAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cVectordbVectorDatabaseCrossReference_3_0 = (CrossReference)cVectordbAssignment_3.eContents().get(0);
		private final RuleCall cVectordbVectorDatabaseEStringParserRuleCall_3_0_1 = (RuleCall)cVectordbVectorDatabaseCrossReference_3_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cDescriptionKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cDescriptionAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cDescriptionEStringParserRuleCall_4_2_0 = (RuleCall)cDescriptionAssignment_4_2.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cNumberKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cOfKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Keyword cCollectionsKeyword_5_2 = (Keyword)cGroup_5.eContents().get(2);
		private final Keyword cEqualsSignKeyword_5_3 = (Keyword)cGroup_5.eContents().get(3);
		private final Assignment cNofCollectionsAssignment_5_4 = (Assignment)cGroup_5.eContents().get(4);
		private final RuleCall cNofCollectionsEIntParserRuleCall_5_4_0 = (RuleCall)cNofCollectionsAssignment_5_4.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cWITHKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cCOLLECTIONSKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_6_2 = (Keyword)cGroup_6.eContents().get(2);
		private final Assignment cCollectionsAssignment_6_3 = (Assignment)cGroup_6.eContents().get(3);
		private final CrossReference cCollectionsVectorCollectionCrossReference_6_3_0 = (CrossReference)cCollectionsAssignment_6_3.eContents().get(0);
		private final RuleCall cCollectionsVectorCollectionEStringParserRuleCall_6_3_0_1 = (RuleCall)cCollectionsVectorCollectionCrossReference_6_3_0.eContents().get(1);
		private final Assignment cCollectionsAssignment_6_4 = (Assignment)cGroup_6.eContents().get(4);
		private final CrossReference cCollectionsVectorCollectionCrossReference_6_4_0 = (CrossReference)cCollectionsAssignment_6_4.eContents().get(0);
		private final RuleCall cCollectionsVectorCollectionEStringParserRuleCall_6_4_0_1 = (RuleCall)cCollectionsVectorCollectionCrossReference_6_4_0.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_6_5 = (Keyword)cGroup_6.eContents().get(5);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cWITHKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cCLUSTERKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Keyword cLIMITSKeyword_7_2 = (Keyword)cGroup_7.eContents().get(2);
		private final Keyword cLeftSquareBracketKeyword_7_3 = (Keyword)cGroup_7.eContents().get(3);
		private final Assignment cClusterLimitsAssignment_7_4 = (Assignment)cGroup_7.eContents().get(4);
		private final RuleCall cClusterLimitsClusterLimitParserRuleCall_7_4_0 = (RuleCall)cClusterLimitsAssignment_7_4.eContents().get(0);
		private final Assignment cClusterLimitsAssignment_7_5 = (Assignment)cGroup_7.eContents().get(5);
		private final RuleCall cClusterLimitsClusterLimitParserRuleCall_7_5_0 = (RuleCall)cClusterLimitsAssignment_7_5.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_7_6 = (Keyword)cGroup_7.eContents().get(6);
		
		//Cluster returns Cluster:
		//    'CLUSTER' name=EString 'IN' vectordb=[VectorDatabase|EString]
		//        ('description' '=' description=EString)?
		//        ('number' 'of' 'collections' '=' nofCollections=EInt)?
		//        ('WITH' 'COLLECTIONS' '[' collections+=[VectorCollection|EString] ( collections+=[VectorCollection|EString])* ']' )?
		//        ('WITH' 'CLUSTER' 'LIMITS' '[' clusterLimits+=ClusterLimit ( clusterLimits+=ClusterLimit)* ']' )?;
		@Override public ParserRule getRule() { return rule; }
		
		//'CLUSTER' name=EString 'IN' vectordb=[VectorDatabase|EString]
		//    ('description' '=' description=EString)?
		//    ('number' 'of' 'collections' '=' nofCollections=EInt)?
		//    ('WITH' 'COLLECTIONS' '[' collections+=[VectorCollection|EString] ( collections+=[VectorCollection|EString])* ']' )?
		//    ('WITH' 'CLUSTER' 'LIMITS' '[' clusterLimits+=ClusterLimit ( clusterLimits+=ClusterLimit)* ']' )?
		public Group getGroup() { return cGroup; }
		
		//'CLUSTER'
		public Keyword getCLUSTERKeyword_0() { return cCLUSTERKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'IN'
		public Keyword getINKeyword_2() { return cINKeyword_2; }
		
		//vectordb=[VectorDatabase|EString]
		public Assignment getVectordbAssignment_3() { return cVectordbAssignment_3; }
		
		//[VectorDatabase|EString]
		public CrossReference getVectordbVectorDatabaseCrossReference_3_0() { return cVectordbVectorDatabaseCrossReference_3_0; }
		
		//EString
		public RuleCall getVectordbVectorDatabaseEStringParserRuleCall_3_0_1() { return cVectordbVectorDatabaseEStringParserRuleCall_3_0_1; }
		
		//('description' '=' description=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'description'
		public Keyword getDescriptionKeyword_4_0() { return cDescriptionKeyword_4_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_1() { return cEqualsSignKeyword_4_1; }
		
		//description=EString
		public Assignment getDescriptionAssignment_4_2() { return cDescriptionAssignment_4_2; }
		
		//EString
		public RuleCall getDescriptionEStringParserRuleCall_4_2_0() { return cDescriptionEStringParserRuleCall_4_2_0; }
		
		//('number' 'of' 'collections' '=' nofCollections=EInt)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'number'
		public Keyword getNumberKeyword_5_0() { return cNumberKeyword_5_0; }
		
		//'of'
		public Keyword getOfKeyword_5_1() { return cOfKeyword_5_1; }
		
		//'collections'
		public Keyword getCollectionsKeyword_5_2() { return cCollectionsKeyword_5_2; }
		
		//'='
		public Keyword getEqualsSignKeyword_5_3() { return cEqualsSignKeyword_5_3; }
		
		//nofCollections=EInt
		public Assignment getNofCollectionsAssignment_5_4() { return cNofCollectionsAssignment_5_4; }
		
		//EInt
		public RuleCall getNofCollectionsEIntParserRuleCall_5_4_0() { return cNofCollectionsEIntParserRuleCall_5_4_0; }
		
		//('WITH' 'COLLECTIONS' '[' collections+=[VectorCollection|EString] ( collections+=[VectorCollection|EString])* ']' )?
		public Group getGroup_6() { return cGroup_6; }
		
		//'WITH'
		public Keyword getWITHKeyword_6_0() { return cWITHKeyword_6_0; }
		
		//'COLLECTIONS'
		public Keyword getCOLLECTIONSKeyword_6_1() { return cCOLLECTIONSKeyword_6_1; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_6_2() { return cLeftSquareBracketKeyword_6_2; }
		
		//collections+=[VectorCollection|EString]
		public Assignment getCollectionsAssignment_6_3() { return cCollectionsAssignment_6_3; }
		
		//[VectorCollection|EString]
		public CrossReference getCollectionsVectorCollectionCrossReference_6_3_0() { return cCollectionsVectorCollectionCrossReference_6_3_0; }
		
		//EString
		public RuleCall getCollectionsVectorCollectionEStringParserRuleCall_6_3_0_1() { return cCollectionsVectorCollectionEStringParserRuleCall_6_3_0_1; }
		
		//( collections+=[VectorCollection|EString])*
		public Assignment getCollectionsAssignment_6_4() { return cCollectionsAssignment_6_4; }
		
		//[VectorCollection|EString]
		public CrossReference getCollectionsVectorCollectionCrossReference_6_4_0() { return cCollectionsVectorCollectionCrossReference_6_4_0; }
		
		//EString
		public RuleCall getCollectionsVectorCollectionEStringParserRuleCall_6_4_0_1() { return cCollectionsVectorCollectionEStringParserRuleCall_6_4_0_1; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_6_5() { return cRightSquareBracketKeyword_6_5; }
		
		//('WITH' 'CLUSTER' 'LIMITS' '[' clusterLimits+=ClusterLimit ( clusterLimits+=ClusterLimit)* ']' )?
		public Group getGroup_7() { return cGroup_7; }
		
		//'WITH'
		public Keyword getWITHKeyword_7_0() { return cWITHKeyword_7_0; }
		
		//'CLUSTER'
		public Keyword getCLUSTERKeyword_7_1() { return cCLUSTERKeyword_7_1; }
		
		//'LIMITS'
		public Keyword getLIMITSKeyword_7_2() { return cLIMITSKeyword_7_2; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_7_3() { return cLeftSquareBracketKeyword_7_3; }
		
		//clusterLimits+=ClusterLimit
		public Assignment getClusterLimitsAssignment_7_4() { return cClusterLimitsAssignment_7_4; }
		
		//ClusterLimit
		public RuleCall getClusterLimitsClusterLimitParserRuleCall_7_4_0() { return cClusterLimitsClusterLimitParserRuleCall_7_4_0; }
		
		//( clusterLimits+=ClusterLimit)*
		public Assignment getClusterLimitsAssignment_7_5() { return cClusterLimitsAssignment_7_5; }
		
		//ClusterLimit
		public RuleCall getClusterLimitsClusterLimitParserRuleCall_7_5_0() { return cClusterLimitsClusterLimitParserRuleCall_7_5_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_7_6() { return cRightSquareBracketKeyword_7_6; }
	}
	public class VectorCollectionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.domij.Domijmasdsl.VectorCollection");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cVECTORKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cCOLLECTIONKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cINKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cClusterAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cClusterClusterCrossReference_4_0 = (CrossReference)cClusterAssignment_4.eContents().get(0);
		private final RuleCall cClusterClusterEStringParserRuleCall_4_0_1 = (RuleCall)cClusterClusterCrossReference_4_0.eContents().get(1);
		private final Assignment cDynamicAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final Keyword cDynamicDynamicKeyword_5_0 = (Keyword)cDynamicAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cDescriptionKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cEqualsSignKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cDescriptionAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cDescriptionEStringParserRuleCall_6_2_0 = (RuleCall)cDescriptionAssignment_6_2.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cWITHKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cLIMITSKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_7_2 = (Keyword)cGroup_7.eContents().get(2);
		private final Assignment cCollectionLimitsAssignment_7_3 = (Assignment)cGroup_7.eContents().get(3);
		private final RuleCall cCollectionLimitsCollectionLimitParserRuleCall_7_3_0 = (RuleCall)cCollectionLimitsAssignment_7_3.eContents().get(0);
		private final Assignment cCollectionLimitsAssignment_7_4 = (Assignment)cGroup_7.eContents().get(4);
		private final RuleCall cCollectionLimitsCollectionLimitParserRuleCall_7_4_0 = (RuleCall)cCollectionLimitsAssignment_7_4.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_7_5 = (Keyword)cGroup_7.eContents().get(5);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cWITHKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Keyword cFIELDSKeyword_8_1 = (Keyword)cGroup_8.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_8_2 = (Keyword)cGroup_8.eContents().get(2);
		private final Assignment cFieldsAssignment_8_3 = (Assignment)cGroup_8.eContents().get(3);
		private final CrossReference cFieldsFieldCrossReference_8_3_0 = (CrossReference)cFieldsAssignment_8_3.eContents().get(0);
		private final RuleCall cFieldsFieldEStringParserRuleCall_8_3_0_1 = (RuleCall)cFieldsFieldCrossReference_8_3_0.eContents().get(1);
		private final Assignment cFieldsAssignment_8_4 = (Assignment)cGroup_8.eContents().get(4);
		private final CrossReference cFieldsFieldCrossReference_8_4_0 = (CrossReference)cFieldsAssignment_8_4.eContents().get(0);
		private final RuleCall cFieldsFieldEStringParserRuleCall_8_4_0_1 = (RuleCall)cFieldsFieldCrossReference_8_4_0.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_8_5 = (Keyword)cGroup_8.eContents().get(5);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cWITHKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Keyword cPARTITIONSKeyword_9_1 = (Keyword)cGroup_9.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_9_2 = (Keyword)cGroup_9.eContents().get(2);
		private final Assignment cPartitionsAssignment_9_3 = (Assignment)cGroup_9.eContents().get(3);
		private final CrossReference cPartitionsPartitionCrossReference_9_3_0 = (CrossReference)cPartitionsAssignment_9_3.eContents().get(0);
		private final RuleCall cPartitionsPartitionEStringParserRuleCall_9_3_0_1 = (RuleCall)cPartitionsPartitionCrossReference_9_3_0.eContents().get(1);
		private final Assignment cPartitionsAssignment_9_4 = (Assignment)cGroup_9.eContents().get(4);
		private final CrossReference cPartitionsPartitionCrossReference_9_4_0 = (CrossReference)cPartitionsAssignment_9_4.eContents().get(0);
		private final RuleCall cPartitionsPartitionEStringParserRuleCall_9_4_0_1 = (RuleCall)cPartitionsPartitionCrossReference_9_4_0.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_9_5 = (Keyword)cGroup_9.eContents().get(5);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cPodTypeKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Keyword cEqualsSignKeyword_10_1 = (Keyword)cGroup_10.eContents().get(1);
		private final Assignment cPodtypeAssignment_10_2 = (Assignment)cGroup_10.eContents().get(2);
		private final RuleCall cPodtypeEPodTypesEnumRuleCall_10_2_0 = (RuleCall)cPodtypeAssignment_10_2.eContents().get(0);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Keyword cPodSizeKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Keyword cEqualsSignKeyword_11_1 = (Keyword)cGroup_11.eContents().get(1);
		private final Assignment cPodSizeAssignment_11_2 = (Assignment)cGroup_11.eContents().get(2);
		private final RuleCall cPodSizeEPodSizeEnumRuleCall_11_2_0 = (RuleCall)cPodSizeAssignment_11_2.eContents().get(0);
		private final Group cGroup_12 = (Group)cGroup.eContents().get(12);
		private final Keyword cPodEnvKeyword_12_0 = (Keyword)cGroup_12.eContents().get(0);
		private final Keyword cEqualsSignKeyword_12_1 = (Keyword)cGroup_12.eContents().get(1);
		private final Assignment cPodEnvAssignment_12_2 = (Assignment)cGroup_12.eContents().get(2);
		private final RuleCall cPodEnvEPodEnvEnumRuleCall_12_2_0 = (RuleCall)cPodEnvAssignment_12_2.eContents().get(0);
		
		//VectorCollection returns VectorCollection:
		//    'VECTOR' 'COLLECTION' name=EString 'IN' cluster=[Cluster|EString]
		//    (dynamic?='dynamic')?
		//    ('description' '='  description=EString)?
		//    ('WITH' 'LIMITS' '[' collectionLimits+=CollectionLimit ( collectionLimits+=CollectionLimit)* ']' )?
		//    ('WITH' 'FIELDS' '[' fields+=[Field|EString] (fields+=[Field|EString])* ']' )
		//    ('WITH' 'PARTITIONS' '[' partitions+=[Partition|EString] (partitions+=[Partition|EString])* ']' )?
		//    ('podType' '=' podtype=EPodTypes)?
		//    ('podSize' '=' podSize=EPodSize)?
		//    ('podEnv' '=' podEnv=EPodEnv)?;
		@Override public ParserRule getRule() { return rule; }
		
		//'VECTOR' 'COLLECTION' name=EString 'IN' cluster=[Cluster|EString]
		//(dynamic?='dynamic')?
		//('description' '='  description=EString)?
		//('WITH' 'LIMITS' '[' collectionLimits+=CollectionLimit ( collectionLimits+=CollectionLimit)* ']' )?
		//('WITH' 'FIELDS' '[' fields+=[Field|EString] (fields+=[Field|EString])* ']' )
		//('WITH' 'PARTITIONS' '[' partitions+=[Partition|EString] (partitions+=[Partition|EString])* ']' )?
		//('podType' '=' podtype=EPodTypes)?
		//('podSize' '=' podSize=EPodSize)?
		//('podEnv' '=' podEnv=EPodEnv)?
		public Group getGroup() { return cGroup; }
		
		//'VECTOR'
		public Keyword getVECTORKeyword_0() { return cVECTORKeyword_0; }
		
		//'COLLECTION'
		public Keyword getCOLLECTIONKeyword_1() { return cCOLLECTIONKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'IN'
		public Keyword getINKeyword_3() { return cINKeyword_3; }
		
		//cluster=[Cluster|EString]
		public Assignment getClusterAssignment_4() { return cClusterAssignment_4; }
		
		//[Cluster|EString]
		public CrossReference getClusterClusterCrossReference_4_0() { return cClusterClusterCrossReference_4_0; }
		
		//EString
		public RuleCall getClusterClusterEStringParserRuleCall_4_0_1() { return cClusterClusterEStringParserRuleCall_4_0_1; }
		
		//(dynamic?='dynamic')?
		public Assignment getDynamicAssignment_5() { return cDynamicAssignment_5; }
		
		//'dynamic'
		public Keyword getDynamicDynamicKeyword_5_0() { return cDynamicDynamicKeyword_5_0; }
		
		//('description' '='  description=EString)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'description'
		public Keyword getDescriptionKeyword_6_0() { return cDescriptionKeyword_6_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_6_1() { return cEqualsSignKeyword_6_1; }
		
		//description=EString
		public Assignment getDescriptionAssignment_6_2() { return cDescriptionAssignment_6_2; }
		
		//EString
		public RuleCall getDescriptionEStringParserRuleCall_6_2_0() { return cDescriptionEStringParserRuleCall_6_2_0; }
		
		//('WITH' 'LIMITS' '[' collectionLimits+=CollectionLimit ( collectionLimits+=CollectionLimit)* ']' )?
		public Group getGroup_7() { return cGroup_7; }
		
		//'WITH'
		public Keyword getWITHKeyword_7_0() { return cWITHKeyword_7_0; }
		
		//'LIMITS'
		public Keyword getLIMITSKeyword_7_1() { return cLIMITSKeyword_7_1; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_7_2() { return cLeftSquareBracketKeyword_7_2; }
		
		//collectionLimits+=CollectionLimit
		public Assignment getCollectionLimitsAssignment_7_3() { return cCollectionLimitsAssignment_7_3; }
		
		//CollectionLimit
		public RuleCall getCollectionLimitsCollectionLimitParserRuleCall_7_3_0() { return cCollectionLimitsCollectionLimitParserRuleCall_7_3_0; }
		
		//( collectionLimits+=CollectionLimit)*
		public Assignment getCollectionLimitsAssignment_7_4() { return cCollectionLimitsAssignment_7_4; }
		
		//CollectionLimit
		public RuleCall getCollectionLimitsCollectionLimitParserRuleCall_7_4_0() { return cCollectionLimitsCollectionLimitParserRuleCall_7_4_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_7_5() { return cRightSquareBracketKeyword_7_5; }
		
		//('WITH' 'FIELDS' '[' fields+=[Field|EString] (fields+=[Field|EString])* ']' )
		public Group getGroup_8() { return cGroup_8; }
		
		//'WITH'
		public Keyword getWITHKeyword_8_0() { return cWITHKeyword_8_0; }
		
		//'FIELDS'
		public Keyword getFIELDSKeyword_8_1() { return cFIELDSKeyword_8_1; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_8_2() { return cLeftSquareBracketKeyword_8_2; }
		
		//fields+=[Field|EString]
		public Assignment getFieldsAssignment_8_3() { return cFieldsAssignment_8_3; }
		
		//[Field|EString]
		public CrossReference getFieldsFieldCrossReference_8_3_0() { return cFieldsFieldCrossReference_8_3_0; }
		
		//EString
		public RuleCall getFieldsFieldEStringParserRuleCall_8_3_0_1() { return cFieldsFieldEStringParserRuleCall_8_3_0_1; }
		
		//(fields+=[Field|EString])*
		public Assignment getFieldsAssignment_8_4() { return cFieldsAssignment_8_4; }
		
		//[Field|EString]
		public CrossReference getFieldsFieldCrossReference_8_4_0() { return cFieldsFieldCrossReference_8_4_0; }
		
		//EString
		public RuleCall getFieldsFieldEStringParserRuleCall_8_4_0_1() { return cFieldsFieldEStringParserRuleCall_8_4_0_1; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_8_5() { return cRightSquareBracketKeyword_8_5; }
		
		//('WITH' 'PARTITIONS' '[' partitions+=[Partition|EString] (partitions+=[Partition|EString])* ']' )?
		public Group getGroup_9() { return cGroup_9; }
		
		//'WITH'
		public Keyword getWITHKeyword_9_0() { return cWITHKeyword_9_0; }
		
		//'PARTITIONS'
		public Keyword getPARTITIONSKeyword_9_1() { return cPARTITIONSKeyword_9_1; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_9_2() { return cLeftSquareBracketKeyword_9_2; }
		
		//partitions+=[Partition|EString]
		public Assignment getPartitionsAssignment_9_3() { return cPartitionsAssignment_9_3; }
		
		//[Partition|EString]
		public CrossReference getPartitionsPartitionCrossReference_9_3_0() { return cPartitionsPartitionCrossReference_9_3_0; }
		
		//EString
		public RuleCall getPartitionsPartitionEStringParserRuleCall_9_3_0_1() { return cPartitionsPartitionEStringParserRuleCall_9_3_0_1; }
		
		//(partitions+=[Partition|EString])*
		public Assignment getPartitionsAssignment_9_4() { return cPartitionsAssignment_9_4; }
		
		//[Partition|EString]
		public CrossReference getPartitionsPartitionCrossReference_9_4_0() { return cPartitionsPartitionCrossReference_9_4_0; }
		
		//EString
		public RuleCall getPartitionsPartitionEStringParserRuleCall_9_4_0_1() { return cPartitionsPartitionEStringParserRuleCall_9_4_0_1; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_9_5() { return cRightSquareBracketKeyword_9_5; }
		
		//('podType' '=' podtype=EPodTypes)?
		public Group getGroup_10() { return cGroup_10; }
		
		//'podType'
		public Keyword getPodTypeKeyword_10_0() { return cPodTypeKeyword_10_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_10_1() { return cEqualsSignKeyword_10_1; }
		
		//podtype=EPodTypes
		public Assignment getPodtypeAssignment_10_2() { return cPodtypeAssignment_10_2; }
		
		//EPodTypes
		public RuleCall getPodtypeEPodTypesEnumRuleCall_10_2_0() { return cPodtypeEPodTypesEnumRuleCall_10_2_0; }
		
		//('podSize' '=' podSize=EPodSize)?
		public Group getGroup_11() { return cGroup_11; }
		
		//'podSize'
		public Keyword getPodSizeKeyword_11_0() { return cPodSizeKeyword_11_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_11_1() { return cEqualsSignKeyword_11_1; }
		
		//podSize=EPodSize
		public Assignment getPodSizeAssignment_11_2() { return cPodSizeAssignment_11_2; }
		
		//EPodSize
		public RuleCall getPodSizeEPodSizeEnumRuleCall_11_2_0() { return cPodSizeEPodSizeEnumRuleCall_11_2_0; }
		
		//('podEnv' '=' podEnv=EPodEnv)?
		public Group getGroup_12() { return cGroup_12; }
		
		//'podEnv'
		public Keyword getPodEnvKeyword_12_0() { return cPodEnvKeyword_12_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_12_1() { return cEqualsSignKeyword_12_1; }
		
		//podEnv=EPodEnv
		public Assignment getPodEnvAssignment_12_2() { return cPodEnvAssignment_12_2; }
		
		//EPodEnv
		public RuleCall getPodEnvEPodEnvEnumRuleCall_12_2_0() { return cPodEnvEPodEnvEnumRuleCall_12_2_0; }
	}
	public class PartitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.domij.Domijmasdsl.Partition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPARTITIONKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cFORKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cColPartOwnerAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cColPartOwnerVectorCollectionCrossReference_3_0 = (CrossReference)cColPartOwnerAssignment_3.eContents().get(0);
		private final RuleCall cColPartOwnerVectorCollectionEStringParserRuleCall_3_0_1 = (RuleCall)cColPartOwnerVectorCollectionCrossReference_3_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cDescriptionKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cDescriptionAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cDescriptionEStringParserRuleCall_4_2_0 = (RuleCall)cDescriptionAssignment_4_2.eContents().get(0);
		private final Keyword cPartitionKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cKeyKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cEqualsSignKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cPartitionKeyAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final CrossReference cPartitionKeyFieldCrossReference_8_0 = (CrossReference)cPartitionKeyAssignment_8.eContents().get(0);
		private final RuleCall cPartitionKeyFieldEStringParserRuleCall_8_0_1 = (RuleCall)cPartitionKeyFieldCrossReference_8_0.eContents().get(1);
		
		//Partition returns Partition:
		//    'PARTITION' name=EString 'FOR' colPartOwner=[VectorCollection|EString]
		//        ('description' '=' description=EString)?
		//        'partition' 'key' '=' partitionKey=[Field|EString];
		@Override public ParserRule getRule() { return rule; }
		
		//'PARTITION' name=EString 'FOR' colPartOwner=[VectorCollection|EString]
		//    ('description' '=' description=EString)?
		//    'partition' 'key' '=' partitionKey=[Field|EString]
		public Group getGroup() { return cGroup; }
		
		//'PARTITION'
		public Keyword getPARTITIONKeyword_0() { return cPARTITIONKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'FOR'
		public Keyword getFORKeyword_2() { return cFORKeyword_2; }
		
		//colPartOwner=[VectorCollection|EString]
		public Assignment getColPartOwnerAssignment_3() { return cColPartOwnerAssignment_3; }
		
		//[VectorCollection|EString]
		public CrossReference getColPartOwnerVectorCollectionCrossReference_3_0() { return cColPartOwnerVectorCollectionCrossReference_3_0; }
		
		//EString
		public RuleCall getColPartOwnerVectorCollectionEStringParserRuleCall_3_0_1() { return cColPartOwnerVectorCollectionEStringParserRuleCall_3_0_1; }
		
		//('description' '=' description=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'description'
		public Keyword getDescriptionKeyword_4_0() { return cDescriptionKeyword_4_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_1() { return cEqualsSignKeyword_4_1; }
		
		//description=EString
		public Assignment getDescriptionAssignment_4_2() { return cDescriptionAssignment_4_2; }
		
		//EString
		public RuleCall getDescriptionEStringParserRuleCall_4_2_0() { return cDescriptionEStringParserRuleCall_4_2_0; }
		
		//'partition'
		public Keyword getPartitionKeyword_5() { return cPartitionKeyword_5; }
		
		//'key'
		public Keyword getKeyKeyword_6() { return cKeyKeyword_6; }
		
		//'='
		public Keyword getEqualsSignKeyword_7() { return cEqualsSignKeyword_7; }
		
		//partitionKey=[Field|EString]
		public Assignment getPartitionKeyAssignment_8() { return cPartitionKeyAssignment_8; }
		
		//[Field|EString]
		public CrossReference getPartitionKeyFieldCrossReference_8_0() { return cPartitionKeyFieldCrossReference_8_0; }
		
		//EString
		public RuleCall getPartitionKeyFieldEStringParserRuleCall_8_0_1() { return cPartitionKeyFieldEStringParserRuleCall_8_0_1; }
	}
	public class EmbeddingModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.domij.Domijmasdsl.EmbeddingModel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEmbeddingModelAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cDescriptionKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cEqualsSignKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cDescriptionAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cDescriptionEStringParserRuleCall_2_2_0 = (RuleCall)cDescriptionAssignment_2_2.eContents().get(0);
		
		//EmbeddingModel returns EmbeddingModel:
		//    {EmbeddingModel}
		//    name=EString
		//    ('description' '=' description=EString)?;
		@Override public ParserRule getRule() { return rule; }
		
		//{EmbeddingModel}
		//name=EString
		//('description' '=' description=EString)?
		public Group getGroup() { return cGroup; }
		
		//{EmbeddingModel}
		public Action getEmbeddingModelAction_0() { return cEmbeddingModelAction_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//('description' '=' description=EString)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'description'
		public Keyword getDescriptionKeyword_2_0() { return cDescriptionKeyword_2_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_2_1() { return cEqualsSignKeyword_2_1; }
		
		//description=EString
		public Assignment getDescriptionAssignment_2_2() { return cDescriptionAssignment_2_2; }
		
		//EString
		public RuleCall getDescriptionEStringParserRuleCall_2_2_0() { return cDescriptionEStringParserRuleCall_2_2_0; }
	}
	public class FieldLimitElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.domij.Domijmasdsl.FieldLimit");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFIELDKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLIMITKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cTypeKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cEqualsSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cTypeAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cTypeEFieldLimitEnumRuleCall_5_0 = (RuleCall)cTypeAssignment_5.eContents().get(0);
		private final Keyword cValueKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cEqualsSignKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cValueAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cValueEStringParserRuleCall_8_0 = (RuleCall)cValueAssignment_8.eContents().get(0);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cDescriptionKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Keyword cEqualsSignKeyword_9_1 = (Keyword)cGroup_9.eContents().get(1);
		private final Assignment cDescriptionAssignment_9_2 = (Assignment)cGroup_9.eContents().get(2);
		private final RuleCall cDescriptionEStringParserRuleCall_9_2_0 = (RuleCall)cDescriptionAssignment_9_2.eContents().get(0);
		
		//FieldLimit returns FieldLimit:
		//    'FIELD' 'LIMIT' (name=EString)?
		//    'type' '=' type=EFieldLimit
		//    'value' '=' value=EString
		//    ('description' '=' description=EString)?;
		@Override public ParserRule getRule() { return rule; }
		
		//'FIELD' 'LIMIT' (name=EString)?
		//'type' '=' type=EFieldLimit
		//'value' '=' value=EString
		//('description' '=' description=EString)?
		public Group getGroup() { return cGroup; }
		
		//'FIELD'
		public Keyword getFIELDKeyword_0() { return cFIELDKeyword_0; }
		
		//'LIMIT'
		public Keyword getLIMITKeyword_1() { return cLIMITKeyword_1; }
		
		//(name=EString)?
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'type'
		public Keyword getTypeKeyword_3() { return cTypeKeyword_3; }
		
		//'='
		public Keyword getEqualsSignKeyword_4() { return cEqualsSignKeyword_4; }
		
		//type=EFieldLimit
		public Assignment getTypeAssignment_5() { return cTypeAssignment_5; }
		
		//EFieldLimit
		public RuleCall getTypeEFieldLimitEnumRuleCall_5_0() { return cTypeEFieldLimitEnumRuleCall_5_0; }
		
		//'value'
		public Keyword getValueKeyword_6() { return cValueKeyword_6; }
		
		//'='
		public Keyword getEqualsSignKeyword_7() { return cEqualsSignKeyword_7; }
		
		//value=EString
		public Assignment getValueAssignment_8() { return cValueAssignment_8; }
		
		//EString
		public RuleCall getValueEStringParserRuleCall_8_0() { return cValueEStringParserRuleCall_8_0; }
		
		//('description' '=' description=EString)?
		public Group getGroup_9() { return cGroup_9; }
		
		//'description'
		public Keyword getDescriptionKeyword_9_0() { return cDescriptionKeyword_9_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_9_1() { return cEqualsSignKeyword_9_1; }
		
		//description=EString
		public Assignment getDescriptionAssignment_9_2() { return cDescriptionAssignment_9_2; }
		
		//EString
		public RuleCall getDescriptionEStringParserRuleCall_9_2_0() { return cDescriptionEStringParserRuleCall_9_2_0; }
	}
	public class CollectionLimitElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.domij.Domijmasdsl.CollectionLimit");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCOLLECTIONKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLIMITKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cTypeKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cEqualsSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cTypeAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cTypeEColectionLimitEnumRuleCall_5_0 = (RuleCall)cTypeAssignment_5.eContents().get(0);
		private final Keyword cValueKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cEqualsSignKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cValueAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cValueEStringParserRuleCall_8_0 = (RuleCall)cValueAssignment_8.eContents().get(0);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cDescriptionKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Keyword cEqualsSignKeyword_9_1 = (Keyword)cGroup_9.eContents().get(1);
		private final Assignment cDescriptionAssignment_9_2 = (Assignment)cGroup_9.eContents().get(2);
		private final RuleCall cDescriptionEStringParserRuleCall_9_2_0 = (RuleCall)cDescriptionAssignment_9_2.eContents().get(0);
		
		//CollectionLimit returns CollectionLimit:
		//    'COLLECTION' 'LIMIT' (name=EString)?
		//    'type' '=' type=EColectionLimit
		//    'value' '=' value=EString
		//    ('description' '=' description=EString)?;
		@Override public ParserRule getRule() { return rule; }
		
		//'COLLECTION' 'LIMIT' (name=EString)?
		//'type' '=' type=EColectionLimit
		//'value' '=' value=EString
		//('description' '=' description=EString)?
		public Group getGroup() { return cGroup; }
		
		//'COLLECTION'
		public Keyword getCOLLECTIONKeyword_0() { return cCOLLECTIONKeyword_0; }
		
		//'LIMIT'
		public Keyword getLIMITKeyword_1() { return cLIMITKeyword_1; }
		
		//(name=EString)?
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'type'
		public Keyword getTypeKeyword_3() { return cTypeKeyword_3; }
		
		//'='
		public Keyword getEqualsSignKeyword_4() { return cEqualsSignKeyword_4; }
		
		//type=EColectionLimit
		public Assignment getTypeAssignment_5() { return cTypeAssignment_5; }
		
		//EColectionLimit
		public RuleCall getTypeEColectionLimitEnumRuleCall_5_0() { return cTypeEColectionLimitEnumRuleCall_5_0; }
		
		//'value'
		public Keyword getValueKeyword_6() { return cValueKeyword_6; }
		
		//'='
		public Keyword getEqualsSignKeyword_7() { return cEqualsSignKeyword_7; }
		
		//value=EString
		public Assignment getValueAssignment_8() { return cValueAssignment_8; }
		
		//EString
		public RuleCall getValueEStringParserRuleCall_8_0() { return cValueEStringParserRuleCall_8_0; }
		
		//('description' '=' description=EString)?
		public Group getGroup_9() { return cGroup_9; }
		
		//'description'
		public Keyword getDescriptionKeyword_9_0() { return cDescriptionKeyword_9_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_9_1() { return cEqualsSignKeyword_9_1; }
		
		//description=EString
		public Assignment getDescriptionAssignment_9_2() { return cDescriptionAssignment_9_2; }
		
		//EString
		public RuleCall getDescriptionEStringParserRuleCall_9_2_0() { return cDescriptionEStringParserRuleCall_9_2_0; }
	}
	public class ClusterLimitElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.domij.Domijmasdsl.ClusterLimit");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCLUSTERKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLIMITKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cTypeKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cEqualsSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cTypeAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cTypeEClusterLimitEnumRuleCall_5_0 = (RuleCall)cTypeAssignment_5.eContents().get(0);
		private final Keyword cValueKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cEqualsSignKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cValueAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cValueEStringParserRuleCall_8_0 = (RuleCall)cValueAssignment_8.eContents().get(0);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cDescriptionKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Keyword cEqualsSignKeyword_9_1 = (Keyword)cGroup_9.eContents().get(1);
		private final Assignment cDescriptionAssignment_9_2 = (Assignment)cGroup_9.eContents().get(2);
		private final RuleCall cDescriptionEStringParserRuleCall_9_2_0 = (RuleCall)cDescriptionAssignment_9_2.eContents().get(0);
		
		//ClusterLimit returns ClusterLimit:
		//    'CLUSTER' 'LIMIT' (name=EString)?
		//    'type' '=' type=EClusterLimit
		//    'value' '=' value=EString
		//    ('description' '=' description=EString)?;
		@Override public ParserRule getRule() { return rule; }
		
		//'CLUSTER' 'LIMIT' (name=EString)?
		//'type' '=' type=EClusterLimit
		//'value' '=' value=EString
		//('description' '=' description=EString)?
		public Group getGroup() { return cGroup; }
		
		//'CLUSTER'
		public Keyword getCLUSTERKeyword_0() { return cCLUSTERKeyword_0; }
		
		//'LIMIT'
		public Keyword getLIMITKeyword_1() { return cLIMITKeyword_1; }
		
		//(name=EString)?
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'type'
		public Keyword getTypeKeyword_3() { return cTypeKeyword_3; }
		
		//'='
		public Keyword getEqualsSignKeyword_4() { return cEqualsSignKeyword_4; }
		
		//type=EClusterLimit
		public Assignment getTypeAssignment_5() { return cTypeAssignment_5; }
		
		//EClusterLimit
		public RuleCall getTypeEClusterLimitEnumRuleCall_5_0() { return cTypeEClusterLimitEnumRuleCall_5_0; }
		
		//'value'
		public Keyword getValueKeyword_6() { return cValueKeyword_6; }
		
		//'='
		public Keyword getEqualsSignKeyword_7() { return cEqualsSignKeyword_7; }
		
		//value=EString
		public Assignment getValueAssignment_8() { return cValueAssignment_8; }
		
		//EString
		public RuleCall getValueEStringParserRuleCall_8_0() { return cValueEStringParserRuleCall_8_0; }
		
		//('description' '=' description=EString)?
		public Group getGroup_9() { return cGroup_9; }
		
		//'description'
		public Keyword getDescriptionKeyword_9_0() { return cDescriptionKeyword_9_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_9_1() { return cEqualsSignKeyword_9_1; }
		
		//description=EString
		public Assignment getDescriptionAssignment_9_2() { return cDescriptionAssignment_9_2; }
		
		//EString
		public RuleCall getDescriptionEStringParserRuleCall_9_2_0() { return cDescriptionEStringParserRuleCall_9_2_0; }
	}
	public class IndexLimitElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.domij.Domijmasdsl.IndexLimit");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cINDEXKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLIMITKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cTypeKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cEqualsSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cTypeAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cTypeEIndexLimitEnumRuleCall_5_0 = (RuleCall)cTypeAssignment_5.eContents().get(0);
		private final Keyword cValueKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cEqualsSignKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cValueAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cValueEStringParserRuleCall_8_0 = (RuleCall)cValueAssignment_8.eContents().get(0);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cDescriptionKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Keyword cEqualsSignKeyword_9_1 = (Keyword)cGroup_9.eContents().get(1);
		private final Assignment cDescriptionAssignment_9_2 = (Assignment)cGroup_9.eContents().get(2);
		private final RuleCall cDescriptionEStringParserRuleCall_9_2_0 = (RuleCall)cDescriptionAssignment_9_2.eContents().get(0);
		
		//IndexLimit returns IndexLimit:
		//    'INDEX' 'LIMIT' name=EString
		//    'type' '=' type=EIndexLimit
		//    'value' '=' value=EString
		//    ('description' '=' description=EString)?;
		@Override public ParserRule getRule() { return rule; }
		
		//'INDEX' 'LIMIT' name=EString
		//'type' '=' type=EIndexLimit
		//'value' '=' value=EString
		//('description' '=' description=EString)?
		public Group getGroup() { return cGroup; }
		
		//'INDEX'
		public Keyword getINDEXKeyword_0() { return cINDEXKeyword_0; }
		
		//'LIMIT'
		public Keyword getLIMITKeyword_1() { return cLIMITKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'type'
		public Keyword getTypeKeyword_3() { return cTypeKeyword_3; }
		
		//'='
		public Keyword getEqualsSignKeyword_4() { return cEqualsSignKeyword_4; }
		
		//type=EIndexLimit
		public Assignment getTypeAssignment_5() { return cTypeAssignment_5; }
		
		//EIndexLimit
		public RuleCall getTypeEIndexLimitEnumRuleCall_5_0() { return cTypeEIndexLimitEnumRuleCall_5_0; }
		
		//'value'
		public Keyword getValueKeyword_6() { return cValueKeyword_6; }
		
		//'='
		public Keyword getEqualsSignKeyword_7() { return cEqualsSignKeyword_7; }
		
		//value=EString
		public Assignment getValueAssignment_8() { return cValueAssignment_8; }
		
		//EString
		public RuleCall getValueEStringParserRuleCall_8_0() { return cValueEStringParserRuleCall_8_0; }
		
		//('description' '=' description=EString)?
		public Group getGroup_9() { return cGroup_9; }
		
		//'description'
		public Keyword getDescriptionKeyword_9_0() { return cDescriptionKeyword_9_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_9_1() { return cEqualsSignKeyword_9_1; }
		
		//description=EString
		public Assignment getDescriptionAssignment_9_2() { return cDescriptionAssignment_9_2; }
		
		//EString
		public RuleCall getDescriptionEStringParserRuleCall_9_2_0() { return cDescriptionEStringParserRuleCall_9_2_0; }
	}
	public class VectorIndexElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.domij.Domijmasdsl.VectorIndex");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cVECTORKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cINDEXKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cDescriptionKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cEqualsSignKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cDescriptionAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cDescriptionEStringParserRuleCall_3_2_0 = (RuleCall)cDescriptionAssignment_3_2.eContents().get(0);
		private final Keyword cMetricKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cEqualsSignKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cMetricAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cMetricEMetricTypeEnumRuleCall_6_0 = (RuleCall)cMetricAssignment_6.eContents().get(0);
		private final Keyword cTypeKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cEqualsSignKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cTypeAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cTypeEVIdxTypeEnumRuleCall_9_0 = (RuleCall)cTypeAssignment_9.eContents().get(0);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cWITHKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Keyword cLIMITSKeyword_10_1 = (Keyword)cGroup_10.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_10_2 = (Keyword)cGroup_10.eContents().get(2);
		private final Assignment cVIndexLimitsAssignment_10_3 = (Assignment)cGroup_10.eContents().get(3);
		private final RuleCall cVIndexLimitsIndexLimitParserRuleCall_10_3_0 = (RuleCall)cVIndexLimitsAssignment_10_3.eContents().get(0);
		private final Assignment cVIndexLimitsAssignment_10_4 = (Assignment)cGroup_10.eContents().get(4);
		private final RuleCall cVIndexLimitsIndexLimitParserRuleCall_10_4_0 = (RuleCall)cVIndexLimitsAssignment_10_4.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_10_5 = (Keyword)cGroup_10.eContents().get(5);
		
		//VectorIndex returns VectorIndex:
		//    'VECTOR' 'INDEX' (name=EString)?
		//    ('description' '=' description=EString)?
		//    'metric' '=' metric=EMetricType
		//    'type' '=' type=EVIdxType
		//    ('WITH' 'LIMITS' '[' vIndexLimits+=IndexLimit (vIndexLimits+=IndexLimit)* ']' )?;
		@Override public ParserRule getRule() { return rule; }
		
		//'VECTOR' 'INDEX' (name=EString)?
		//('description' '=' description=EString)?
		//'metric' '=' metric=EMetricType
		//'type' '=' type=EVIdxType
		//('WITH' 'LIMITS' '[' vIndexLimits+=IndexLimit (vIndexLimits+=IndexLimit)* ']' )?
		public Group getGroup() { return cGroup; }
		
		//'VECTOR'
		public Keyword getVECTORKeyword_0() { return cVECTORKeyword_0; }
		
		//'INDEX'
		public Keyword getINDEXKeyword_1() { return cINDEXKeyword_1; }
		
		//(name=EString)?
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//('description' '=' description=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'description'
		public Keyword getDescriptionKeyword_3_0() { return cDescriptionKeyword_3_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_3_1() { return cEqualsSignKeyword_3_1; }
		
		//description=EString
		public Assignment getDescriptionAssignment_3_2() { return cDescriptionAssignment_3_2; }
		
		//EString
		public RuleCall getDescriptionEStringParserRuleCall_3_2_0() { return cDescriptionEStringParserRuleCall_3_2_0; }
		
		//'metric'
		public Keyword getMetricKeyword_4() { return cMetricKeyword_4; }
		
		//'='
		public Keyword getEqualsSignKeyword_5() { return cEqualsSignKeyword_5; }
		
		//metric=EMetricType
		public Assignment getMetricAssignment_6() { return cMetricAssignment_6; }
		
		//EMetricType
		public RuleCall getMetricEMetricTypeEnumRuleCall_6_0() { return cMetricEMetricTypeEnumRuleCall_6_0; }
		
		//'type'
		public Keyword getTypeKeyword_7() { return cTypeKeyword_7; }
		
		//'='
		public Keyword getEqualsSignKeyword_8() { return cEqualsSignKeyword_8; }
		
		//type=EVIdxType
		public Assignment getTypeAssignment_9() { return cTypeAssignment_9; }
		
		//EVIdxType
		public RuleCall getTypeEVIdxTypeEnumRuleCall_9_0() { return cTypeEVIdxTypeEnumRuleCall_9_0; }
		
		//('WITH' 'LIMITS' '[' vIndexLimits+=IndexLimit (vIndexLimits+=IndexLimit)* ']' )?
		public Group getGroup_10() { return cGroup_10; }
		
		//'WITH'
		public Keyword getWITHKeyword_10_0() { return cWITHKeyword_10_0; }
		
		//'LIMITS'
		public Keyword getLIMITSKeyword_10_1() { return cLIMITSKeyword_10_1; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_10_2() { return cLeftSquareBracketKeyword_10_2; }
		
		//vIndexLimits+=IndexLimit
		public Assignment getVIndexLimitsAssignment_10_3() { return cVIndexLimitsAssignment_10_3; }
		
		//IndexLimit
		public RuleCall getVIndexLimitsIndexLimitParserRuleCall_10_3_0() { return cVIndexLimitsIndexLimitParserRuleCall_10_3_0; }
		
		//(vIndexLimits+=IndexLimit)*
		public Assignment getVIndexLimitsAssignment_10_4() { return cVIndexLimitsAssignment_10_4; }
		
		//IndexLimit
		public RuleCall getVIndexLimitsIndexLimitParserRuleCall_10_4_0() { return cVIndexLimitsIndexLimitParserRuleCall_10_4_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_10_5() { return cRightSquareBracketKeyword_10_5; }
	}
	public class NonVectorIndexElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.domij.Domijmasdsl.NonVectorIndex");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNONVECTORKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cINDEXKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cTypeKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cEqualsSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cTypeAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cTypeENVIdxTypeEnumRuleCall_5_0 = (RuleCall)cTypeAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cDescriptionKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cEqualsSignKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cDescriptionAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cDescriptionEStringParserRuleCall_6_2_0 = (RuleCall)cDescriptionAssignment_6_2.eContents().get(0);
		
		//NonVectorIndex returns NonVectorIndex:
		//    'NONVECTOR' 'INDEX' (name=EString)?
		//    'type' '=' type=ENVIdxType
		//    ('description' '=' description=EString)?;
		@Override public ParserRule getRule() { return rule; }
		
		//'NONVECTOR' 'INDEX' (name=EString)?
		//'type' '=' type=ENVIdxType
		//('description' '=' description=EString)?
		public Group getGroup() { return cGroup; }
		
		//'NONVECTOR'
		public Keyword getNONVECTORKeyword_0() { return cNONVECTORKeyword_0; }
		
		//'INDEX'
		public Keyword getINDEXKeyword_1() { return cINDEXKeyword_1; }
		
		//(name=EString)?
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'type'
		public Keyword getTypeKeyword_3() { return cTypeKeyword_3; }
		
		//'='
		public Keyword getEqualsSignKeyword_4() { return cEqualsSignKeyword_4; }
		
		//type=ENVIdxType
		public Assignment getTypeAssignment_5() { return cTypeAssignment_5; }
		
		//ENVIdxType
		public RuleCall getTypeENVIdxTypeEnumRuleCall_5_0() { return cTypeENVIdxTypeEnumRuleCall_5_0; }
		
		//('description' '=' description=EString)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'description'
		public Keyword getDescriptionKeyword_6_0() { return cDescriptionKeyword_6_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_6_1() { return cEqualsSignKeyword_6_1; }
		
		//description=EString
		public Assignment getDescriptionAssignment_6_2() { return cDescriptionAssignment_6_2; }
		
		//EString
		public RuleCall getDescriptionEStringParserRuleCall_6_2_0() { return cDescriptionEStringParserRuleCall_6_2_0; }
	}
	public class ConnectionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.domij.Domijmasdsl.Connection");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCONNECTIONKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cHostKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cEqualsSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cHostAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cHostEStringParserRuleCall_3_0 = (RuleCall)cHostAssignment_3.eContents().get(0);
		private final Keyword cPortKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cEqualsSignKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cPortAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cPortEIntParserRuleCall_6_0 = (RuleCall)cPortAssignment_6.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cApiKeyKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cEqualsSignKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Assignment cApiKeyAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cApiKeyEStringParserRuleCall_7_2_0 = (RuleCall)cApiKeyAssignment_7_2.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cUsernameKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Keyword cEqualsSignKeyword_8_1 = (Keyword)cGroup_8.eContents().get(1);
		private final Assignment cUsernameAssignment_8_2 = (Assignment)cGroup_8.eContents().get(2);
		private final RuleCall cUsernameEStringParserRuleCall_8_2_0 = (RuleCall)cUsernameAssignment_8_2.eContents().get(0);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cPasswordKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Keyword cEqualsSignKeyword_9_1 = (Keyword)cGroup_9.eContents().get(1);
		private final Assignment cPasswordAssignment_9_2 = (Assignment)cGroup_9.eContents().get(2);
		private final RuleCall cPasswordEStringParserRuleCall_9_2_0 = (RuleCall)cPasswordAssignment_9_2.eContents().get(0);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cRegionKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Keyword cEqualsSignKeyword_10_1 = (Keyword)cGroup_10.eContents().get(1);
		private final Assignment cRegionAssignment_10_2 = (Assignment)cGroup_10.eContents().get(2);
		private final RuleCall cRegionEStringParserRuleCall_10_2_0 = (RuleCall)cRegionAssignment_10_2.eContents().get(0);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Keyword cUserRoleKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Keyword cEqualsSignKeyword_11_1 = (Keyword)cGroup_11.eContents().get(1);
		private final Assignment cUserRoleAssignment_11_2 = (Assignment)cGroup_11.eContents().get(2);
		private final RuleCall cUserRoleEStringParserRuleCall_11_2_0 = (RuleCall)cUserRoleAssignment_11_2.eContents().get(0);
		private final Group cGroup_12 = (Group)cGroup.eContents().get(12);
		private final Keyword cUserPrivillegeKeyword_12_0 = (Keyword)cGroup_12.eContents().get(0);
		private final Keyword cEqualsSignKeyword_12_1 = (Keyword)cGroup_12.eContents().get(1);
		private final Assignment cUserPrivillegeAssignment_12_2 = (Assignment)cGroup_12.eContents().get(2);
		private final RuleCall cUserPrivillegeEStringParserRuleCall_12_2_0 = (RuleCall)cUserPrivillegeAssignment_12_2.eContents().get(0);
		private final Group cGroup_13 = (Group)cGroup.eContents().get(13);
		private final Keyword cCloudKeyword_13_0 = (Keyword)cGroup_13.eContents().get(0);
		private final Keyword cEqualsSignKeyword_13_1 = (Keyword)cGroup_13.eContents().get(1);
		private final Assignment cCloudAssignment_13_2 = (Assignment)cGroup_13.eContents().get(2);
		private final RuleCall cCloudEStringParserRuleCall_13_2_0 = (RuleCall)cCloudAssignment_13_2.eContents().get(0);
		private final Group cGroup_14 = (Group)cGroup.eContents().get(14);
		private final Keyword cEnvironmentKeyword_14_0 = (Keyword)cGroup_14.eContents().get(0);
		private final Keyword cEqualsSignKeyword_14_1 = (Keyword)cGroup_14.eContents().get(1);
		private final Assignment cEnvironmentAssignment_14_2 = (Assignment)cGroup_14.eContents().get(2);
		private final RuleCall cEnvironmentEStringParserRuleCall_14_2_0 = (RuleCall)cEnvironmentAssignment_14_2.eContents().get(0);
		
		//Connection returns Connection:
		//    'CONNECTION'
		//    'host' '=' host=EString
		//    'port' '=' port=EInt
		//    ('apiKey' '=' apiKey=EString)?
		//    ('username' '=' username=EString)?
		//    ('password' '=' password=EString)?
		//    ('region' '=' region=EString)?
		//    ('userRole' '=' userRole=EString)?
		//    ('userPrivillege' '=' userPrivillege=EString)?
		//    ('cloud' '=' cloud=EString)?
		//    ('environment' '=' environment=EString)?;
		@Override public ParserRule getRule() { return rule; }
		
		//'CONNECTION'
		//'host' '=' host=EString
		//'port' '=' port=EInt
		//('apiKey' '=' apiKey=EString)?
		//('username' '=' username=EString)?
		//('password' '=' password=EString)?
		//('region' '=' region=EString)?
		//('userRole' '=' userRole=EString)?
		//('userPrivillege' '=' userPrivillege=EString)?
		//('cloud' '=' cloud=EString)?
		//('environment' '=' environment=EString)?
		public Group getGroup() { return cGroup; }
		
		//'CONNECTION'
		public Keyword getCONNECTIONKeyword_0() { return cCONNECTIONKeyword_0; }
		
		//'host'
		public Keyword getHostKeyword_1() { return cHostKeyword_1; }
		
		//'='
		public Keyword getEqualsSignKeyword_2() { return cEqualsSignKeyword_2; }
		
		//host=EString
		public Assignment getHostAssignment_3() { return cHostAssignment_3; }
		
		//EString
		public RuleCall getHostEStringParserRuleCall_3_0() { return cHostEStringParserRuleCall_3_0; }
		
		//'port'
		public Keyword getPortKeyword_4() { return cPortKeyword_4; }
		
		//'='
		public Keyword getEqualsSignKeyword_5() { return cEqualsSignKeyword_5; }
		
		//port=EInt
		public Assignment getPortAssignment_6() { return cPortAssignment_6; }
		
		//EInt
		public RuleCall getPortEIntParserRuleCall_6_0() { return cPortEIntParserRuleCall_6_0; }
		
		//('apiKey' '=' apiKey=EString)?
		public Group getGroup_7() { return cGroup_7; }
		
		//'apiKey'
		public Keyword getApiKeyKeyword_7_0() { return cApiKeyKeyword_7_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_7_1() { return cEqualsSignKeyword_7_1; }
		
		//apiKey=EString
		public Assignment getApiKeyAssignment_7_2() { return cApiKeyAssignment_7_2; }
		
		//EString
		public RuleCall getApiKeyEStringParserRuleCall_7_2_0() { return cApiKeyEStringParserRuleCall_7_2_0; }
		
		//('username' '=' username=EString)?
		public Group getGroup_8() { return cGroup_8; }
		
		//'username'
		public Keyword getUsernameKeyword_8_0() { return cUsernameKeyword_8_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_8_1() { return cEqualsSignKeyword_8_1; }
		
		//username=EString
		public Assignment getUsernameAssignment_8_2() { return cUsernameAssignment_8_2; }
		
		//EString
		public RuleCall getUsernameEStringParserRuleCall_8_2_0() { return cUsernameEStringParserRuleCall_8_2_0; }
		
		//('password' '=' password=EString)?
		public Group getGroup_9() { return cGroup_9; }
		
		//'password'
		public Keyword getPasswordKeyword_9_0() { return cPasswordKeyword_9_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_9_1() { return cEqualsSignKeyword_9_1; }
		
		//password=EString
		public Assignment getPasswordAssignment_9_2() { return cPasswordAssignment_9_2; }
		
		//EString
		public RuleCall getPasswordEStringParserRuleCall_9_2_0() { return cPasswordEStringParserRuleCall_9_2_0; }
		
		//('region' '=' region=EString)?
		public Group getGroup_10() { return cGroup_10; }
		
		//'region'
		public Keyword getRegionKeyword_10_0() { return cRegionKeyword_10_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_10_1() { return cEqualsSignKeyword_10_1; }
		
		//region=EString
		public Assignment getRegionAssignment_10_2() { return cRegionAssignment_10_2; }
		
		//EString
		public RuleCall getRegionEStringParserRuleCall_10_2_0() { return cRegionEStringParserRuleCall_10_2_0; }
		
		//('userRole' '=' userRole=EString)?
		public Group getGroup_11() { return cGroup_11; }
		
		//'userRole'
		public Keyword getUserRoleKeyword_11_0() { return cUserRoleKeyword_11_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_11_1() { return cEqualsSignKeyword_11_1; }
		
		//userRole=EString
		public Assignment getUserRoleAssignment_11_2() { return cUserRoleAssignment_11_2; }
		
		//EString
		public RuleCall getUserRoleEStringParserRuleCall_11_2_0() { return cUserRoleEStringParserRuleCall_11_2_0; }
		
		//('userPrivillege' '=' userPrivillege=EString)?
		public Group getGroup_12() { return cGroup_12; }
		
		//'userPrivillege'
		public Keyword getUserPrivillegeKeyword_12_0() { return cUserPrivillegeKeyword_12_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_12_1() { return cEqualsSignKeyword_12_1; }
		
		//userPrivillege=EString
		public Assignment getUserPrivillegeAssignment_12_2() { return cUserPrivillegeAssignment_12_2; }
		
		//EString
		public RuleCall getUserPrivillegeEStringParserRuleCall_12_2_0() { return cUserPrivillegeEStringParserRuleCall_12_2_0; }
		
		//('cloud' '=' cloud=EString)?
		public Group getGroup_13() { return cGroup_13; }
		
		//'cloud'
		public Keyword getCloudKeyword_13_0() { return cCloudKeyword_13_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_13_1() { return cEqualsSignKeyword_13_1; }
		
		//cloud=EString
		public Assignment getCloudAssignment_13_2() { return cCloudAssignment_13_2; }
		
		//EString
		public RuleCall getCloudEStringParserRuleCall_13_2_0() { return cCloudEStringParserRuleCall_13_2_0; }
		
		//('environment' '=' environment=EString)?
		public Group getGroup_14() { return cGroup_14; }
		
		//'environment'
		public Keyword getEnvironmentKeyword_14_0() { return cEnvironmentKeyword_14_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_14_1() { return cEqualsSignKeyword_14_1; }
		
		//environment=EString
		public Assignment getEnvironmentAssignment_14_2() { return cEnvironmentAssignment_14_2; }
		
		//EString
		public RuleCall getEnvironmentEStringParserRuleCall_14_2_0() { return cEnvironmentEStringParserRuleCall_14_2_0; }
	}
	public class EIntElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.domij.Domijmasdsl.EInt");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//EInt returns ecore::EInt:
		//    '-'? INT;
		@Override public ParserRule getRule() { return rule; }
		
		//'-'? INT
		public Group getGroup() { return cGroup; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}
	public class EBooleanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.domij.Domijmasdsl.EBoolean");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTrueKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFalseKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//EBoolean returns ecore::EBoolean:
		//    'true' | 'false';
		@Override public ParserRule getRule() { return rule; }
		
		//'true' | 'false'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'true'
		public Keyword getTrueKeyword_0() { return cTrueKeyword_0; }
		
		//'false'
		public Keyword getFalseKeyword_1() { return cFalseKeyword_1; }
	}
	public class NonVectorFieldElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.domij.Domijmasdsl.NonVectorField");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNONVECTORKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cFIELDKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cINKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cColFieldOwnerAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cColFieldOwnerVectorCollectionCrossReference_4_0 = (CrossReference)cColFieldOwnerAssignment_4.eContents().get(0);
		private final RuleCall cColFieldOwnerVectorCollectionEStringParserRuleCall_4_0_1 = (RuleCall)cColFieldOwnerVectorCollectionCrossReference_4_0.eContents().get(1);
		private final Assignment cIsPrimaryAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final Keyword cIsPrimaryPrimaryKeyword_5_0 = (Keyword)cIsPrimaryAssignment_5.eContents().get(0);
		private final Keyword cTypeKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cEqualsSignKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cTypeAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cTypeEScalarDTypeEnumRuleCall_8_0 = (RuleCall)cTypeAssignment_8.eContents().get(0);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cWITHKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Keyword cLIMITSKeyword_9_1 = (Keyword)cGroup_9.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_9_2 = (Keyword)cGroup_9.eContents().get(2);
		private final Assignment cFieldLimitsAssignment_9_3 = (Assignment)cGroup_9.eContents().get(3);
		private final RuleCall cFieldLimitsFieldLimitParserRuleCall_9_3_0 = (RuleCall)cFieldLimitsAssignment_9_3.eContents().get(0);
		private final Assignment cFieldLimitsAssignment_9_4 = (Assignment)cGroup_9.eContents().get(4);
		private final RuleCall cFieldLimitsFieldLimitParserRuleCall_9_4_0 = (RuleCall)cFieldLimitsAssignment_9_4.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_9_5 = (Keyword)cGroup_9.eContents().get(5);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cWITHKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Keyword cNONVECTORKeyword_10_1 = (Keyword)cGroup_10.eContents().get(1);
		private final Keyword cINDEXESKeyword_10_2 = (Keyword)cGroup_10.eContents().get(2);
		private final Keyword cLeftSquareBracketKeyword_10_3 = (Keyword)cGroup_10.eContents().get(3);
		private final Assignment cNonVectorIndexesAssignment_10_4 = (Assignment)cGroup_10.eContents().get(4);
		private final RuleCall cNonVectorIndexesNonVectorIndexParserRuleCall_10_4_0 = (RuleCall)cNonVectorIndexesAssignment_10_4.eContents().get(0);
		private final Assignment cNonVectorIndexesAssignment_10_5 = (Assignment)cGroup_10.eContents().get(5);
		private final RuleCall cNonVectorIndexesNonVectorIndexParserRuleCall_10_5_0 = (RuleCall)cNonVectorIndexesAssignment_10_5.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_10_6 = (Keyword)cGroup_10.eContents().get(6);
		
		//NonVectorField returns NonVectorField:
		//    'NONVECTOR' 'FIELD' (name=EString)? 'IN' colFieldOwner=[VectorCollection|EString]
		//    (isPrimary?='primary')?
		//    'type' '=' type=EScalarDType
		//    ('WITH' 'LIMITS' '[' fieldLimits+=FieldLimit (fieldLimits+=FieldLimit)* ']' )?
		//    ('WITH' 'NONVECTOR' 'INDEXES' '[' nonVectorIndexes+=NonVectorIndex (nonVectorIndexes+=NonVectorIndex)* ']' )?;
		@Override public ParserRule getRule() { return rule; }
		
		//'NONVECTOR' 'FIELD' (name=EString)? 'IN' colFieldOwner=[VectorCollection|EString]
		//(isPrimary?='primary')?
		//'type' '=' type=EScalarDType
		//('WITH' 'LIMITS' '[' fieldLimits+=FieldLimit (fieldLimits+=FieldLimit)* ']' )?
		//('WITH' 'NONVECTOR' 'INDEXES' '[' nonVectorIndexes+=NonVectorIndex (nonVectorIndexes+=NonVectorIndex)* ']' )?
		public Group getGroup() { return cGroup; }
		
		//'NONVECTOR'
		public Keyword getNONVECTORKeyword_0() { return cNONVECTORKeyword_0; }
		
		//'FIELD'
		public Keyword getFIELDKeyword_1() { return cFIELDKeyword_1; }
		
		//(name=EString)?
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'IN'
		public Keyword getINKeyword_3() { return cINKeyword_3; }
		
		//colFieldOwner=[VectorCollection|EString]
		public Assignment getColFieldOwnerAssignment_4() { return cColFieldOwnerAssignment_4; }
		
		//[VectorCollection|EString]
		public CrossReference getColFieldOwnerVectorCollectionCrossReference_4_0() { return cColFieldOwnerVectorCollectionCrossReference_4_0; }
		
		//EString
		public RuleCall getColFieldOwnerVectorCollectionEStringParserRuleCall_4_0_1() { return cColFieldOwnerVectorCollectionEStringParserRuleCall_4_0_1; }
		
		//(isPrimary?='primary')?
		public Assignment getIsPrimaryAssignment_5() { return cIsPrimaryAssignment_5; }
		
		//'primary'
		public Keyword getIsPrimaryPrimaryKeyword_5_0() { return cIsPrimaryPrimaryKeyword_5_0; }
		
		//'type'
		public Keyword getTypeKeyword_6() { return cTypeKeyword_6; }
		
		//'='
		public Keyword getEqualsSignKeyword_7() { return cEqualsSignKeyword_7; }
		
		//type=EScalarDType
		public Assignment getTypeAssignment_8() { return cTypeAssignment_8; }
		
		//EScalarDType
		public RuleCall getTypeEScalarDTypeEnumRuleCall_8_0() { return cTypeEScalarDTypeEnumRuleCall_8_0; }
		
		//('WITH' 'LIMITS' '[' fieldLimits+=FieldLimit (fieldLimits+=FieldLimit)* ']' )?
		public Group getGroup_9() { return cGroup_9; }
		
		//'WITH'
		public Keyword getWITHKeyword_9_0() { return cWITHKeyword_9_0; }
		
		//'LIMITS'
		public Keyword getLIMITSKeyword_9_1() { return cLIMITSKeyword_9_1; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_9_2() { return cLeftSquareBracketKeyword_9_2; }
		
		//fieldLimits+=FieldLimit
		public Assignment getFieldLimitsAssignment_9_3() { return cFieldLimitsAssignment_9_3; }
		
		//FieldLimit
		public RuleCall getFieldLimitsFieldLimitParserRuleCall_9_3_0() { return cFieldLimitsFieldLimitParserRuleCall_9_3_0; }
		
		//(fieldLimits+=FieldLimit)*
		public Assignment getFieldLimitsAssignment_9_4() { return cFieldLimitsAssignment_9_4; }
		
		//FieldLimit
		public RuleCall getFieldLimitsFieldLimitParserRuleCall_9_4_0() { return cFieldLimitsFieldLimitParserRuleCall_9_4_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_9_5() { return cRightSquareBracketKeyword_9_5; }
		
		//('WITH' 'NONVECTOR' 'INDEXES' '[' nonVectorIndexes+=NonVectorIndex (nonVectorIndexes+=NonVectorIndex)* ']' )?
		public Group getGroup_10() { return cGroup_10; }
		
		//'WITH'
		public Keyword getWITHKeyword_10_0() { return cWITHKeyword_10_0; }
		
		//'NONVECTOR'
		public Keyword getNONVECTORKeyword_10_1() { return cNONVECTORKeyword_10_1; }
		
		//'INDEXES'
		public Keyword getINDEXESKeyword_10_2() { return cINDEXESKeyword_10_2; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_10_3() { return cLeftSquareBracketKeyword_10_3; }
		
		//nonVectorIndexes+=NonVectorIndex
		public Assignment getNonVectorIndexesAssignment_10_4() { return cNonVectorIndexesAssignment_10_4; }
		
		//NonVectorIndex
		public RuleCall getNonVectorIndexesNonVectorIndexParserRuleCall_10_4_0() { return cNonVectorIndexesNonVectorIndexParserRuleCall_10_4_0; }
		
		//(nonVectorIndexes+=NonVectorIndex)*
		public Assignment getNonVectorIndexesAssignment_10_5() { return cNonVectorIndexesAssignment_10_5; }
		
		//NonVectorIndex
		public RuleCall getNonVectorIndexesNonVectorIndexParserRuleCall_10_5_0() { return cNonVectorIndexesNonVectorIndexParserRuleCall_10_5_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_10_6() { return cRightSquareBracketKeyword_10_6; }
	}
	public class VectorFieldElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.domij.Domijmasdsl.VectorField");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cVECTORKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cFIELDKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cINKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cColFieldOwnerAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cColFieldOwnerVectorCollectionCrossReference_4_0 = (CrossReference)cColFieldOwnerAssignment_4.eContents().get(0);
		private final RuleCall cColFieldOwnerVectorCollectionEStringParserRuleCall_4_0_1 = (RuleCall)cColFieldOwnerVectorCollectionCrossReference_4_0.eContents().get(1);
		private final Assignment cIsPrimaryAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final Keyword cIsPrimaryPrimaryKeyword_5_0 = (Keyword)cIsPrimaryAssignment_5.eContents().get(0);
		private final Keyword cTypeKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cEqualsSignKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cTypeAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cTypeEVectorDTypeEnumRuleCall_8_0 = (RuleCall)cTypeAssignment_8.eContents().get(0);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cWITHKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Keyword cEMBEDDINGKeyword_9_1 = (Keyword)cGroup_9.eContents().get(1);
		private final Keyword cMODELKeyword_9_2 = (Keyword)cGroup_9.eContents().get(2);
		private final Keyword cEqualsSignKeyword_9_3 = (Keyword)cGroup_9.eContents().get(3);
		private final Assignment cEmbModelAssignment_9_4 = (Assignment)cGroup_9.eContents().get(4);
		private final CrossReference cEmbModelEmbeddingModelCrossReference_9_4_0 = (CrossReference)cEmbModelAssignment_9_4.eContents().get(0);
		private final RuleCall cEmbModelEmbeddingModelEStringParserRuleCall_9_4_0_1 = (RuleCall)cEmbModelEmbeddingModelCrossReference_9_4_0.eContents().get(1);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cWITHKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Keyword cLIMITSKeyword_10_1 = (Keyword)cGroup_10.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_10_2 = (Keyword)cGroup_10.eContents().get(2);
		private final Assignment cFieldLimitsAssignment_10_3 = (Assignment)cGroup_10.eContents().get(3);
		private final RuleCall cFieldLimitsFieldLimitParserRuleCall_10_3_0 = (RuleCall)cFieldLimitsAssignment_10_3.eContents().get(0);
		private final Assignment cFieldLimitsAssignment_10_4 = (Assignment)cGroup_10.eContents().get(4);
		private final RuleCall cFieldLimitsFieldLimitParserRuleCall_10_4_0 = (RuleCall)cFieldLimitsAssignment_10_4.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_10_5 = (Keyword)cGroup_10.eContents().get(5);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Keyword cWITHKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Keyword cVECTORKeyword_11_1 = (Keyword)cGroup_11.eContents().get(1);
		private final Keyword cINDEXESKeyword_11_2 = (Keyword)cGroup_11.eContents().get(2);
		private final Keyword cLeftSquareBracketKeyword_11_3 = (Keyword)cGroup_11.eContents().get(3);
		private final Assignment cVectorIndexesAssignment_11_4 = (Assignment)cGroup_11.eContents().get(4);
		private final RuleCall cVectorIndexesVectorIndexParserRuleCall_11_4_0 = (RuleCall)cVectorIndexesAssignment_11_4.eContents().get(0);
		private final Assignment cVectorIndexesAssignment_11_5 = (Assignment)cGroup_11.eContents().get(5);
		private final RuleCall cVectorIndexesVectorIndexParserRuleCall_11_5_0 = (RuleCall)cVectorIndexesAssignment_11_5.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_11_6 = (Keyword)cGroup_11.eContents().get(6);
		
		//VectorField returns VectorField:
		//    'VECTOR' 'FIELD' (name=EString)? 'IN' colFieldOwner=[VectorCollection|EString]
		//    (isPrimary?='primary')?
		//    'type' '=' type=EVectorDType
		//    ('WITH' 'EMBEDDING' 'MODEL' '=' embModel=[EmbeddingModel|EString])?
		//    ('WITH' 'LIMITS' '[' fieldLimits+=FieldLimit (fieldLimits+=FieldLimit)* ']' )?
		//    ('WITH' 'VECTOR' 'INDEXES' '[' vectorIndexes+=VectorIndex (vectorIndexes+=VectorIndex)* ']' )?;
		@Override public ParserRule getRule() { return rule; }
		
		//'VECTOR' 'FIELD' (name=EString)? 'IN' colFieldOwner=[VectorCollection|EString]
		//(isPrimary?='primary')?
		//'type' '=' type=EVectorDType
		//('WITH' 'EMBEDDING' 'MODEL' '=' embModel=[EmbeddingModel|EString])?
		//('WITH' 'LIMITS' '[' fieldLimits+=FieldLimit (fieldLimits+=FieldLimit)* ']' )?
		//('WITH' 'VECTOR' 'INDEXES' '[' vectorIndexes+=VectorIndex (vectorIndexes+=VectorIndex)* ']' )?
		public Group getGroup() { return cGroup; }
		
		//'VECTOR'
		public Keyword getVECTORKeyword_0() { return cVECTORKeyword_0; }
		
		//'FIELD'
		public Keyword getFIELDKeyword_1() { return cFIELDKeyword_1; }
		
		//(name=EString)?
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'IN'
		public Keyword getINKeyword_3() { return cINKeyword_3; }
		
		//colFieldOwner=[VectorCollection|EString]
		public Assignment getColFieldOwnerAssignment_4() { return cColFieldOwnerAssignment_4; }
		
		//[VectorCollection|EString]
		public CrossReference getColFieldOwnerVectorCollectionCrossReference_4_0() { return cColFieldOwnerVectorCollectionCrossReference_4_0; }
		
		//EString
		public RuleCall getColFieldOwnerVectorCollectionEStringParserRuleCall_4_0_1() { return cColFieldOwnerVectorCollectionEStringParserRuleCall_4_0_1; }
		
		//(isPrimary?='primary')?
		public Assignment getIsPrimaryAssignment_5() { return cIsPrimaryAssignment_5; }
		
		//'primary'
		public Keyword getIsPrimaryPrimaryKeyword_5_0() { return cIsPrimaryPrimaryKeyword_5_0; }
		
		//'type'
		public Keyword getTypeKeyword_6() { return cTypeKeyword_6; }
		
		//'='
		public Keyword getEqualsSignKeyword_7() { return cEqualsSignKeyword_7; }
		
		//type=EVectorDType
		public Assignment getTypeAssignment_8() { return cTypeAssignment_8; }
		
		//EVectorDType
		public RuleCall getTypeEVectorDTypeEnumRuleCall_8_0() { return cTypeEVectorDTypeEnumRuleCall_8_0; }
		
		//('WITH' 'EMBEDDING' 'MODEL' '=' embModel=[EmbeddingModel|EString])?
		public Group getGroup_9() { return cGroup_9; }
		
		//'WITH'
		public Keyword getWITHKeyword_9_0() { return cWITHKeyword_9_0; }
		
		//'EMBEDDING'
		public Keyword getEMBEDDINGKeyword_9_1() { return cEMBEDDINGKeyword_9_1; }
		
		//'MODEL'
		public Keyword getMODELKeyword_9_2() { return cMODELKeyword_9_2; }
		
		//'='
		public Keyword getEqualsSignKeyword_9_3() { return cEqualsSignKeyword_9_3; }
		
		//embModel=[EmbeddingModel|EString]
		public Assignment getEmbModelAssignment_9_4() { return cEmbModelAssignment_9_4; }
		
		//[EmbeddingModel|EString]
		public CrossReference getEmbModelEmbeddingModelCrossReference_9_4_0() { return cEmbModelEmbeddingModelCrossReference_9_4_0; }
		
		//EString
		public RuleCall getEmbModelEmbeddingModelEStringParserRuleCall_9_4_0_1() { return cEmbModelEmbeddingModelEStringParserRuleCall_9_4_0_1; }
		
		//('WITH' 'LIMITS' '[' fieldLimits+=FieldLimit (fieldLimits+=FieldLimit)* ']' )?
		public Group getGroup_10() { return cGroup_10; }
		
		//'WITH'
		public Keyword getWITHKeyword_10_0() { return cWITHKeyword_10_0; }
		
		//'LIMITS'
		public Keyword getLIMITSKeyword_10_1() { return cLIMITSKeyword_10_1; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_10_2() { return cLeftSquareBracketKeyword_10_2; }
		
		//fieldLimits+=FieldLimit
		public Assignment getFieldLimitsAssignment_10_3() { return cFieldLimitsAssignment_10_3; }
		
		//FieldLimit
		public RuleCall getFieldLimitsFieldLimitParserRuleCall_10_3_0() { return cFieldLimitsFieldLimitParserRuleCall_10_3_0; }
		
		//(fieldLimits+=FieldLimit)*
		public Assignment getFieldLimitsAssignment_10_4() { return cFieldLimitsAssignment_10_4; }
		
		//FieldLimit
		public RuleCall getFieldLimitsFieldLimitParserRuleCall_10_4_0() { return cFieldLimitsFieldLimitParserRuleCall_10_4_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_10_5() { return cRightSquareBracketKeyword_10_5; }
		
		//('WITH' 'VECTOR' 'INDEXES' '[' vectorIndexes+=VectorIndex (vectorIndexes+=VectorIndex)* ']' )?
		public Group getGroup_11() { return cGroup_11; }
		
		//'WITH'
		public Keyword getWITHKeyword_11_0() { return cWITHKeyword_11_0; }
		
		//'VECTOR'
		public Keyword getVECTORKeyword_11_1() { return cVECTORKeyword_11_1; }
		
		//'INDEXES'
		public Keyword getINDEXESKeyword_11_2() { return cINDEXESKeyword_11_2; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_11_3() { return cLeftSquareBracketKeyword_11_3; }
		
		//vectorIndexes+=VectorIndex
		public Assignment getVectorIndexesAssignment_11_4() { return cVectorIndexesAssignment_11_4; }
		
		//VectorIndex
		public RuleCall getVectorIndexesVectorIndexParserRuleCall_11_4_0() { return cVectorIndexesVectorIndexParserRuleCall_11_4_0; }
		
		//(vectorIndexes+=VectorIndex)*
		public Assignment getVectorIndexesAssignment_11_5() { return cVectorIndexesAssignment_11_5; }
		
		//VectorIndex
		public RuleCall getVectorIndexesVectorIndexParserRuleCall_11_5_0() { return cVectorIndexesVectorIndexParserRuleCall_11_5_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_11_6() { return cRightSquareBracketKeyword_11_6; }
	}
	public class FilterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.domij.Domijmasdsl.Filter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cFilterFieldAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cFilterFieldConceptCrossReference_0_0 = (CrossReference)cFilterFieldAssignment_0.eContents().get(0);
		private final RuleCall cFilterFieldConceptEStringParserRuleCall_0_0_1 = (RuleCall)cFilterFieldConceptCrossReference_0_0.eContents().get(1);
		private final Assignment cOperatorAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOperatorEOperatorEnumRuleCall_1_0 = (RuleCall)cOperatorAssignment_1.eContents().get(0);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueEStringParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//Filter returns Filter:
		//        filterField=[Concept|EString] operator=EOperator value=EString;
		@Override public ParserRule getRule() { return rule; }
		
		//filterField=[Concept|EString] operator=EOperator value=EString
		public Group getGroup() { return cGroup; }
		
		//filterField=[Concept|EString]
		public Assignment getFilterFieldAssignment_0() { return cFilterFieldAssignment_0; }
		
		//[Concept|EString]
		public CrossReference getFilterFieldConceptCrossReference_0_0() { return cFilterFieldConceptCrossReference_0_0; }
		
		//EString
		public RuleCall getFilterFieldConceptEStringParserRuleCall_0_0_1() { return cFilterFieldConceptEStringParserRuleCall_0_0_1; }
		
		//operator=EOperator
		public Assignment getOperatorAssignment_1() { return cOperatorAssignment_1; }
		
		//EOperator
		public RuleCall getOperatorEOperatorEnumRuleCall_1_0() { return cOperatorEOperatorEnumRuleCall_1_0; }
		
		//value=EString
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }
		
		//EString
		public RuleCall getValueEStringParserRuleCall_2_0() { return cValueEStringParserRuleCall_2_0; }
	}
	
	public class EVendorNameElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.domij.Domijmasdsl.EVendorName");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cPINECONEEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cPINECONEPINECONEKeyword_0_0 = (Keyword)cPINECONEEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cMILVUSEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cMILVUSMILVUSKeyword_1_0 = (Keyword)cMILVUSEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cCHROMAEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cCHROMACHROMAKeyword_2_0 = (Keyword)cCHROMAEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cWEAVIATEEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cWEAVIATEWEAVIATEKeyword_3_0 = (Keyword)cWEAVIATEEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cQDRANTEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cQDRANTQDRANTKeyword_4_0 = (Keyword)cQDRANTEnumLiteralDeclaration_4.eContents().get(0);
		
		//enum EVendorName returns EVendorName:
		//                PINECONE = 'PINECONE' | MILVUS = 'MILVUS' | CHROMA = 'CHROMA' | WEAVIATE = 'WEAVIATE' | QDRANT = 'QDRANT';
		public EnumRule getRule() { return rule; }
		
		//PINECONE = 'PINECONE' | MILVUS = 'MILVUS' | CHROMA = 'CHROMA' | WEAVIATE = 'WEAVIATE' | QDRANT = 'QDRANT'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//PINECONE = 'PINECONE'
		public EnumLiteralDeclaration getPINECONEEnumLiteralDeclaration_0() { return cPINECONEEnumLiteralDeclaration_0; }
		
		//'PINECONE'
		public Keyword getPINECONEPINECONEKeyword_0_0() { return cPINECONEPINECONEKeyword_0_0; }
		
		//MILVUS = 'MILVUS'
		public EnumLiteralDeclaration getMILVUSEnumLiteralDeclaration_1() { return cMILVUSEnumLiteralDeclaration_1; }
		
		//'MILVUS'
		public Keyword getMILVUSMILVUSKeyword_1_0() { return cMILVUSMILVUSKeyword_1_0; }
		
		//CHROMA = 'CHROMA'
		public EnumLiteralDeclaration getCHROMAEnumLiteralDeclaration_2() { return cCHROMAEnumLiteralDeclaration_2; }
		
		//'CHROMA'
		public Keyword getCHROMACHROMAKeyword_2_0() { return cCHROMACHROMAKeyword_2_0; }
		
		//WEAVIATE = 'WEAVIATE'
		public EnumLiteralDeclaration getWEAVIATEEnumLiteralDeclaration_3() { return cWEAVIATEEnumLiteralDeclaration_3; }
		
		//'WEAVIATE'
		public Keyword getWEAVIATEWEAVIATEKeyword_3_0() { return cWEAVIATEWEAVIATEKeyword_3_0; }
		
		//QDRANT = 'QDRANT'
		public EnumLiteralDeclaration getQDRANTEnumLiteralDeclaration_4() { return cQDRANTEnumLiteralDeclaration_4; }
		
		//'QDRANT'
		public Keyword getQDRANTQDRANTKeyword_4_0() { return cQDRANTQDRANTKeyword_4_0; }
	}
	public class EPodTypesElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.domij.Domijmasdsl.EPodTypes");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cS1EnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cS1S1Keyword_0_0 = (Keyword)cS1EnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cP1EnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cP1P1Keyword_1_0 = (Keyword)cP1EnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cP2EnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cP2P2Keyword_2_0 = (Keyword)cP2EnumLiteralDeclaration_2.eContents().get(0);
		
		//enum EPodTypes returns EPodTypes:
		//                S1 = 'S1' | P1 = 'P1' | P2 = 'P2';
		public EnumRule getRule() { return rule; }
		
		//S1 = 'S1' | P1 = 'P1' | P2 = 'P2'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//S1 = 'S1'
		public EnumLiteralDeclaration getS1EnumLiteralDeclaration_0() { return cS1EnumLiteralDeclaration_0; }
		
		//'S1'
		public Keyword getS1S1Keyword_0_0() { return cS1S1Keyword_0_0; }
		
		//P1 = 'P1'
		public EnumLiteralDeclaration getP1EnumLiteralDeclaration_1() { return cP1EnumLiteralDeclaration_1; }
		
		//'P1'
		public Keyword getP1P1Keyword_1_0() { return cP1P1Keyword_1_0; }
		
		//P2 = 'P2'
		public EnumLiteralDeclaration getP2EnumLiteralDeclaration_2() { return cP2EnumLiteralDeclaration_2; }
		
		//'P2'
		public Keyword getP2P2Keyword_2_0() { return cP2P2Keyword_2_0; }
	}
	public class EPodSizeElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.domij.Domijmasdsl.EPodSize");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cX1EnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cX1X1Keyword_0_0 = (Keyword)cX1EnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cX2EnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cX2X2Keyword_1_0 = (Keyword)cX2EnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cX4EnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cX4X4Keyword_2_0 = (Keyword)cX4EnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cX8EnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cX8X8Keyword_3_0 = (Keyword)cX8EnumLiteralDeclaration_3.eContents().get(0);
		
		//enum EPodSize returns EPodSize:
		//                X1 = 'X1' | X2 = 'X2' | X4 = 'X4' | X8 = 'X8';
		public EnumRule getRule() { return rule; }
		
		//X1 = 'X1' | X2 = 'X2' | X4 = 'X4' | X8 = 'X8'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//X1 = 'X1'
		public EnumLiteralDeclaration getX1EnumLiteralDeclaration_0() { return cX1EnumLiteralDeclaration_0; }
		
		//'X1'
		public Keyword getX1X1Keyword_0_0() { return cX1X1Keyword_0_0; }
		
		//X2 = 'X2'
		public EnumLiteralDeclaration getX2EnumLiteralDeclaration_1() { return cX2EnumLiteralDeclaration_1; }
		
		//'X2'
		public Keyword getX2X2Keyword_1_0() { return cX2X2Keyword_1_0; }
		
		//X4 = 'X4'
		public EnumLiteralDeclaration getX4EnumLiteralDeclaration_2() { return cX4EnumLiteralDeclaration_2; }
		
		//'X4'
		public Keyword getX4X4Keyword_2_0() { return cX4X4Keyword_2_0; }
		
		//X8 = 'X8'
		public EnumLiteralDeclaration getX8EnumLiteralDeclaration_3() { return cX8EnumLiteralDeclaration_3; }
		
		//'X8'
		public Keyword getX8X8Keyword_3_0() { return cX8X8Keyword_3_0; }
	}
	public class EPodEnvElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.domij.Domijmasdsl.EPodEnv");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cUS_W1_GCPEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cUS_W1_GCPUS_W1_GCPKeyword_0_0 = (Keyword)cUS_W1_GCPEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cUS_C1_GCPEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cUS_C1_GCPUS_C1_GCPKeyword_1_0 = (Keyword)cUS_C1_GCPEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cUS_W4_GCPEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cUS_W4_GCPUS_W4_GCPKeyword_2_0 = (Keyword)cUS_W4_GCPEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cUS_E4_GCPEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cUS_E4_GCPUS_E4_GCPKeyword_3_0 = (Keyword)cUS_E4_GCPEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cNA_NE1_GCPEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cNA_NE1_GCPNA_NE1_GCPKeyword_4_0 = (Keyword)cNA_NE1_GCPEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cA_NE1_GCPEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cA_NE1_GCPA_NE1_GCPKeyword_5_0 = (Keyword)cA_NE1_GCPEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cA_SE1_GCPEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cA_SE1_GCPA_SE1_GCPKeyword_6_0 = (Keyword)cA_SE1_GCPEnumLiteralDeclaration_6.eContents().get(0);
		private final EnumLiteralDeclaration cUS_E1_GCPEnumLiteralDeclaration_7 = (EnumLiteralDeclaration)cAlternatives.eContents().get(7);
		private final Keyword cUS_E1_GCPUS_E1_GCPKeyword_7_0 = (Keyword)cUS_E1_GCPEnumLiteralDeclaration_7.eContents().get(0);
		private final EnumLiteralDeclaration cEU_W1_GCPEnumLiteralDeclaration_8 = (EnumLiteralDeclaration)cAlternatives.eContents().get(8);
		private final Keyword cEU_W1_GCPEU_W1_GCPKeyword_8_0 = (Keyword)cEU_W1_GCPEnumLiteralDeclaration_8.eContents().get(0);
		private final EnumLiteralDeclaration cEU_W4_GCPEnumLiteralDeclaration_9 = (EnumLiteralDeclaration)cAlternatives.eContents().get(9);
		private final Keyword cEU_W4_GCPEU_W4_GCPKeyword_9_0 = (Keyword)cEU_W4_GCPEnumLiteralDeclaration_9.eContents().get(0);
		private final EnumLiteralDeclaration cUS_E1_AWSEnumLiteralDeclaration_10 = (EnumLiteralDeclaration)cAlternatives.eContents().get(10);
		private final Keyword cUS_E1_AWSUS_E1_AWSKeyword_10_0 = (Keyword)cUS_E1_AWSEnumLiteralDeclaration_10.eContents().get(0);
		private final EnumLiteralDeclaration cAZUREEnumLiteralDeclaration_11 = (EnumLiteralDeclaration)cAlternatives.eContents().get(11);
		private final Keyword cAZUREAZUREKeyword_11_0 = (Keyword)cAZUREEnumLiteralDeclaration_11.eContents().get(0);
		
		//enum EPodEnv returns EPodEnv:
		//                US_W1_GCP = 'US_W1_GCP' | US_C1_GCP = 'US_C1_GCP' | US_W4_GCP = 'US_W4_GCP' | US_E4_GCP = 'US_E4_GCP' | NA_NE1_GCP = 'NA_NE1_GCP' | A_NE1_GCP = 'A_NE1_GCP' | A_SE1_GCP = 'A_SE1_GCP' | US_E1_GCP = 'US_E1_GCP' | EU_W1_GCP = 'EU_W1_GCP' | EU_W4_GCP = 'EU_W4_GCP' | US_E1_AWS = 'US_E1_AWS' | AZURE = 'AZURE';
		public EnumRule getRule() { return rule; }
		
		//US_W1_GCP = 'US_W1_GCP' | US_C1_GCP = 'US_C1_GCP' | US_W4_GCP = 'US_W4_GCP' | US_E4_GCP = 'US_E4_GCP' | NA_NE1_GCP = 'NA_NE1_GCP' | A_NE1_GCP = 'A_NE1_GCP' | A_SE1_GCP = 'A_SE1_GCP' | US_E1_GCP = 'US_E1_GCP' | EU_W1_GCP = 'EU_W1_GCP' | EU_W4_GCP = 'EU_W4_GCP' | US_E1_AWS = 'US_E1_AWS' | AZURE = 'AZURE'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//US_W1_GCP = 'US_W1_GCP'
		public EnumLiteralDeclaration getUS_W1_GCPEnumLiteralDeclaration_0() { return cUS_W1_GCPEnumLiteralDeclaration_0; }
		
		//'US_W1_GCP'
		public Keyword getUS_W1_GCPUS_W1_GCPKeyword_0_0() { return cUS_W1_GCPUS_W1_GCPKeyword_0_0; }
		
		//US_C1_GCP = 'US_C1_GCP'
		public EnumLiteralDeclaration getUS_C1_GCPEnumLiteralDeclaration_1() { return cUS_C1_GCPEnumLiteralDeclaration_1; }
		
		//'US_C1_GCP'
		public Keyword getUS_C1_GCPUS_C1_GCPKeyword_1_0() { return cUS_C1_GCPUS_C1_GCPKeyword_1_0; }
		
		//US_W4_GCP = 'US_W4_GCP'
		public EnumLiteralDeclaration getUS_W4_GCPEnumLiteralDeclaration_2() { return cUS_W4_GCPEnumLiteralDeclaration_2; }
		
		//'US_W4_GCP'
		public Keyword getUS_W4_GCPUS_W4_GCPKeyword_2_0() { return cUS_W4_GCPUS_W4_GCPKeyword_2_0; }
		
		//US_E4_GCP = 'US_E4_GCP'
		public EnumLiteralDeclaration getUS_E4_GCPEnumLiteralDeclaration_3() { return cUS_E4_GCPEnumLiteralDeclaration_3; }
		
		//'US_E4_GCP'
		public Keyword getUS_E4_GCPUS_E4_GCPKeyword_3_0() { return cUS_E4_GCPUS_E4_GCPKeyword_3_0; }
		
		//NA_NE1_GCP = 'NA_NE1_GCP'
		public EnumLiteralDeclaration getNA_NE1_GCPEnumLiteralDeclaration_4() { return cNA_NE1_GCPEnumLiteralDeclaration_4; }
		
		//'NA_NE1_GCP'
		public Keyword getNA_NE1_GCPNA_NE1_GCPKeyword_4_0() { return cNA_NE1_GCPNA_NE1_GCPKeyword_4_0; }
		
		//A_NE1_GCP = 'A_NE1_GCP'
		public EnumLiteralDeclaration getA_NE1_GCPEnumLiteralDeclaration_5() { return cA_NE1_GCPEnumLiteralDeclaration_5; }
		
		//'A_NE1_GCP'
		public Keyword getA_NE1_GCPA_NE1_GCPKeyword_5_0() { return cA_NE1_GCPA_NE1_GCPKeyword_5_0; }
		
		//A_SE1_GCP = 'A_SE1_GCP'
		public EnumLiteralDeclaration getA_SE1_GCPEnumLiteralDeclaration_6() { return cA_SE1_GCPEnumLiteralDeclaration_6; }
		
		//'A_SE1_GCP'
		public Keyword getA_SE1_GCPA_SE1_GCPKeyword_6_0() { return cA_SE1_GCPA_SE1_GCPKeyword_6_0; }
		
		//US_E1_GCP = 'US_E1_GCP'
		public EnumLiteralDeclaration getUS_E1_GCPEnumLiteralDeclaration_7() { return cUS_E1_GCPEnumLiteralDeclaration_7; }
		
		//'US_E1_GCP'
		public Keyword getUS_E1_GCPUS_E1_GCPKeyword_7_0() { return cUS_E1_GCPUS_E1_GCPKeyword_7_0; }
		
		//EU_W1_GCP = 'EU_W1_GCP'
		public EnumLiteralDeclaration getEU_W1_GCPEnumLiteralDeclaration_8() { return cEU_W1_GCPEnumLiteralDeclaration_8; }
		
		//'EU_W1_GCP'
		public Keyword getEU_W1_GCPEU_W1_GCPKeyword_8_0() { return cEU_W1_GCPEU_W1_GCPKeyword_8_0; }
		
		//EU_W4_GCP = 'EU_W4_GCP'
		public EnumLiteralDeclaration getEU_W4_GCPEnumLiteralDeclaration_9() { return cEU_W4_GCPEnumLiteralDeclaration_9; }
		
		//'EU_W4_GCP'
		public Keyword getEU_W4_GCPEU_W4_GCPKeyword_9_0() { return cEU_W4_GCPEU_W4_GCPKeyword_9_0; }
		
		//US_E1_AWS = 'US_E1_AWS'
		public EnumLiteralDeclaration getUS_E1_AWSEnumLiteralDeclaration_10() { return cUS_E1_AWSEnumLiteralDeclaration_10; }
		
		//'US_E1_AWS'
		public Keyword getUS_E1_AWSUS_E1_AWSKeyword_10_0() { return cUS_E1_AWSUS_E1_AWSKeyword_10_0; }
		
		//AZURE = 'AZURE'
		public EnumLiteralDeclaration getAZUREEnumLiteralDeclaration_11() { return cAZUREEnumLiteralDeclaration_11; }
		
		//'AZURE'
		public Keyword getAZUREAZUREKeyword_11_0() { return cAZUREAZUREKeyword_11_0; }
	}
	public class EScalarDTypeElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.domij.Domijmasdsl.EScalarDType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cINTEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cINTINTKeyword_0_0 = (Keyword)cINTEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cVARCHAREnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cVARCHARVARCHARKeyword_1_0 = (Keyword)cVARCHAREnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cDOUBLEEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cDOUBLEDOUBLEKeyword_2_0 = (Keyword)cDOUBLEEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cFLOATEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cFLOATFLOATKeyword_3_0 = (Keyword)cFLOATEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cDATEEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cDATEDATEKeyword_4_0 = (Keyword)cDATEEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cDATETIMEEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cDATETIMEDATETIMEKeyword_5_0 = (Keyword)cDATETIMEEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cJSONEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cJSONJSONKeyword_6_0 = (Keyword)cJSONEnumLiteralDeclaration_6.eContents().get(0);
		
		//enum EScalarDType returns EScalarDType:
		//                INT = 'INT' | VARCHAR = 'VARCHAR' | DOUBLE = 'DOUBLE' | FLOAT = 'FLOAT' | DATE = 'DATE' | DATETIME = 'DATETIME' | JSON = 'JSON';
		public EnumRule getRule() { return rule; }
		
		//INT = 'INT' | VARCHAR = 'VARCHAR' | DOUBLE = 'DOUBLE' | FLOAT = 'FLOAT' | DATE = 'DATE' | DATETIME = 'DATETIME' | JSON = 'JSON'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//INT = 'INT'
		public EnumLiteralDeclaration getINTEnumLiteralDeclaration_0() { return cINTEnumLiteralDeclaration_0; }
		
		//'INT'
		public Keyword getINTINTKeyword_0_0() { return cINTINTKeyword_0_0; }
		
		//VARCHAR = 'VARCHAR'
		public EnumLiteralDeclaration getVARCHAREnumLiteralDeclaration_1() { return cVARCHAREnumLiteralDeclaration_1; }
		
		//'VARCHAR'
		public Keyword getVARCHARVARCHARKeyword_1_0() { return cVARCHARVARCHARKeyword_1_0; }
		
		//DOUBLE = 'DOUBLE'
		public EnumLiteralDeclaration getDOUBLEEnumLiteralDeclaration_2() { return cDOUBLEEnumLiteralDeclaration_2; }
		
		//'DOUBLE'
		public Keyword getDOUBLEDOUBLEKeyword_2_0() { return cDOUBLEDOUBLEKeyword_2_0; }
		
		//FLOAT = 'FLOAT'
		public EnumLiteralDeclaration getFLOATEnumLiteralDeclaration_3() { return cFLOATEnumLiteralDeclaration_3; }
		
		//'FLOAT'
		public Keyword getFLOATFLOATKeyword_3_0() { return cFLOATFLOATKeyword_3_0; }
		
		//DATE = 'DATE'
		public EnumLiteralDeclaration getDATEEnumLiteralDeclaration_4() { return cDATEEnumLiteralDeclaration_4; }
		
		//'DATE'
		public Keyword getDATEDATEKeyword_4_0() { return cDATEDATEKeyword_4_0; }
		
		//DATETIME = 'DATETIME'
		public EnumLiteralDeclaration getDATETIMEEnumLiteralDeclaration_5() { return cDATETIMEEnumLiteralDeclaration_5; }
		
		//'DATETIME'
		public Keyword getDATETIMEDATETIMEKeyword_5_0() { return cDATETIMEDATETIMEKeyword_5_0; }
		
		//JSON = 'JSON'
		public EnumLiteralDeclaration getJSONEnumLiteralDeclaration_6() { return cJSONEnumLiteralDeclaration_6; }
		
		//'JSON'
		public Keyword getJSONJSONKeyword_6_0() { return cJSONJSONKeyword_6_0; }
	}
	public class EVectorDTypeElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.domij.Domijmasdsl.EVectorDType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cBINARY_VECTOREnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cBINARY_VECTORBINARY_VECTORKeyword_0_0 = (Keyword)cBINARY_VECTOREnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cFLOAT_VECTOREnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cFLOAT_VECTORFLOAT_VECTORKeyword_1_0 = (Keyword)cFLOAT_VECTOREnumLiteralDeclaration_1.eContents().get(0);
		
		//enum EVectorDType returns EVectorDType:
		//                BINARY_VECTOR = 'BINARY_VECTOR' | FLOAT_VECTOR = 'FLOAT_VECTOR';
		public EnumRule getRule() { return rule; }
		
		//BINARY_VECTOR = 'BINARY_VECTOR' | FLOAT_VECTOR = 'FLOAT_VECTOR'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//BINARY_VECTOR = 'BINARY_VECTOR'
		public EnumLiteralDeclaration getBINARY_VECTOREnumLiteralDeclaration_0() { return cBINARY_VECTOREnumLiteralDeclaration_0; }
		
		//'BINARY_VECTOR'
		public Keyword getBINARY_VECTORBINARY_VECTORKeyword_0_0() { return cBINARY_VECTORBINARY_VECTORKeyword_0_0; }
		
		//FLOAT_VECTOR = 'FLOAT_VECTOR'
		public EnumLiteralDeclaration getFLOAT_VECTOREnumLiteralDeclaration_1() { return cFLOAT_VECTOREnumLiteralDeclaration_1; }
		
		//'FLOAT_VECTOR'
		public Keyword getFLOAT_VECTORFLOAT_VECTORKeyword_1_0() { return cFLOAT_VECTORFLOAT_VECTORKeyword_1_0; }
	}
	public class EFieldLimitElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.domij.Domijmasdsl.EFieldLimit");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cVECTORDIMEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cVECTORDIMVECTORDIMKeyword_0_0 = (Keyword)cVECTORDIMEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cARRAYLENEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cARRAYLENARRAYLENKeyword_1_0 = (Keyword)cARRAYLENEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cMAXSIZEEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cMAXSIZEMAXSIZEKeyword_2_0 = (Keyword)cMAXSIZEEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum EFieldLimit returns EFieldLimit:
		//                VECTORDIM = 'VECTORDIM' | ARRAYLEN = 'ARRAYLEN' | MAXSIZE = 'MAXSIZE';
		public EnumRule getRule() { return rule; }
		
		//VECTORDIM = 'VECTORDIM' | ARRAYLEN = 'ARRAYLEN' | MAXSIZE = 'MAXSIZE'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//VECTORDIM = 'VECTORDIM'
		public EnumLiteralDeclaration getVECTORDIMEnumLiteralDeclaration_0() { return cVECTORDIMEnumLiteralDeclaration_0; }
		
		//'VECTORDIM'
		public Keyword getVECTORDIMVECTORDIMKeyword_0_0() { return cVECTORDIMVECTORDIMKeyword_0_0; }
		
		//ARRAYLEN = 'ARRAYLEN'
		public EnumLiteralDeclaration getARRAYLENEnumLiteralDeclaration_1() { return cARRAYLENEnumLiteralDeclaration_1; }
		
		//'ARRAYLEN'
		public Keyword getARRAYLENARRAYLENKeyword_1_0() { return cARRAYLENARRAYLENKeyword_1_0; }
		
		//MAXSIZE = 'MAXSIZE'
		public EnumLiteralDeclaration getMAXSIZEEnumLiteralDeclaration_2() { return cMAXSIZEEnumLiteralDeclaration_2; }
		
		//'MAXSIZE'
		public Keyword getMAXSIZEMAXSIZEKeyword_2_0() { return cMAXSIZEMAXSIZEKeyword_2_0; }
	}
	public class EColectionLimitElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.domij.Domijmasdsl.EColectionLimit");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cNOFPARTITIONSEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cNOFPARTITIONSNOFPARTITIONSKeyword_0_0 = (Keyword)cNOFPARTITIONSEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cNOFFIELDSEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cNOFFIELDSNOFFIELDSKeyword_1_0 = (Keyword)cNOFFIELDSEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cNOFSHARDSEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cNOFSHARDSNOFSHARDSKeyword_2_0 = (Keyword)cNOFSHARDSEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cVECTORDIMEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cVECTORDIMVECTORDIMKeyword_3_0 = (Keyword)cVECTORDIMEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum EColectionLimit returns EColectionLimit:
		//                NOFPARTITIONS = 'NOFPARTITIONS' | NOFFIELDS = 'NOFFIELDS' | NOFSHARDS = 'NOFSHARDS' | VECTORDIM = 'VECTORDIM';
		public EnumRule getRule() { return rule; }
		
		//NOFPARTITIONS = 'NOFPARTITIONS' | NOFFIELDS = 'NOFFIELDS' | NOFSHARDS = 'NOFSHARDS' | VECTORDIM = 'VECTORDIM'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//NOFPARTITIONS = 'NOFPARTITIONS'
		public EnumLiteralDeclaration getNOFPARTITIONSEnumLiteralDeclaration_0() { return cNOFPARTITIONSEnumLiteralDeclaration_0; }
		
		//'NOFPARTITIONS'
		public Keyword getNOFPARTITIONSNOFPARTITIONSKeyword_0_0() { return cNOFPARTITIONSNOFPARTITIONSKeyword_0_0; }
		
		//NOFFIELDS = 'NOFFIELDS'
		public EnumLiteralDeclaration getNOFFIELDSEnumLiteralDeclaration_1() { return cNOFFIELDSEnumLiteralDeclaration_1; }
		
		//'NOFFIELDS'
		public Keyword getNOFFIELDSNOFFIELDSKeyword_1_0() { return cNOFFIELDSNOFFIELDSKeyword_1_0; }
		
		//NOFSHARDS = 'NOFSHARDS'
		public EnumLiteralDeclaration getNOFSHARDSEnumLiteralDeclaration_2() { return cNOFSHARDSEnumLiteralDeclaration_2; }
		
		//'NOFSHARDS'
		public Keyword getNOFSHARDSNOFSHARDSKeyword_2_0() { return cNOFSHARDSNOFSHARDSKeyword_2_0; }
		
		//VECTORDIM = 'VECTORDIM'
		public EnumLiteralDeclaration getVECTORDIMEnumLiteralDeclaration_3() { return cVECTORDIMEnumLiteralDeclaration_3; }
		
		//'VECTORDIM'
		public Keyword getVECTORDIMVECTORDIMKeyword_3_0() { return cVECTORDIMVECTORDIMKeyword_3_0; }
	}
	public class EClusterLimitElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.domij.Domijmasdsl.EClusterLimit");
		private final EnumLiteralDeclaration cNOFCOLLECTIONSEnumLiteralDeclaration = (EnumLiteralDeclaration)rule.eContents().get(1);
		private final Keyword cNOFCOLLECTIONSNOFCOLLECTIONSKeyword_0 = (Keyword)cNOFCOLLECTIONSEnumLiteralDeclaration.eContents().get(0);
		
		//enum EClusterLimit returns EClusterLimit:
		//                NOFCOLLECTIONS = 'NOFCOLLECTIONS';
		public EnumRule getRule() { return rule; }
		
		//NOFCOLLECTIONS = 'NOFCOLLECTIONS'
		public EnumLiteralDeclaration getNOFCOLLECTIONSEnumLiteralDeclaration() { return cNOFCOLLECTIONSEnumLiteralDeclaration; }
		
		//'NOFCOLLECTIONS'
		public Keyword getNOFCOLLECTIONSNOFCOLLECTIONSKeyword_0() { return cNOFCOLLECTIONSNOFCOLLECTIONSKeyword_0; }
	}
	public class EIndexLimitElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.domij.Domijmasdsl.EIndexLimit");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cNOFCLUSTERUNITEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cNOFCLUSTERUNITNOFCLUSTERUNITKeyword_0_0 = (Keyword)cNOFCLUSTERUNITEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cNOFFACTORSPQEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cNOFFACTORSPQNOFFACTORSPQKeyword_1_0 = (Keyword)cNOFFACTORSPQEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cMAXNODEDGREEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cMAXNODEDGREMAXNODEDGREKeyword_2_0 = (Keyword)cMAXNODEDGREEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum EIndexLimit returns EIndexLimit:
		//                NOFCLUSTERUNIT = 'NOFCLUSTERUNIT' | NOFFACTORSPQ = 'NOFFACTORSPQ' | MAXNODEDGRE = 'MAXNODEDGRE';
		public EnumRule getRule() { return rule; }
		
		//NOFCLUSTERUNIT = 'NOFCLUSTERUNIT' | NOFFACTORSPQ = 'NOFFACTORSPQ' | MAXNODEDGRE = 'MAXNODEDGRE'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//NOFCLUSTERUNIT = 'NOFCLUSTERUNIT'
		public EnumLiteralDeclaration getNOFCLUSTERUNITEnumLiteralDeclaration_0() { return cNOFCLUSTERUNITEnumLiteralDeclaration_0; }
		
		//'NOFCLUSTERUNIT'
		public Keyword getNOFCLUSTERUNITNOFCLUSTERUNITKeyword_0_0() { return cNOFCLUSTERUNITNOFCLUSTERUNITKeyword_0_0; }
		
		//NOFFACTORSPQ = 'NOFFACTORSPQ'
		public EnumLiteralDeclaration getNOFFACTORSPQEnumLiteralDeclaration_1() { return cNOFFACTORSPQEnumLiteralDeclaration_1; }
		
		//'NOFFACTORSPQ'
		public Keyword getNOFFACTORSPQNOFFACTORSPQKeyword_1_0() { return cNOFFACTORSPQNOFFACTORSPQKeyword_1_0; }
		
		//MAXNODEDGRE = 'MAXNODEDGRE'
		public EnumLiteralDeclaration getMAXNODEDGREEnumLiteralDeclaration_2() { return cMAXNODEDGREEnumLiteralDeclaration_2; }
		
		//'MAXNODEDGRE'
		public Keyword getMAXNODEDGREMAXNODEDGREKeyword_2_0() { return cMAXNODEDGREMAXNODEDGREKeyword_2_0; }
	}
	public class EMetricTypeElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.domij.Domijmasdsl.EMetricType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cEUCLIDEANEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cEUCLIDEANEUCLIDEANKeyword_0_0 = (Keyword)cEUCLIDEANEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cMANHATTANEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cMANHATTANMANHATTANKeyword_1_0 = (Keyword)cMANHATTANEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cDOTEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cDOTDOTKeyword_2_0 = (Keyword)cDOTEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cCOSINEEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cCOSINECOSINEKeyword_3_0 = (Keyword)cCOSINEEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum EMetricType returns EMetricType:
		//                EUCLIDEAN = 'EUCLIDEAN' | MANHATTAN = 'MANHATTAN' | DOT = 'DOT' | COSINE = 'COSINE';
		public EnumRule getRule() { return rule; }
		
		//EUCLIDEAN = 'EUCLIDEAN' | MANHATTAN = 'MANHATTAN' | DOT = 'DOT' | COSINE = 'COSINE'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//EUCLIDEAN = 'EUCLIDEAN'
		public EnumLiteralDeclaration getEUCLIDEANEnumLiteralDeclaration_0() { return cEUCLIDEANEnumLiteralDeclaration_0; }
		
		//'EUCLIDEAN'
		public Keyword getEUCLIDEANEUCLIDEANKeyword_0_0() { return cEUCLIDEANEUCLIDEANKeyword_0_0; }
		
		//MANHATTAN = 'MANHATTAN'
		public EnumLiteralDeclaration getMANHATTANEnumLiteralDeclaration_1() { return cMANHATTANEnumLiteralDeclaration_1; }
		
		//'MANHATTAN'
		public Keyword getMANHATTANMANHATTANKeyword_1_0() { return cMANHATTANMANHATTANKeyword_1_0; }
		
		//DOT = 'DOT'
		public EnumLiteralDeclaration getDOTEnumLiteralDeclaration_2() { return cDOTEnumLiteralDeclaration_2; }
		
		//'DOT'
		public Keyword getDOTDOTKeyword_2_0() { return cDOTDOTKeyword_2_0; }
		
		//COSINE = 'COSINE'
		public EnumLiteralDeclaration getCOSINEEnumLiteralDeclaration_3() { return cCOSINEEnumLiteralDeclaration_3; }
		
		//'COSINE'
		public Keyword getCOSINECOSINEKeyword_3_0() { return cCOSINECOSINEKeyword_3_0; }
	}
	public class EVIdxTypeElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.domij.Domijmasdsl.EVIdxType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cFLATEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cFLATFLATKeyword_0_0 = (Keyword)cFLATEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cIVF_FLATEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cIVF_FLATIVF_FLATKeyword_1_0 = (Keyword)cIVF_FLATEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cIVF_SQ8EnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cIVF_SQ8IVF_SQ8Keyword_2_0 = (Keyword)cIVF_SQ8EnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cIVF_PQEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cIVF_PQIVF_PQKeyword_3_0 = (Keyword)cIVF_PQEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cHNSWEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cHNSWHNSWKeyword_4_0 = (Keyword)cHNSWEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cSCANNEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cSCANNSCANNKeyword_5_0 = (Keyword)cSCANNEnumLiteralDeclaration_5.eContents().get(0);
		
		//enum EVIdxType returns EVIdxType:
		//                FLAT = 'FLAT' | IVF_FLAT = 'IVF_FLAT' | IVF_SQ8 = 'IVF_SQ8' | IVF_PQ = 'IVF_PQ' | HNSW = 'HNSW' | SCANN = 'SCANN';
		public EnumRule getRule() { return rule; }
		
		//FLAT = 'FLAT' | IVF_FLAT = 'IVF_FLAT' | IVF_SQ8 = 'IVF_SQ8' | IVF_PQ = 'IVF_PQ' | HNSW = 'HNSW' | SCANN = 'SCANN'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//FLAT = 'FLAT'
		public EnumLiteralDeclaration getFLATEnumLiteralDeclaration_0() { return cFLATEnumLiteralDeclaration_0; }
		
		//'FLAT'
		public Keyword getFLATFLATKeyword_0_0() { return cFLATFLATKeyword_0_0; }
		
		//IVF_FLAT = 'IVF_FLAT'
		public EnumLiteralDeclaration getIVF_FLATEnumLiteralDeclaration_1() { return cIVF_FLATEnumLiteralDeclaration_1; }
		
		//'IVF_FLAT'
		public Keyword getIVF_FLATIVF_FLATKeyword_1_0() { return cIVF_FLATIVF_FLATKeyword_1_0; }
		
		//IVF_SQ8 = 'IVF_SQ8'
		public EnumLiteralDeclaration getIVF_SQ8EnumLiteralDeclaration_2() { return cIVF_SQ8EnumLiteralDeclaration_2; }
		
		//'IVF_SQ8'
		public Keyword getIVF_SQ8IVF_SQ8Keyword_2_0() { return cIVF_SQ8IVF_SQ8Keyword_2_0; }
		
		//IVF_PQ = 'IVF_PQ'
		public EnumLiteralDeclaration getIVF_PQEnumLiteralDeclaration_3() { return cIVF_PQEnumLiteralDeclaration_3; }
		
		//'IVF_PQ'
		public Keyword getIVF_PQIVF_PQKeyword_3_0() { return cIVF_PQIVF_PQKeyword_3_0; }
		
		//HNSW = 'HNSW'
		public EnumLiteralDeclaration getHNSWEnumLiteralDeclaration_4() { return cHNSWEnumLiteralDeclaration_4; }
		
		//'HNSW'
		public Keyword getHNSWHNSWKeyword_4_0() { return cHNSWHNSWKeyword_4_0; }
		
		//SCANN = 'SCANN'
		public EnumLiteralDeclaration getSCANNEnumLiteralDeclaration_5() { return cSCANNEnumLiteralDeclaration_5; }
		
		//'SCANN'
		public Keyword getSCANNSCANNKeyword_5_0() { return cSCANNSCANNKeyword_5_0; }
	}
	public class ENVIdxTypeElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.domij.Domijmasdsl.ENVIdxType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cSTANDARDEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cSTANDARDSTANDARDKeyword_0_0 = (Keyword)cSTANDARDEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cFULL_TEXTEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cFULL_TEXTFULL_TEXTKeyword_1_0 = (Keyword)cFULL_TEXTEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cINTEGEREnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cINTEGERINTEGERKeyword_2_0 = (Keyword)cINTEGEREnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cPARAM_INTEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cPARAM_INTPARAM_INTKeyword_3_0 = (Keyword)cPARAM_INTEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum ENVIdxType returns ENVIdxType:
		//                STANDARD = 'STANDARD' | FULL_TEXT = 'FULL_TEXT' | INTEGER = 'INTEGER' | PARAM_INT = 'PARAM_INT';
		public EnumRule getRule() { return rule; }
		
		//STANDARD = 'STANDARD' | FULL_TEXT = 'FULL_TEXT' | INTEGER = 'INTEGER' | PARAM_INT = 'PARAM_INT'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STANDARD = 'STANDARD'
		public EnumLiteralDeclaration getSTANDARDEnumLiteralDeclaration_0() { return cSTANDARDEnumLiteralDeclaration_0; }
		
		//'STANDARD'
		public Keyword getSTANDARDSTANDARDKeyword_0_0() { return cSTANDARDSTANDARDKeyword_0_0; }
		
		//FULL_TEXT = 'FULL_TEXT'
		public EnumLiteralDeclaration getFULL_TEXTEnumLiteralDeclaration_1() { return cFULL_TEXTEnumLiteralDeclaration_1; }
		
		//'FULL_TEXT'
		public Keyword getFULL_TEXTFULL_TEXTKeyword_1_0() { return cFULL_TEXTFULL_TEXTKeyword_1_0; }
		
		//INTEGER = 'INTEGER'
		public EnumLiteralDeclaration getINTEGEREnumLiteralDeclaration_2() { return cINTEGEREnumLiteralDeclaration_2; }
		
		//'INTEGER'
		public Keyword getINTEGERINTEGERKeyword_2_0() { return cINTEGERINTEGERKeyword_2_0; }
		
		//PARAM_INT = 'PARAM_INT'
		public EnumLiteralDeclaration getPARAM_INTEnumLiteralDeclaration_3() { return cPARAM_INTEnumLiteralDeclaration_3; }
		
		//'PARAM_INT'
		public Keyword getPARAM_INTPARAM_INTKeyword_3_0() { return cPARAM_INTPARAM_INTKeyword_3_0; }
	}
	public class EOperatorElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.domij.Domijmasdsl.EOperator");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cANDEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cANDANDKeyword_0_0 = (Keyword)cANDEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cOREnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cORORKeyword_1_0 = (Keyword)cOREnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cNOTEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cNOTNOTKeyword_2_0 = (Keyword)cNOTEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cLIKEEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cLIKELIKEKeyword_3_0 = (Keyword)cLIKEEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cEQEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cEQEqualsSignKeyword_4_0 = (Keyword)cEQEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cNEQEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cNEQExclamationMarkEqualsSignKeyword_5_0 = (Keyword)cNEQEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cGTEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cGTGreaterThanSignKeyword_6_0 = (Keyword)cGTEnumLiteralDeclaration_6.eContents().get(0);
		private final EnumLiteralDeclaration cGTEEnumLiteralDeclaration_7 = (EnumLiteralDeclaration)cAlternatives.eContents().get(7);
		private final Keyword cGTEGreaterThanSignEqualsSignKeyword_7_0 = (Keyword)cGTEEnumLiteralDeclaration_7.eContents().get(0);
		private final EnumLiteralDeclaration cLTEnumLiteralDeclaration_8 = (EnumLiteralDeclaration)cAlternatives.eContents().get(8);
		private final Keyword cLTLessThanSignKeyword_8_0 = (Keyword)cLTEnumLiteralDeclaration_8.eContents().get(0);
		private final EnumLiteralDeclaration cLTEEnumLiteralDeclaration_9 = (EnumLiteralDeclaration)cAlternatives.eContents().get(9);
		private final Keyword cLTELessThanSignEqualsSignKeyword_9_0 = (Keyword)cLTEEnumLiteralDeclaration_9.eContents().get(0);
		
		//enum EOperator returns EOperator:
		//                AND = 'AND' | OR = 'OR' | NOT = 'NOT' | LIKE = 'LIKE' | EQ = '=' | NEQ = '!=' | GT = '>' | GTE = '>=' | LT = '<' | LTE = '<=';
		public EnumRule getRule() { return rule; }
		
		//AND = 'AND' | OR = 'OR' | NOT = 'NOT' | LIKE = 'LIKE' | EQ = '=' | NEQ = '!=' | GT = '>' | GTE = '>=' | LT = '<' | LTE = '<='
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//AND = 'AND'
		public EnumLiteralDeclaration getANDEnumLiteralDeclaration_0() { return cANDEnumLiteralDeclaration_0; }
		
		//'AND'
		public Keyword getANDANDKeyword_0_0() { return cANDANDKeyword_0_0; }
		
		//OR = 'OR'
		public EnumLiteralDeclaration getOREnumLiteralDeclaration_1() { return cOREnumLiteralDeclaration_1; }
		
		//'OR'
		public Keyword getORORKeyword_1_0() { return cORORKeyword_1_0; }
		
		//NOT = 'NOT'
		public EnumLiteralDeclaration getNOTEnumLiteralDeclaration_2() { return cNOTEnumLiteralDeclaration_2; }
		
		//'NOT'
		public Keyword getNOTNOTKeyword_2_0() { return cNOTNOTKeyword_2_0; }
		
		//LIKE = 'LIKE'
		public EnumLiteralDeclaration getLIKEEnumLiteralDeclaration_3() { return cLIKEEnumLiteralDeclaration_3; }
		
		//'LIKE'
		public Keyword getLIKELIKEKeyword_3_0() { return cLIKELIKEKeyword_3_0; }
		
		//EQ = '='
		public EnumLiteralDeclaration getEQEnumLiteralDeclaration_4() { return cEQEnumLiteralDeclaration_4; }
		
		//'='
		public Keyword getEQEqualsSignKeyword_4_0() { return cEQEqualsSignKeyword_4_0; }
		
		//NEQ = '!='
		public EnumLiteralDeclaration getNEQEnumLiteralDeclaration_5() { return cNEQEnumLiteralDeclaration_5; }
		
		//'!='
		public Keyword getNEQExclamationMarkEqualsSignKeyword_5_0() { return cNEQExclamationMarkEqualsSignKeyword_5_0; }
		
		//GT = '>'
		public EnumLiteralDeclaration getGTEnumLiteralDeclaration_6() { return cGTEnumLiteralDeclaration_6; }
		
		//'>'
		public Keyword getGTGreaterThanSignKeyword_6_0() { return cGTGreaterThanSignKeyword_6_0; }
		
		//GTE = '>='
		public EnumLiteralDeclaration getGTEEnumLiteralDeclaration_7() { return cGTEEnumLiteralDeclaration_7; }
		
		//'>='
		public Keyword getGTEGreaterThanSignEqualsSignKeyword_7_0() { return cGTEGreaterThanSignEqualsSignKeyword_7_0; }
		
		//LT = '<'
		public EnumLiteralDeclaration getLTEnumLiteralDeclaration_8() { return cLTEnumLiteralDeclaration_8; }
		
		//'<'
		public Keyword getLTLessThanSignKeyword_8_0() { return cLTLessThanSignKeyword_8_0; }
		
		//LTE = '<='
		public EnumLiteralDeclaration getLTEEnumLiteralDeclaration_9() { return cLTEEnumLiteralDeclaration_9; }
		
		//'<='
		public Keyword getLTELessThanSignEqualsSignKeyword_9_0() { return cLTELessThanSignEqualsSignKeyword_9_0; }
	}
	
	private final ScriptElements pScript;
	private final MethodElements pMethod;
	private final ConceptElements pConcept;
	private final FieldElements pField;
	private final EVendorNameElements eEVendorName;
	private final EStringElements pEString;
	private final CreateElements pCreate;
	private final AlterElements pAlter;
	private final DropElements pDrop;
	private final InsertElements pInsert;
	private final UpdateElements pUpdate;
	private final DeleteElements pDelete;
	private final VectorSearchElements pVectorSearch;
	private final NonVectorSearchElements pNonVectorSearch;
	private final VectorDatabaseElements pVectorDatabase;
	private final ClusterElements pCluster;
	private final VectorCollectionElements pVectorCollection;
	private final PartitionElements pPartition;
	private final EmbeddingModelElements pEmbeddingModel;
	private final FieldLimitElements pFieldLimit;
	private final CollectionLimitElements pCollectionLimit;
	private final ClusterLimitElements pClusterLimit;
	private final IndexLimitElements pIndexLimit;
	private final VectorIndexElements pVectorIndex;
	private final NonVectorIndexElements pNonVectorIndex;
	private final ConnectionElements pConnection;
	private final EIntElements pEInt;
	private final EBooleanElements pEBoolean;
	private final EPodTypesElements eEPodTypes;
	private final EPodSizeElements eEPodSize;
	private final EPodEnvElements eEPodEnv;
	private final NonVectorFieldElements pNonVectorField;
	private final VectorFieldElements pVectorField;
	private final EScalarDTypeElements eEScalarDType;
	private final EVectorDTypeElements eEVectorDType;
	private final EFieldLimitElements eEFieldLimit;
	private final EColectionLimitElements eEColectionLimit;
	private final EClusterLimitElements eEClusterLimit;
	private final EIndexLimitElements eEIndexLimit;
	private final EMetricTypeElements eEMetricType;
	private final EVIdxTypeElements eEVIdxType;
	private final ENVIdxTypeElements eENVIdxType;
	private final FilterElements pFilter;
	private final EOperatorElements eEOperator;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public DomijmasdslGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pScript = new ScriptElements();
		this.pMethod = new MethodElements();
		this.pConcept = new ConceptElements();
		this.pField = new FieldElements();
		this.eEVendorName = new EVendorNameElements();
		this.pEString = new EStringElements();
		this.pCreate = new CreateElements();
		this.pAlter = new AlterElements();
		this.pDrop = new DropElements();
		this.pInsert = new InsertElements();
		this.pUpdate = new UpdateElements();
		this.pDelete = new DeleteElements();
		this.pVectorSearch = new VectorSearchElements();
		this.pNonVectorSearch = new NonVectorSearchElements();
		this.pVectorDatabase = new VectorDatabaseElements();
		this.pCluster = new ClusterElements();
		this.pVectorCollection = new VectorCollectionElements();
		this.pPartition = new PartitionElements();
		this.pEmbeddingModel = new EmbeddingModelElements();
		this.pFieldLimit = new FieldLimitElements();
		this.pCollectionLimit = new CollectionLimitElements();
		this.pClusterLimit = new ClusterLimitElements();
		this.pIndexLimit = new IndexLimitElements();
		this.pVectorIndex = new VectorIndexElements();
		this.pNonVectorIndex = new NonVectorIndexElements();
		this.pConnection = new ConnectionElements();
		this.pEInt = new EIntElements();
		this.pEBoolean = new EBooleanElements();
		this.eEPodTypes = new EPodTypesElements();
		this.eEPodSize = new EPodSizeElements();
		this.eEPodEnv = new EPodEnvElements();
		this.pNonVectorField = new NonVectorFieldElements();
		this.pVectorField = new VectorFieldElements();
		this.eEScalarDType = new EScalarDTypeElements();
		this.eEVectorDType = new EVectorDTypeElements();
		this.eEFieldLimit = new EFieldLimitElements();
		this.eEColectionLimit = new EColectionLimitElements();
		this.eEClusterLimit = new EClusterLimitElements();
		this.eEIndexLimit = new EIndexLimitElements();
		this.eEMetricType = new EMetricTypeElements();
		this.eEVIdxType = new EVIdxTypeElements();
		this.eENVIdxType = new ENVIdxTypeElements();
		this.pFilter = new FilterElements();
		this.eEOperator = new EOperatorElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.example.domij.Domijmasdsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Script returns Script:
	//    'SCRIPT' 'FOR' vendor=EVendorName
	//    ('WITH' 'METHODS' '[' methods+=Method (methods+=Method)* ']' )?;
	public ScriptElements getScriptAccess() {
		return pScript;
	}
	
	public ParserRule getScriptRule() {
		return getScriptAccess().getRule();
	}
	
	//Method returns Method:
	//    Create | Alter | Drop | Insert | Update | Delete | VectorSearch | NonVectorSearch;
	public MethodElements getMethodAccess() {
		return pMethod;
	}
	
	public ParserRule getMethodRule() {
		return getMethodAccess().getRule();
	}
	
	//Concept returns Concept:
	//    VectorDatabase | Cluster | VectorCollection | Partition | EmbeddingModel | FieldLimit | CollectionLimit | ClusterLimit | IndexLimit | VectorIndex | NonVectorIndex | NonVectorField | VectorField ;
	public ConceptElements getConceptAccess() {
		return pConcept;
	}
	
	public ParserRule getConceptRule() {
		return getConceptAccess().getRule();
	}
	
	//Field returns Field:
	//    NonVectorField | VectorField;
	public FieldElements getFieldAccess() {
		return pField;
	}
	
	public ParserRule getFieldRule() {
		return getFieldAccess().getRule();
	}
	
	//enum EVendorName returns EVendorName:
	//                PINECONE = 'PINECONE' | MILVUS = 'MILVUS' | CHROMA = 'CHROMA' | WEAVIATE = 'WEAVIATE' | QDRANT = 'QDRANT';
	public EVendorNameElements getEVendorNameAccess() {
		return eEVendorName;
	}
	
	public EnumRule getEVendorNameRule() {
		return getEVendorNameAccess().getRule();
	}
	
	//EString returns ecore::EString:
	//    STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//Create returns Create:
	//    {Create}
	//    'CREATE' ddlConcept=Concept
	//    //(ddlNode+=[DdlMethod|EString] ( "," ddlNode+=[DdlMethod|EString])*)?
	//    ('[' ddlNode+=[DdlMethod|EString] (ddlNode+=[DdlMethod|EString])* ']' )?;
	public CreateElements getCreateAccess() {
		return pCreate;
	}
	
	public ParserRule getCreateRule() {
		return getCreateAccess().getRule();
	}
	
	//Alter returns Alter:
	//    {Alter}
	//    'ALTER' ddlConcept=Concept
	//    ('[' ddlNode+=[DdlMethod|EString] (ddlNode+=[DdlMethod|EString])* ']' )?
	//    'WHEN' '[' alterCond+=[Filter|EString] ( "," alterCond+=[Filter|EString])* ']' ';';
	public AlterElements getAlterAccess() {
		return pAlter;
	}
	
	public ParserRule getAlterRule() {
		return getAlterAccess().getRule();
	}
	
	//Drop returns Drop:
	//    {Drop}
	//    'DROP' ddlConcept=Concept (';')?
	//    ('[' ddlNode+=[DdlMethod|EString] (ddlNode+=[DdlMethod|EString])* ']' )?
	//    ('WHEN')? ('[' dropCond+=[Filter|EString] ( "," dropCond+=[Filter|EString])* ']' )? ';';
	public DropElements getDropAccess() {
		return pDrop;
	}
	
	public ParserRule getDropRule() {
		return getDropAccess().getRule();
	}
	
	//Insert returns Insert:
	//    'INSERT' 'INTO' 'COLLECTION' dmlCollection=VectorCollection
	//    'FROM' 'path' '=' path=EString
	//    ('number' 'of' 'records' '=' nofRecords=EInt)? ';';
	public InsertElements getInsertAccess() {
		return pInsert;
	}
	
	public ParserRule getInsertRule() {
		return getInsertAccess().getRule();
	}
	
	//Update returns Update:
	//    'UPDATE' 'COLLECTION' dmlCollection=VectorCollection
	//    'FROM' 'path' '=' path=EString
	//    ('number' 'of' 'records' '=' nofRecords=EInt)?
	//    'WHEN' '[' updateCond+=[Filter|EString] ( "," updateCond+=[Filter|EString])* ']' ';'
	//;
	public UpdateElements getUpdateAccess() {
		return pUpdate;
	}
	
	public ParserRule getUpdateRule() {
		return getUpdateAccess().getRule();
	}
	
	//Delete returns Delete:
	//    'DELETE' 'IN' 'COLLECTION' dmlCollection=VectorCollection
	//    ('WHEN' '[' deleteCond+=[Filter|EString] ( "," deleteCond+=[Filter|EString])* ']' )? ';';
	public DeleteElements getDeleteAccess() {
		return pDelete;
	}
	
	public ParserRule getDeleteRule() {
		return getDeleteAccess().getRule();
	}
	
	//VectorSearch returns VectorSearch:
	//    'VECTOR' 'SEARCH' 'IN' 'COLLECTION' queryCollection=VectorCollection
	//    'top' 'K' '=' topK=EInt
	//    'metric' '=' metric=EMetricType
	//    ('numUnitsProbe' '=' numUnitsProbe=EInt)? ';'
	//    'OUT' 'FIELDS' '(' outputFields+=[Field|EString] ( "," outputFields+=[Field|EString])* ')'
	//    ('WITH' 'FILTERS' '(' vecSearchFilters+=[Filter|EString] ( "," vecSearchFilters+=[Filter|EString])* ')' )? ';';
	public VectorSearchElements getVectorSearchAccess() {
		return pVectorSearch;
	}
	
	public ParserRule getVectorSearchRule() {
		return getVectorSearchAccess().getRule();
	}
	
	//NonVectorSearch returns NonVectorSearch:
	//    'QUERY' 'ON' 'COLLECTION' queryCollection=VectorCollection
	//    'top' 'K' '=' topK=EInt
	//    'OUT' 'FIELDS' '(' outputFields+=[Field|EString] ( "," outputFields+=[Field|EString])* ')'
	//    ('WITH' 'FILTERS' '[' nonVecFilters+=Filter ( "," nonVecFilters+=Filter)* ']' )? ';';
	public NonVectorSearchElements getNonVectorSearchAccess() {
		return pNonVectorSearch;
	}
	
	public ParserRule getNonVectorSearchRule() {
		return getNonVectorSearchAccess().getRule();
	}
	
	//VectorDatabase returns VectorDatabase:
	//    'VECTOR' 'DATABASE' name=EString
	//    'WITH' 'CONNECTION' connection=Connection
	//    ('description' '=' description=EString)?
	//    ('WITH' 'CLUSTERS' '[' clusters+=[Cluster|EString] (clusters+=[Cluster|EString])* ']' )?;
	public VectorDatabaseElements getVectorDatabaseAccess() {
		return pVectorDatabase;
	}
	
	public ParserRule getVectorDatabaseRule() {
		return getVectorDatabaseAccess().getRule();
	}
	
	//Cluster returns Cluster:
	//    'CLUSTER' name=EString 'IN' vectordb=[VectorDatabase|EString]
	//        ('description' '=' description=EString)?
	//        ('number' 'of' 'collections' '=' nofCollections=EInt)?
	//        ('WITH' 'COLLECTIONS' '[' collections+=[VectorCollection|EString] ( collections+=[VectorCollection|EString])* ']' )?
	//        ('WITH' 'CLUSTER' 'LIMITS' '[' clusterLimits+=ClusterLimit ( clusterLimits+=ClusterLimit)* ']' )?;
	public ClusterElements getClusterAccess() {
		return pCluster;
	}
	
	public ParserRule getClusterRule() {
		return getClusterAccess().getRule();
	}
	
	//VectorCollection returns VectorCollection:
	//    'VECTOR' 'COLLECTION' name=EString 'IN' cluster=[Cluster|EString]
	//    (dynamic?='dynamic')?
	//    ('description' '='  description=EString)?
	//    ('WITH' 'LIMITS' '[' collectionLimits+=CollectionLimit ( collectionLimits+=CollectionLimit)* ']' )?
	//    ('WITH' 'FIELDS' '[' fields+=[Field|EString] (fields+=[Field|EString])* ']' )
	//    ('WITH' 'PARTITIONS' '[' partitions+=[Partition|EString] (partitions+=[Partition|EString])* ']' )?
	//    ('podType' '=' podtype=EPodTypes)?
	//    ('podSize' '=' podSize=EPodSize)?
	//    ('podEnv' '=' podEnv=EPodEnv)?;
	public VectorCollectionElements getVectorCollectionAccess() {
		return pVectorCollection;
	}
	
	public ParserRule getVectorCollectionRule() {
		return getVectorCollectionAccess().getRule();
	}
	
	//Partition returns Partition:
	//    'PARTITION' name=EString 'FOR' colPartOwner=[VectorCollection|EString]
	//        ('description' '=' description=EString)?
	//        'partition' 'key' '=' partitionKey=[Field|EString];
	public PartitionElements getPartitionAccess() {
		return pPartition;
	}
	
	public ParserRule getPartitionRule() {
		return getPartitionAccess().getRule();
	}
	
	//EmbeddingModel returns EmbeddingModel:
	//    {EmbeddingModel}
	//    name=EString
	//    ('description' '=' description=EString)?;
	public EmbeddingModelElements getEmbeddingModelAccess() {
		return pEmbeddingModel;
	}
	
	public ParserRule getEmbeddingModelRule() {
		return getEmbeddingModelAccess().getRule();
	}
	
	//FieldLimit returns FieldLimit:
	//    'FIELD' 'LIMIT' (name=EString)?
	//    'type' '=' type=EFieldLimit
	//    'value' '=' value=EString
	//    ('description' '=' description=EString)?;
	public FieldLimitElements getFieldLimitAccess() {
		return pFieldLimit;
	}
	
	public ParserRule getFieldLimitRule() {
		return getFieldLimitAccess().getRule();
	}
	
	//CollectionLimit returns CollectionLimit:
	//    'COLLECTION' 'LIMIT' (name=EString)?
	//    'type' '=' type=EColectionLimit
	//    'value' '=' value=EString
	//    ('description' '=' description=EString)?;
	public CollectionLimitElements getCollectionLimitAccess() {
		return pCollectionLimit;
	}
	
	public ParserRule getCollectionLimitRule() {
		return getCollectionLimitAccess().getRule();
	}
	
	//ClusterLimit returns ClusterLimit:
	//    'CLUSTER' 'LIMIT' (name=EString)?
	//    'type' '=' type=EClusterLimit
	//    'value' '=' value=EString
	//    ('description' '=' description=EString)?;
	public ClusterLimitElements getClusterLimitAccess() {
		return pClusterLimit;
	}
	
	public ParserRule getClusterLimitRule() {
		return getClusterLimitAccess().getRule();
	}
	
	//IndexLimit returns IndexLimit:
	//    'INDEX' 'LIMIT' name=EString
	//    'type' '=' type=EIndexLimit
	//    'value' '=' value=EString
	//    ('description' '=' description=EString)?;
	public IndexLimitElements getIndexLimitAccess() {
		return pIndexLimit;
	}
	
	public ParserRule getIndexLimitRule() {
		return getIndexLimitAccess().getRule();
	}
	
	//VectorIndex returns VectorIndex:
	//    'VECTOR' 'INDEX' (name=EString)?
	//    ('description' '=' description=EString)?
	//    'metric' '=' metric=EMetricType
	//    'type' '=' type=EVIdxType
	//    ('WITH' 'LIMITS' '[' vIndexLimits+=IndexLimit (vIndexLimits+=IndexLimit)* ']' )?;
	public VectorIndexElements getVectorIndexAccess() {
		return pVectorIndex;
	}
	
	public ParserRule getVectorIndexRule() {
		return getVectorIndexAccess().getRule();
	}
	
	//NonVectorIndex returns NonVectorIndex:
	//    'NONVECTOR' 'INDEX' (name=EString)?
	//    'type' '=' type=ENVIdxType
	//    ('description' '=' description=EString)?;
	public NonVectorIndexElements getNonVectorIndexAccess() {
		return pNonVectorIndex;
	}
	
	public ParserRule getNonVectorIndexRule() {
		return getNonVectorIndexAccess().getRule();
	}
	
	//Connection returns Connection:
	//    'CONNECTION'
	//    'host' '=' host=EString
	//    'port' '=' port=EInt
	//    ('apiKey' '=' apiKey=EString)?
	//    ('username' '=' username=EString)?
	//    ('password' '=' password=EString)?
	//    ('region' '=' region=EString)?
	//    ('userRole' '=' userRole=EString)?
	//    ('userPrivillege' '=' userPrivillege=EString)?
	//    ('cloud' '=' cloud=EString)?
	//    ('environment' '=' environment=EString)?;
	public ConnectionElements getConnectionAccess() {
		return pConnection;
	}
	
	public ParserRule getConnectionRule() {
		return getConnectionAccess().getRule();
	}
	
	//EInt returns ecore::EInt:
	//    '-'? INT;
	public EIntElements getEIntAccess() {
		return pEInt;
	}
	
	public ParserRule getEIntRule() {
		return getEIntAccess().getRule();
	}
	
	//EBoolean returns ecore::EBoolean:
	//    'true' | 'false';
	public EBooleanElements getEBooleanAccess() {
		return pEBoolean;
	}
	
	public ParserRule getEBooleanRule() {
		return getEBooleanAccess().getRule();
	}
	
	//enum EPodTypes returns EPodTypes:
	//                S1 = 'S1' | P1 = 'P1' | P2 = 'P2';
	public EPodTypesElements getEPodTypesAccess() {
		return eEPodTypes;
	}
	
	public EnumRule getEPodTypesRule() {
		return getEPodTypesAccess().getRule();
	}
	
	//enum EPodSize returns EPodSize:
	//                X1 = 'X1' | X2 = 'X2' | X4 = 'X4' | X8 = 'X8';
	public EPodSizeElements getEPodSizeAccess() {
		return eEPodSize;
	}
	
	public EnumRule getEPodSizeRule() {
		return getEPodSizeAccess().getRule();
	}
	
	//enum EPodEnv returns EPodEnv:
	//                US_W1_GCP = 'US_W1_GCP' | US_C1_GCP = 'US_C1_GCP' | US_W4_GCP = 'US_W4_GCP' | US_E4_GCP = 'US_E4_GCP' | NA_NE1_GCP = 'NA_NE1_GCP' | A_NE1_GCP = 'A_NE1_GCP' | A_SE1_GCP = 'A_SE1_GCP' | US_E1_GCP = 'US_E1_GCP' | EU_W1_GCP = 'EU_W1_GCP' | EU_W4_GCP = 'EU_W4_GCP' | US_E1_AWS = 'US_E1_AWS' | AZURE = 'AZURE';
	public EPodEnvElements getEPodEnvAccess() {
		return eEPodEnv;
	}
	
	public EnumRule getEPodEnvRule() {
		return getEPodEnvAccess().getRule();
	}
	
	//NonVectorField returns NonVectorField:
	//    'NONVECTOR' 'FIELD' (name=EString)? 'IN' colFieldOwner=[VectorCollection|EString]
	//    (isPrimary?='primary')?
	//    'type' '=' type=EScalarDType
	//    ('WITH' 'LIMITS' '[' fieldLimits+=FieldLimit (fieldLimits+=FieldLimit)* ']' )?
	//    ('WITH' 'NONVECTOR' 'INDEXES' '[' nonVectorIndexes+=NonVectorIndex (nonVectorIndexes+=NonVectorIndex)* ']' )?;
	public NonVectorFieldElements getNonVectorFieldAccess() {
		return pNonVectorField;
	}
	
	public ParserRule getNonVectorFieldRule() {
		return getNonVectorFieldAccess().getRule();
	}
	
	//VectorField returns VectorField:
	//    'VECTOR' 'FIELD' (name=EString)? 'IN' colFieldOwner=[VectorCollection|EString]
	//    (isPrimary?='primary')?
	//    'type' '=' type=EVectorDType
	//    ('WITH' 'EMBEDDING' 'MODEL' '=' embModel=[EmbeddingModel|EString])?
	//    ('WITH' 'LIMITS' '[' fieldLimits+=FieldLimit (fieldLimits+=FieldLimit)* ']' )?
	//    ('WITH' 'VECTOR' 'INDEXES' '[' vectorIndexes+=VectorIndex (vectorIndexes+=VectorIndex)* ']' )?;
	public VectorFieldElements getVectorFieldAccess() {
		return pVectorField;
	}
	
	public ParserRule getVectorFieldRule() {
		return getVectorFieldAccess().getRule();
	}
	
	//enum EScalarDType returns EScalarDType:
	//                INT = 'INT' | VARCHAR = 'VARCHAR' | DOUBLE = 'DOUBLE' | FLOAT = 'FLOAT' | DATE = 'DATE' | DATETIME = 'DATETIME' | JSON = 'JSON';
	public EScalarDTypeElements getEScalarDTypeAccess() {
		return eEScalarDType;
	}
	
	public EnumRule getEScalarDTypeRule() {
		return getEScalarDTypeAccess().getRule();
	}
	
	//enum EVectorDType returns EVectorDType:
	//                BINARY_VECTOR = 'BINARY_VECTOR' | FLOAT_VECTOR = 'FLOAT_VECTOR';
	public EVectorDTypeElements getEVectorDTypeAccess() {
		return eEVectorDType;
	}
	
	public EnumRule getEVectorDTypeRule() {
		return getEVectorDTypeAccess().getRule();
	}
	
	//enum EFieldLimit returns EFieldLimit:
	//                VECTORDIM = 'VECTORDIM' | ARRAYLEN = 'ARRAYLEN' | MAXSIZE = 'MAXSIZE';
	public EFieldLimitElements getEFieldLimitAccess() {
		return eEFieldLimit;
	}
	
	public EnumRule getEFieldLimitRule() {
		return getEFieldLimitAccess().getRule();
	}
	
	//enum EColectionLimit returns EColectionLimit:
	//                NOFPARTITIONS = 'NOFPARTITIONS' | NOFFIELDS = 'NOFFIELDS' | NOFSHARDS = 'NOFSHARDS' | VECTORDIM = 'VECTORDIM';
	public EColectionLimitElements getEColectionLimitAccess() {
		return eEColectionLimit;
	}
	
	public EnumRule getEColectionLimitRule() {
		return getEColectionLimitAccess().getRule();
	}
	
	//enum EClusterLimit returns EClusterLimit:
	//                NOFCOLLECTIONS = 'NOFCOLLECTIONS';
	public EClusterLimitElements getEClusterLimitAccess() {
		return eEClusterLimit;
	}
	
	public EnumRule getEClusterLimitRule() {
		return getEClusterLimitAccess().getRule();
	}
	
	//enum EIndexLimit returns EIndexLimit:
	//                NOFCLUSTERUNIT = 'NOFCLUSTERUNIT' | NOFFACTORSPQ = 'NOFFACTORSPQ' | MAXNODEDGRE = 'MAXNODEDGRE';
	public EIndexLimitElements getEIndexLimitAccess() {
		return eEIndexLimit;
	}
	
	public EnumRule getEIndexLimitRule() {
		return getEIndexLimitAccess().getRule();
	}
	
	//enum EMetricType returns EMetricType:
	//                EUCLIDEAN = 'EUCLIDEAN' | MANHATTAN = 'MANHATTAN' | DOT = 'DOT' | COSINE = 'COSINE';
	public EMetricTypeElements getEMetricTypeAccess() {
		return eEMetricType;
	}
	
	public EnumRule getEMetricTypeRule() {
		return getEMetricTypeAccess().getRule();
	}
	
	//enum EVIdxType returns EVIdxType:
	//                FLAT = 'FLAT' | IVF_FLAT = 'IVF_FLAT' | IVF_SQ8 = 'IVF_SQ8' | IVF_PQ = 'IVF_PQ' | HNSW = 'HNSW' | SCANN = 'SCANN';
	public EVIdxTypeElements getEVIdxTypeAccess() {
		return eEVIdxType;
	}
	
	public EnumRule getEVIdxTypeRule() {
		return getEVIdxTypeAccess().getRule();
	}
	
	//enum ENVIdxType returns ENVIdxType:
	//                STANDARD = 'STANDARD' | FULL_TEXT = 'FULL_TEXT' | INTEGER = 'INTEGER' | PARAM_INT = 'PARAM_INT';
	public ENVIdxTypeElements getENVIdxTypeAccess() {
		return eENVIdxType;
	}
	
	public EnumRule getENVIdxTypeRule() {
		return getENVIdxTypeAccess().getRule();
	}
	
	//Filter returns Filter:
	//        filterField=[Concept|EString] operator=EOperator value=EString;
	public FilterElements getFilterAccess() {
		return pFilter;
	}
	
	public ParserRule getFilterRule() {
		return getFilterAccess().getRule();
	}
	
	//enum EOperator returns EOperator:
	//                AND = 'AND' | OR = 'OR' | NOT = 'NOT' | LIKE = 'LIKE' | EQ = '=' | NEQ = '!=' | GT = '>' | GTE = '>=' | LT = '<' | LTE = '<=';
	public EOperatorElements getEOperatorAccess() {
		return eEOperator;
	}
	
	public EnumRule getEOperatorRule() {
		return getEOperatorAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
